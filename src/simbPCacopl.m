clear
clc

%%
%Modelo em parâmetros concentrados, com acoplamento

syms k1 k2 K1 K2 L L1 u1 u2 u3 vL wL teta1 teta2 teta3 M3 Mb2 M1 g dm l2
L2 = L - L1;

%%
%Equação final de movimento:
%Mac(uTil)*uppTil + Gac(uTil,upTil) + Kac*uTil + FuAc(uTil) - W +
%   + Cac*upTil + FatAc(uTil,upTil) + FrubAc(uTil,upTil) = Bac*Uc
%Propriedades:
%(1) Mac(uTil) = M1ac + M2ac(uTil)
%(2) M2ac(0) = 0

%%
%Energia potencial:

delta = sqrt(vL^2 + wL^2);
Delta1 = delta^2/(L1+u2-u1);
Delta2 = delta^2/(L2+u3-u2);
U = (1/2)*k1*(u2 - u1 + Delta1)^2 + (1/2)*k2*(u3 - u2 + Delta2)^2 +...
    (1/2)*K1*(teta1 - teta2)^2 + (1/2)*K2*(teta2 - teta3)^2 -...
    M3*g*u1 - (Mb2+dm)*g*u2 - M1*g*u3;

%%
%Derivadas:
dUdu1 = k1*( (vL^2 + wL^2)/(L1 - u1 + u2)^2 - 1 )*( u2 - u1 + (vL^2 + wL^2)/(L1 - u1 + u2) ) - M3*g;
%{
dUdu1Ref = simplify(diff(U,u1));
erro = simplify(dUdu1Ref - dUdu1);
%}
dUdu2 = k2*( (vL^2 + wL^2)/(L - L1 - u2 + u3)^2 - 1 )*( u3 - u2 + (vL^2 + wL^2)/(L - L1 - u2 + u3) ) +...
    k1*( 1 - (vL^2 + wL^2)/(L1 - u1 + u2)^2 )*( u2 - u1 + (vL^2 + wL^2)/(L1 - u1 + u2) ) - g*(Mb2 + dm);
%{
dUdu2Ref = simplify(diff(U,u2));
erro = simplify(dUdu2Ref - dUdu2);
%}
dUdu3 = k2*( 1 - (vL^2 + wL^2)/(L - L1 - u2 + u3)^2 )*( u3 - u2 + (vL^2 + wL^2)/(L - L1 - u2 + u3) ) - M1*g;
%{
dUdu3Ref = simplify(diff(U,u3));
erro = simplify(dUdu3Ref - dUdu3);
%}
dUdvL = 2*k2*vL*( u3 - u2 + (vL^2 + wL^2)/(L - L1 - u2 + u3) )/( L - L1 - u2 + u3 ) +...
    2*k1*vL*( u2 - u1 + (vL^2 + wL^2)/(L1 - u1 + u2) )/( L1 - u1 + u2 );
%{
dUdvLRef = simplify(diff(U,vL));
erro = simplify(dUdvLRef - dUdvL);
%}
dUdwL = 2*k2*wL*( u3 - u2 + (vL^2 + wL^2)/(L - L1 - u2 + u3) )/(L - L1 - u2 + u3) +...
    2*k1*wL*( u2 - u1 + (vL^2 + wL^2)/(L1 - u1 + u2) )/(L1 - u1 + u2);
%{
dUdwLRef = simplify(diff(U,wL));
erro = simplify(dUdwLRef - dUdwL);
%}
dUdteta1 = K1*(teta1 - teta2);
%{
dUdteta1Ref = simplify(diff(U,teta1));
erro = simplify(dUdteta1Ref - dUdteta1);
%}
dUdteta2 = K2*(teta2 - teta3) - K1*(teta1 - teta2);
%{
dUdteta2Ref = simplify(diff(U,teta2));
erro = simplify(dUdteta2Ref - dUdteta2);
%}
dUdteta3 = -K2*(teta2 - teta3);
%{
dUdteta3Ref = simplify(diff(U,teta3));
erro = simplify(dUdteta3Ref - dUdteta3);
%}

%Força peso:
Wtil = [M3*g, 0, g*(Mb2 + dm), 0, 0, 0, M1*g, 0].';

%%
%Separação entre termos lineares e não lineares:
dUdu1ln = k1*(u1 - u2) - M3*g;
dUdu1nln = k1*( (vL^2 + wL^2)/(L1 - u1 + u2)^2 )*( u2 - u1 + (vL^2 + wL^2)/(L1 - u1 + u2) ) -...
    k1*(vL^2 + wL^2)/(L1 - u1 + u2);
%{
erro = simplify(dUdu1 - (dUdu1ln + dUdu1nln));
subsdUdu1nln = simplify(subs(dUdu1nln,[vL, wL],[0, 0]));
%}
dUdu2ln = k2*( u2 - u3 ) + k1*( u2 - u1 ) - g*(Mb2 + dm);
dUdu2nln = k2*( (vL^2 + wL^2)/(L - L1 - u2 + u3)^2 )*( u3 - u2 ) +...
    k2*( (vL^2 + wL^2)/(L - L1 - u2 + u3)^2 - 1 )*( (vL^2 + wL^2)/(L - L1 - u2 + u3) ) +...
    k1*( -(vL^2 + wL^2)/(L1 - u1 + u2)^2 )*( u2 - u1 ) +...
    k1*( 1 - (vL^2 + wL^2)/(L1 - u1 + u2)^2 )*( (vL^2 + wL^2)/(L1 - u1 + u2) );
%{
erro = simplify(dUdu2 - (dUdu2ln + dUdu2nln));
subsdUdu2nln = simplify(subs(dUdu2nln,[vL, wL],[0, 0]));
%}
dUdu3ln = k2*( u3 - u2 ) - M1*g;
dUdu3nln = k2*( -(vL^2 + wL^2)/(L - L1 - u2 + u3)^2 )*( u3 - u2 ) +...
    k2*( 1 - (vL^2 + wL^2)/(L - L1 - u2 + u3)^2 )*( (vL^2 + wL^2)/(L - L1 - u2 + u3) );
%{
erro = simplify(dUdu3 - (dUdu3ln + dUdu3nln));
subsdUdu3nln = simplify(subs(dUdu3nln,[vL, wL],[0, 0]));
%}

%%
%Expressões matriciais referentes à energia potencial U:
%Obs.: 
uTil = [u1, teta1, u2, vL, wL, teta2, u3, teta3].';

dUduTil = [dUdu1; dUdteta1; dUdu2; dUdvL; dUdwL; dUdteta2; dUdu3; dUdteta3 ];
dUduTilln = [dUdu1ln; dUdteta1; dUdu2ln; 0; 0; dUdteta2; dUdu3ln; dUdteta3 ];
dUduTilnln = [dUdu1nln; 0; dUdu2nln; dUdvL; dUdwL; 0; dUdu3nln; 0 ];
%{
erro = simplify(dUduTil - (dUduTilln + dUduTilnln));
%}

K = [k1,   0,   -k1, 0, 0,     0,   0,   0;
      0,  K1,     0, 0, 0,   -K1,   0,   0;
    -k1,   0, k1+k2, 0, 0,     0, -k2,   0; 
      0,   0,     0, 0, 0,     0,   0,   0; 
      0,   0,     0, 0, 0,     0,   0,   0; 
      0, -K1,     0, 0, 0, K1+K2,   0, -K2; 
      0,   0,   -k2, 0, 0,     0,  k2,   0; 
      0,   0,     0, 0, 0,   -K2,   0,  K2];
%{
erro = simplify(dUduTilln - K*uTil);
simetria = simplify(K - K.');
%}

Id8 = eye(8);
fu1 = @(uTil)(Id8(1,:)*uTil);
fteta1 = @(uTil)(Id8(2,:)*uTil);
fu2 = @(uTil)(Id8(3,:)*uTil);
fvL = @(uTil)(Id8(4,:)*uTil);
fwL = @(uTil)(Id8(5,:)*uTil);
fteta2 = @(uTil)(Id8(6,:)*uTil);
fu3 = @(uTil)(Id8(7,:)*uTil);
fteta3 = @(uTil)(Id8(8,:)*uTil);

Fu = [k1*( (vL^2 + wL^2)/(L1 - u1 + u2)^2 )*( u2 - u1 + (vL^2 + wL^2)/(L1 - u1 + u2) ) - k1*(vL^2 + wL^2)/(L1 - u1 + u2); 
      0; 
      k2*( (vL^2 + wL^2)/(L - L1 - u2 + u3)^2 )*( u3 - u2 ) + k2*( (vL^2 + wL^2)/(L - L1 - u2 + u3)^2 - 1 )*( (vL^2 + wL^2)/(L - L1 - u2 + u3) ) + k1*( -(vL^2 + wL^2)/(L1 - u1 + u2)^2 )*( u2 - u1 ) + k1*( 1 - (vL^2 + wL^2)/(L1 - u1 + u2)^2 )*( (vL^2 + wL^2)/(L1 - u1 + u2) );
      2*k2*vL*( u3 - u2 + (vL^2 + wL^2)/(L - L1 - u2 + u3) )/( L - L1 - u2 + u3 ) + 2*k1*vL*( u2 - u1 + (vL^2 + wL^2)/(L1 - u1 + u2) )/( L1 - u1 + u2 );
      2*k2*wL*( u3 - u2 + (vL^2 + wL^2)/(L - L1 - u2 + u3) )/( L - L1 - u2 + u3 ) + 2*k1*wL*( u2 - u1 + (vL^2 + wL^2)/(L1 - u1 + u2) )/( L1 - u1 + u2 ); 
      0; 
      k2*( -(vL^2 + wL^2)/(L - L1 - u2 + u3)^2 )*( u3 - u2 ) + k2*( 1 - (vL^2 + wL^2)/(L - L1 - u2 + u3)^2 )*( (vL^2 + wL^2)/(L - L1 - u2 + u3) ); 
      0];
%{
erro = simplify(dUduTil - (K*uTil + Fu));
%}

syms L2
subsFuRef = simplify(subs(Fu,L,L1+L2));
subsFu = [ (k1*(vL^2 + wL^2)*(L1*u1 - L1*u2 - L1^2 + vL^2 + wL^2))/(L1 - u1 + u2)^3;
    0;
    (k2*(vL^2 + wL^2)*((vL^2 + wL^2)/(L2 - u2 + u3)^2 - 1))/(L2 - u2 + u3) - (k1*(vL^2 + wL^2)*((vL^2 + wL^2)/(L1 - u1 + u2)^2 - 1))/(L1 - u1 + u2) + (k1*(vL^2 + wL^2)*(u1 - u2))/(L1 - u1 + u2)^2 - (k2*(vL^2 + wL^2)*(u2 - u3))/(L2 - u2 + u3)^2;
    (2*k1*vL*(u2 - u1 + (vL^2 + wL^2)/(L1 - u1 + u2)))/(L1 - u1 + u2) + (2*k2*vL*(u3 - u2 + (vL^2 + wL^2)/(L2 - u2 + u3)))/(L2 - u2 + u3);
    (2*k1*wL*(u2 - u1 + (vL^2 + wL^2)/(L1 - u1 + u2)))/(L1 - u1 + u2) + (2*k2*wL*(u3 - u2 + (vL^2 + wL^2)/(L2 - u2 + u3)))/(L2 - u2 + u3);
    0;
    -(k2*(vL^2 + wL^2)*(L2*u2 - L2*u3 - L2^2 + vL^2 + wL^2))/(L2 - u2 + u3)^3;
    0];

fFu = @(uTil)(...
    [k1*( (fvL(uTil)^2 + fwL(uTil)^2)/(L1 - fu1(uTil) + fu2(uTil))^2 )*( fu2(uTil) - fu1(uTil) + (fvL(uTil)^2 + fwL(uTil)^2)/(L1 - fu1(uTil) + fu2(uTil)) ) - k1*(fvL(uTil)^2 + fwL(uTil)^2)/(L1 - fu1(uTil) + fu2(uTil)); 
    0; 
    k2*( (fvL(uTil)^2 + fwL(uTil)^2)/(L - L1 - fu2(uTil) + fu3(uTil))^2 )*( fu3(uTil) - fu2(uTil) ) + k2*( (fvL(uTil)^2 + fwL(uTil)^2)/(L - L1 - fu2(uTil) + fu3(uTil))^2 - 1 )*( (fvL(uTil)^2 + fwL(uTil)^2)/(L - L1 - fu2(uTil) + fu3(uTil)) ) + k1*( -(fvL(uTil)^2 + fwL(uTil)^2)/(L1 - fu1(uTil) + fu2(uTil))^2 )*( fu2(uTil) - fu1(uTil) ) + k1*( 1 - (fvL(uTil)^2 + fwL(uTil)^2)/(L1 - fu1(uTil) + fu2(uTil))^2 )*( (fvL(uTil)^2 + fwL(uTil)^2)/(L1 - fu1(uTil) + fu2(uTil)) );
    2*k2*fvL(uTil)*( fu3(uTil) - fu2(uTil) + (fvL(uTil)^2 + fwL(uTil)^2)/(L - L1 - fu2(uTil) + fu3(uTil)) )/( L - L1 - fu2(uTil) + fu3(uTil) ) + 2*k1*fvL(uTil)*( fu2(uTil) - fu1(uTil) + (fvL(uTil)^2 + fwL(uTil)^2)/(L1 - fu1(uTil) + fu2(uTil)) )/( L1 - fu1(uTil) + fu2(uTil) );
    2*k2*fwL(uTil)*( fu3(uTil) - fu2(uTil) + (fvL(uTil)^2 + fwL(uTil)^2)/(L - L1 - fu2(uTil) + fu3(uTil)) )/( L - L1 - fu2(uTil) + fu3(uTil) ) + 2*k1*fwL(uTil)*( fu2(uTil) - fu1(uTil) + (fvL(uTil)^2 + fwL(uTil)^2)/(L1 - fu1(uTil) + fu2(uTil)) )/( L1 - fu1(uTil) + fu2(uTil) ); 
    0; 
    k2*( -(fvL(uTil)^2 + fwL(uTil)^2)/(L - L1 - fu2(uTil) + fu3(uTil))^2 )*( fu3(uTil) - fu2(uTil) ) + k2*( 1 - (fvL(uTil)^2 + fwL(uTil)^2)/(L - L1 - fu2(uTil) + fu3(uTil))^2 )*( (fvL(uTil)^2 + fwL(uTil)^2)/(L - L1 - fu2(uTil) + fu3(uTil)) ); 
    0]);

dFuduTilT = [ (k1*(vL^2 + wL^2)*(2*L1*u1 - 2*L1*u2 - 2*L1^2 + 3*vL^2 + 3*wL^2))/(L1 - u1 + u2)^4, 0,                                                                                                                                                                                                                                                                                                                                                         -(k1*(vL^2 + wL^2)*(2*L1*u1 - 2*L1*u2 - 2*L1^2 + 3*vL^2 + 3*wL^2))/(L1 - u1 + u2)^4,                                                                                                                                                                                                                                               (2*k1*vL*(L1*u1 - L1*u2 - L1^2 + 2*vL^2 + 2*wL^2))/(L1 - u1 + u2)^3,                                                                                                                                                                                                                                               (2*k1*wL*(L1*u1 - L1*u2 - L1^2 + 2*vL^2 + 2*wL^2))/(L1 - u1 + u2)^3, 0,                                                                                                                          0, 0;

             -(k1*(vL^2 + wL^2)*(2*L1*u1 - 2*L1*u2 - 2*L1^2 + 3*vL^2 + 3*wL^2))/(L1 - u1 + u2)^4, 0, (2*k2*(vL^2 + wL^2)^2)/(L - L1 - u2 + u3)^4 - (k1*(vL^2 + wL^2))/(L1 - u1 + u2)^2 + (2*k1*(vL^2 + wL^2)^2)/(L1 - u1 + u2)^4 - (k2*(vL^2 + wL^2))/(L - L1 - u2 + u3)^2 + (k1*(vL^2 + wL^2)*((vL^2 + wL^2)/(L1 - u1 + u2)^2 - 1))/(L1 - u1 + u2)^2 - (2*k2*(vL^2 + wL^2)*(u2 - u3))/(L - L1 - u2 + u3)^3 + (k2*(vL^2 + wL^2)*((vL^2 + wL^2)/(L - L1 - u2 + u3)^2 - 1))/(L - L1 - u2 + u3)^2 - (2*k1*(vL^2 + wL^2)*(u1 - u2))/(L1 - u1 + u2)^3, (2*k2*vL*((vL^2 + wL^2)/(L - L1 - u2 + u3)^2 - 1))/(L - L1 - u2 + u3) + (2*k1*vL*(u1 - u2))/(L1 - u1 + u2)^2 + (2*k2*vL*(vL^2 + wL^2))/(L - L1 - u2 + u3)^3 - (2*k1*vL*(vL^2 + wL^2))/(L1 - u1 + u2)^3 - (2*k1*vL*((vL^2 + wL^2)/(L1 - u1 + u2)^2 - 1))/(L1 - u1 + u2) - (2*k2*vL*(u2 - u3))/(L - L1 - u2 + u3)^2, (2*k2*wL*((vL^2 + wL^2)/(L - L1 - u2 + u3)^2 - 1))/(L - L1 - u2 + u3) + (2*k1*wL*(u1 - u2))/(L1 - u1 + u2)^2 + (2*k2*wL*(vL^2 + wL^2))/(L - L1 - u2 + u3)^3 - (2*k1*wL*(vL^2 + wL^2))/(L1 - u1 + u2)^3 - (2*k1*wL*((vL^2 + wL^2)/(L1 - u1 + u2)^2 - 1))/(L1 - u1 + u2) - (2*k2*wL*(u2 - u3))/(L - L1 - u2 + u3)^2, 0, -(k2*(vL^2 + wL^2)*(2*L*u2 - 2*L*u3 - 2*L1*u2 + 2*L1*u3 - 2*L^2 - 2*L1^2 + 3*vL^2 + 3*wL^2 + 4*L*L1))/(L - L1 - u2 + u3)^4, 0;
                             (2*k1*vL*(L1*u1 - L1*u2 - L1^2 + 2*vL^2 + 2*wL^2))/(L1 - u1 + u2)^3, 0,                                                                                                                                                   (2*k2*vL*((vL^2 + wL^2)/(L - L1 - u2 + u3)^2 - 1))/(L - L1 - u2 + u3) + (2*k2*vL*(u3 - u2 + (vL^2 + wL^2)/(L - L1 - u2 + u3)))/(L - L1 - u2 + u3)^2 - (2*k1*vL*((vL^2 + wL^2)/(L1 - u1 + u2)^2 - 1))/(L1 - u1 + u2) - (2*k1*vL*(u2 - u1 + (vL^2 + wL^2)/(L1 - u1 + u2)))/(L1 - u1 + u2)^2,                                                                                                         (2*k1*(u2 - u1 + (vL^2 + wL^2)/(L1 - u1 + u2)))/(L1 - u1 + u2) + (4*k2*vL^2)/(L - L1 - u2 + u3)^2 + (2*k2*(u3 - u2 + (vL^2 + wL^2)/(L - L1 - u2 + u3)))/(L - L1 - u2 + u3) + (4*k1*vL^2)/(L1 - u1 + u2)^2,                                                                                                                                                                                                                                                 (4*k1*vL*wL)/(L1 - u1 + u2)^2 + (4*k2*vL*wL)/(L - L1 - u2 + u3)^2, 0,                      -(2*k2*vL*(L*u2 - L*u3 - L1*u2 + L1*u3 - L^2 - L1^2 + 2*vL^2 + 2*wL^2 + 2*L*L1))/(L - L1 - u2 + u3)^3, 0;
                             (2*k1*wL*(L1*u1 - L1*u2 - L1^2 + 2*vL^2 + 2*wL^2))/(L1 - u1 + u2)^3, 0,                                                                                                                                                   (2*k2*wL*((vL^2 + wL^2)/(L - L1 - u2 + u3)^2 - 1))/(L - L1 - u2 + u3) + (2*k2*wL*(u3 - u2 + (vL^2 + wL^2)/(L - L1 - u2 + u3)))/(L - L1 - u2 + u3)^2 - (2*k1*wL*((vL^2 + wL^2)/(L1 - u1 + u2)^2 - 1))/(L1 - u1 + u2) - (2*k1*wL*(u2 - u1 + (vL^2 + wL^2)/(L1 - u1 + u2)))/(L1 - u1 + u2)^2,                                                                                                                                                                                                                                                 (4*k1*vL*wL)/(L1 - u1 + u2)^2 + (4*k2*vL*wL)/(L - L1 - u2 + u3)^2,                                                                                                         (2*k1*(u2 - u1 + (vL^2 + wL^2)/(L1 - u1 + u2)))/(L1 - u1 + u2) + (4*k2*wL^2)/(L - L1 - u2 + u3)^2 + (2*k2*(u3 - u2 + (vL^2 + wL^2)/(L - L1 - u2 + u3)))/(L - L1 - u2 + u3) + (4*k1*wL^2)/(L1 - u1 + u2)^2, 0,                      -(2*k2*wL*(L*u2 - L*u3 - L1*u2 + L1*u3 - L^2 - L1^2 + 2*vL^2 + 2*wL^2 + 2*L*L1))/(L - L1 - u2 + u3)^3, 0;

                                                                                               0, 0,                                                                                                                                                                                                                                                                                                                  -(k2*(vL^2 + wL^2)*(2*L*u2 - 2*L*u3 - 2*L1*u2 + 2*L1*u3 - 2*L^2 - 2*L1^2 + 3*vL^2 + 3*wL^2 + 4*L*L1))/(L - L1 - u2 + u3)^4,                                                                                                                                                                                                             -(2*k2*vL*(L*u2 - L*u3 - L1*u2 + L1*u3 - L^2 - L1^2 + 2*vL^2 + 2*wL^2 + 2*L*L1))/(L - L1 - u2 + u3)^3,                                                                                                                                                                                                             -(2*k2*wL*(L*u2 - L*u3 - L1*u2 + L1*u3 - L^2 - L1^2 + 2*vL^2 + 2*wL^2 + 2*L*L1))/(L - L1 - u2 + u3)^3, 0,  (k2*(vL^2 + wL^2)*(2*L*u2 - 2*L*u3 - 2*L1*u2 + 2*L1*u3 - 2*L^2 - 2*L1^2 + 3*vL^2 + 3*wL^2 + 4*L*L1))/(L - L1 - u2 + u3)^4, 0;


%{
dFuduTilTRef = simplify(jacobian(Fu,uTil));
erro1 = simplify(dFuduTilTRef - dFuduTilT);                                                                
%}
                                                                                                                                                                                           
fdFuduTilT = @(uTil)(...
    [(k1*(fvL(uTil)^2 + fwL(uTil)^2)*(2*L1*fu1(uTil) - 2*L1*fu2(uTil) - 2*L1^2 + 3*fvL(uTil)^2 + 3*fwL(uTil)^2))/(L1 - fu1(uTil) + fu2(uTil))^4, 0, -(k1*(fvL(uTil)^2 + fwL(uTil)^2)*(2*L1*fu1(uTil) - 2*L1*fu2(uTil) - 2*L1^2 + 3*fvL(uTil)^2 + 3*fwL(uTil)^2))/(L1 - fu1(uTil) + fu2(uTil))^4, (2*k1*fvL(uTil)*(L1*fu1(uTil) - L1*fu2(uTil) - L1^2 + 2*fvL(uTil)^2 + 2*fwL(uTil)^2))/(L1 - fu1(uTil) + fu2(uTil))^3, (2*k1*fwL(uTil)*(L1*fu1(uTil) - L1*fu2(uTil) - L1^2 + 2*fvL(uTil)^2 + 2*fwL(uTil)^2))/(L1 - fu1(uTil) + fu2(uTil))^3, 0, 0, 0;
     0, 0, 0, 0, 0, 0, 0, 0;
     -(k1*(fvL(uTil)^2 + fwL(uTil)^2)*(2*L1*fu1(uTil) - 2*L1*fu2(uTil) - 2*L1^2 + 3*fvL(uTil)^2 + 3*fwL(uTil)^2))/(L1 - fu1(uTil) + fu2(uTil))^4, 0, (2*k2*(fvL(uTil)^2 + fwL(uTil)^2)^2)/(L - L1 - fu2(uTil) + fu3(uTil))^4 - (k1*(fvL(uTil)^2 + fwL(uTil)^2))/(L1 - fu1(uTil) + fu2(uTil))^2 + (2*k1*(fvL(uTil)^2 + fwL(uTil)^2)^2)/(L1 - fu1(uTil) + fu2(uTil))^4 - (k2*(fvL(uTil)^2 + fwL(uTil)^2))/(L - L1 - fu2(uTil) + fu3(uTil))^2 + (k1*(fvL(uTil)^2 + fwL(uTil)^2)*((fvL(uTil)^2 + fwL(uTil)^2)/(L1 - fu1(uTil) + fu2(uTil))^2 - 1))/(L1 - fu1(uTil) + fu2(uTil))^2 - (2*k2*(fvL(uTil)^2 + fwL(uTil)^2)*(fu2(uTil) - fu3(uTil)))/(L - L1 - fu2(uTil) + fu3(uTil))^3 + (k2*(fvL(uTil)^2 + fwL(uTil)^2)*((fvL(uTil)^2 + fwL(uTil)^2)/(L - L1 - fu2(uTil) + fu3(uTil))^2 - 1))/(L - L1 - fu2(uTil) + fu3(uTil))^2 - (2*k1*(fvL(uTil)^2 + fwL(uTil)^2)*(fu1(uTil) - fu2(uTil)))/(L1 - fu1(uTil) + fu2(uTil))^3, (2*k2*fvL(uTil)*((fvL(uTil)^2 + fwL(uTil)^2)/(L - L1 - fu2(uTil) + fu3(uTil))^2 - 1))/(L - L1 - fu2(uTil) + fu3(uTil)) + (2*k1*fvL(uTil)*(fu1(uTil) - fu2(uTil)))/(L1 - fu1(uTil) + fu2(uTil))^2 + (2*k2*fvL(uTil)*(fvL(uTil)^2 + fwL(uTil)^2))/(L - L1 - fu2(uTil) + fu3(uTil))^3 - (2*k1*fvL(uTil)*(fvL(uTil)^2 + fwL(uTil)^2))/(L1 - fu1(uTil) + fu2(uTil))^3 - (2*k1*fvL(uTil)*((fvL(uTil)^2 + fwL(uTil)^2)/(L1 - fu1(uTil) + fu2(uTil))^2 - 1))/(L1 - fu1(uTil) + fu2(uTil)) - (2*k2*fvL(uTil)*(fu2(uTil) - fu3(uTil)))/(L - L1 - fu2(uTil) + fu3(uTil))^2, (2*k2*fwL(uTil)*((fvL(uTil)^2 + fwL(uTil)^2)/(L - L1 - fu2(uTil) + fu3(uTil))^2 - 1))/(L - L1 - fu2(uTil) + fu3(uTil)) + (2*k1*fwL(uTil)*(fu1(uTil) - fu2(uTil)))/(L1 - fu1(uTil) + fu2(uTil))^2 + (2*k2*fwL(uTil)*(fvL(uTil)^2 + fwL(uTil)^2))/(L - L1 - fu2(uTil) + fu3(uTil))^3 - (2*k1*fwL(uTil)*(fvL(uTil)^2 + fwL(uTil)^2))/(L1 - fu1(uTil) + fu2(uTil))^3 - (2*k1*fwL(uTil)*((fvL(uTil)^2 + fwL(uTil)^2)/(L1 - fu1(uTil) + fu2(uTil))^2 - 1))/(L1 - fu1(uTil) + fu2(uTil)) - (2*k2*fwL(uTil)*(fu2(uTil) - fu3(uTil)))/(L - L1 - fu2(uTil) + fu3(uTil))^2, 0, -(k2*(fvL(uTil)^2 + fwL(uTil)^2)*(2*L*fu2(uTil) - 2*L*fu3(uTil) - 2*L1*fu2(uTil) + 2*L1*fu3(uTil) - 2*L^2 - 2*L1^2 + 3*fvL(uTil)^2 + 3*fwL(uTil)^2 + 4*L*L1))/(L - L1 - fu2(uTil) + fu3(uTil))^4, 0;
     (2*k1*fvL(uTil)*(L1*fu1(uTil) - L1*fu2(uTil) - L1^2 + 2*fvL(uTil)^2 + 2*fwL(uTil)^2))/(L1 - fu1(uTil) + fu2(uTil))^3, 0, (2*k2*fvL(uTil)*((fvL(uTil)^2 + fwL(uTil)^2)/(L - L1 - fu2(uTil) + fu3(uTil))^2 - 1))/(L - L1 - fu2(uTil) + fu3(uTil)) + (2*k2*fvL(uTil)*(fu3(uTil) - fu2(uTil) + (fvL(uTil)^2 + fwL(uTil)^2)/(L - L1 - fu2(uTil) + fu3(uTil))))/(L - L1 - fu2(uTil) + fu3(uTil))^2 - (2*k1*fvL(uTil)*((fvL(uTil)^2 + fwL(uTil)^2)/(L1 - fu1(uTil) + fu2(uTil))^2 - 1))/(L1 - fu1(uTil) + fu2(uTil)) - (2*k1*fvL(uTil)*(fu2(uTil) - fu1(uTil) + (fvL(uTil)^2 + fwL(uTil)^2)/(L1 - fu1(uTil) + fu2(uTil))))/(L1 - fu1(uTil) + fu2(uTil))^2, (2*k1*(fu2(uTil) - fu1(uTil) + (fvL(uTil)^2 + fwL(uTil)^2)/(L1 - fu1(uTil) + fu2(uTil))))/(L1 - fu1(uTil) + fu2(uTil)) + (4*k2*fvL(uTil)^2)/(L - L1 - fu2(uTil) + fu3(uTil))^2 + (2*k2*(fu3(uTil) - fu2(uTil) + (fvL(uTil)^2 + fwL(uTil)^2)/(L - L1 - fu2(uTil) + fu3(uTil))))/(L - L1 - fu2(uTil) + fu3(uTil)) + (4*k1*fvL(uTil)^2)/(L1 - fu1(uTil) + fu2(uTil))^2, (4*k1*fvL(uTil)*fwL(uTil))/(L1 - fu1(uTil) + fu2(uTil))^2 + (4*k2*fvL(uTil)*fwL(uTil))/(L - L1 - fu2(uTil) + fu3(uTil))^2, 0, -(2*k2*fvL(uTil)*(L*fu2(uTil) - L*fu3(uTil) - L1*fu2(uTil) + L1*fu3(uTil) - L^2 - L1^2 + 2*fvL(uTil)^2 + 2*fwL(uTil)^2 + 2*L*L1))/(L - L1 - fu2(uTil) + fu3(uTil))^3, 0;
     (2*k1*fwL(uTil)*(L1*fu1(uTil) - L1*fu2(uTil) - L1^2 + 2*fvL(uTil)^2 + 2*fwL(uTil)^2))/(L1 - fu1(uTil) + fu2(uTil))^3, 0, (2*k2*fwL(uTil)*((fvL(uTil)^2 + fwL(uTil)^2)/(L - L1 - fu2(uTil) + fu3(uTil))^2 - 1))/(L - L1 - fu2(uTil) + fu3(uTil)) + (2*k2*fwL(uTil)*(fu3(uTil) - fu2(uTil) + (fvL(uTil)^2 + fwL(uTil)^2)/(L - L1 - fu2(uTil) + fu3(uTil))))/(L - L1 - fu2(uTil) + fu3(uTil))^2 - (2*k1*fwL(uTil)*((fvL(uTil)^2 + fwL(uTil)^2)/(L1 - fu1(uTil) + fu2(uTil))^2 - 1))/(L1 - fu1(uTil) + fu2(uTil)) - (2*k1*fwL(uTil)*(fu2(uTil) - fu1(uTil) + (fvL(uTil)^2 + fwL(uTil)^2)/(L1 - fu1(uTil) + fu2(uTil))))/(L1 - fu1(uTil) + fu2(uTil))^2, (4*k1*fvL(uTil)*fwL(uTil))/(L1 - fu1(uTil) + fu2(uTil))^2 + (4*k2*fvL(uTil)*fwL(uTil))/(L - L1 - fu2(uTil) + fu3(uTil))^2, (2*k1*(fu2(uTil) - fu1(uTil) + (fvL(uTil)^2 + fwL(uTil)^2)/(L1 - fu1(uTil) + fu2(uTil))))/(L1 - fu1(uTil) + fu2(uTil)) + (4*k2*fwL(uTil)^2)/(L - L1 - fu2(uTil) + fu3(uTil))^2 + (2*k2*(fu3(uTil) - fu2(uTil) + (fvL(uTil)^2 + fwL(uTil)^2)/(L - L1 - fu2(uTil) + fu3(uTil))))/(L - L1 - fu2(uTil) + fu3(uTil)) + (4*k1*fwL(uTil)^2)/(L1 - fu1(uTil) + fu2(uTil))^2, 0, -(2*k2*fwL(uTil)*(L*fu2(uTil) - L*fu3(uTil) - L1*fu2(uTil) + L1*fu3(uTil) - L^2 - L1^2 + 2*fvL(uTil)^2 + 2*fwL(uTil)^2 + 2*L*L1))/(L - L1 - fu2(uTil) + fu3(uTil))^3, 0;
     0, 0, 0, 0, 0, 0, 0, 0;
     0, 0, -(k2*(fvL(uTil)^2 + fwL(uTil)^2)*(2*L*fu2(uTil) - 2*L*fu3(uTil) - 2*L1*fu2(uTil) + 2*L1*fu3(uTil) - 2*L^2 - 2*L1^2 + 3*fvL(uTil)^2 + 3*fwL(uTil)^2 + 4*L*L1))/(L - L1 - fu2(uTil) + fu3(uTil))^4, -(2*k2*fvL(uTil)*(L*fu2(uTil) - L*fu3(uTil) - L1*fu2(uTil) + L1*fu3(uTil) - L^2 - L1^2 + 2*fvL(uTil)^2 + 2*fwL(uTil)^2 + 2*L*L1))/(L - L1 - fu2(uTil) + fu3(uTil))^3, -(2*k2*fwL(uTil)*(L*fu2(uTil) - L*fu3(uTil) - L1*fu2(uTil) + L1*fu3(uTil) - L^2 - L1^2 + 2*fvL(uTil)^2 + 2*fwL(uTil)^2 + 2*L*L1))/(L - L1 - fu2(uTil) + fu3(uTil))^3, 0, (k2*(fvL(uTil)^2 + fwL(uTil)^2)*(2*L*fu2(uTil) - 2*L*fu3(uTil) - 2*L1*fu2(uTil) + 2*L1*fu3(uTil) - 2*L^2 - 2*L1^2 + 3*fvL(uTil)^2 + 3*fwL(uTil)^2 + 4*L*L1))/(L - L1 - fu2(uTil) + fu3(uTil))^4, 0;
     0, 0, 0, 0, 0, 0, 0, 0]);
                                                                                               
syms u2eq u3eq
dFuduTilTeq = [0, 0, 0,                                                              0,                                                              0, 0, 0, 0;
               0, 0, 0,                                                              0,                                                              0, 0, 0, 0;
               0, 0, 0,                                                              0,                                                              0, 0, 0, 0;
               0, 0, 0, (2*k1)/( 1 + L1/u2eq ) + (2*k2)/( 1 + (L - L1)/(u3eq - u2eq) ),                                                              0, 0, 0, 0;
               0, 0, 0,                                                              0, (2*k1)/( 1 + L1/u2eq ) + (2*k2)/( 1 + (L - L1)/(u3eq - u2eq) ), 0, 0, 0;
               0, 0, 0,                                                              0,                                                              0, 0, 0, 0;
               0, 0, 0,                                                              0,                                                              0, 0, 0, 0;
               0, 0, 0,                                                              0,                                                              0, 0, 0, 0];
%Obs.:
%(1) A expressão de dFuduTilTeq mostra o enrijecimento lateral para uTileq
%{
dFuduTilTeqRef = simplify(subs(dFuduTilT,[u1,teta1,u2,vL,wL,teta2,u3,teta3],[0,0,u2eq,0,0,0,u3eq,0]));
erro2 = simplify(dFuduTilTeqRef - dFuduTilTeq);
%}

%%
%Energia cinética:
syms t alfa I3 Ib2 I1
syms up1 up2 up3 vpL wpL tetap1 tetap2 tetap3
upTil = [up1, tetap1, up2, vpL, wpL, tetap2, up3, tetap3].';

%{
T = (1/2)*I3*tetap1^2 + (1/2)*M3*up1^2 +...
    (1/2)*Ib2*tetap2^2 + (1/2)*Mb2*up2^2 + (1/2)*Mb2*vpL^2 + (1/2)*Mb2*wpL^2 +...
    (1/2)*I1*tetap3^2 + (1/2)*M1*up3^2 +...
    (1/2)*dm*(up2^2 + (vpL - l2*tetap2*sin(teta2 + alfa))^2 + (wpL + l2*tetap2*cos(teta2 + alfa))^2);
%}

%%
%Derivadas:
%{
dTdteta2 = dm*((vpL - l2*tetap2*sin(teta2 + alfa))*(-l2*tetap2*cos(teta2 + alfa)) +...
               (wpL + l2*tetap2*cos(teta2 + alfa))*(-l2*tetap2*sin(teta2 + alfa)));
%}
%{
dTdteta2Ref = diff(T,teta2);
erro = simplify(dTdteta2Ref - dTdteta2);
%}
dTdup1 = M3*up1;
%{
dTdup1Ref = diff(T,up1);
erro = simplify(dTdup1Ref - dTdup1);
%}
dTdup2 = (Mb2 + dm)*up2;
%{
dTdup2Ref = diff(T,up2);
erro = simplify(dTdup2Ref - dTdup2);
%}
dTdup3 = M1*up3;
%{
dTdup3Ref = diff(T,up3);
erro = simplify(dTdup3Ref - dTdup3);
%}
dTdtetap1 = I3*tetap1;
%{
dTdtetap1Ref = diff(T,tetap1);
erro = simplify(dTdtetap1Ref - dTdtetap1);
%}
dTdtetap2 = Ib2*tetap2 +...
    dm*((vpL - l2*tetap2*sin(teta2 + alfa))*(-l2*sin(teta2 + alfa)) +...
        (wpL + l2*tetap2*cos(teta2 + alfa))*(l2*cos(teta2 + alfa)));
%{
dTdtetap2Ref = diff(T,tetap2);
erro = simplify(dTdtetap2Ref - dTdtetap2);
%}
dTdtetap3 = I1*tetap3;
%{
dTdtetap3Ref = diff(T,tetap3);
erro = simplify(dTdtetap3Ref - dTdtetap3);
%}
dTdvpL = (Mb2 + dm)*vpL - dm*l2*tetap2*sin(teta2 + alfa);
%{
dTdvpLRef = diff(T,vpL);
erro = simplify(dTdvpLRef - dTdvpL);
%}
dTdwpL = (Mb2 + dm)*wpL + dm*l2*tetap2*cos(teta2 + alfa);
%{
dTdwpLRef = diff(T,wpL);
erro = simplify(dTdwpLRef - dTdwpL);
%}

%%
Mac = [M3,  0,        0,                        0,                       0,                        0,  0,  0; 
        0, I3,        0,                        0,                       0,                        0,  0,  0;
        0,  0, Mb2 + dm,                        0,                       0,                        0,  0,  0;
        0,  0,        0,                 Mb2 + dm,                       0, -dm*l2*sin(teta2 + alfa),  0,  0;
        0,  0,        0,                        0,                Mb2 + dm,  dm*l2*cos(teta2 + alfa),  0,  0;
        0,  0,        0, -dm*l2*sin(teta2 + alfa), dm*l2*cos(teta2 + alfa),            Ib2 + dm*l2^2,  0,  0;
        0,  0,        0,                        0,                       0,                        0, M1,  0;
        0,  0,        0,                        0,                       0,                        0,  0, I1];
iMacFu = simplify(Mac\Fu);
diMFuduT = jacobian(iMacFu,uTil);
dFuzdZTRef = [zeros(8), zeros(8); diMFuduT, zeros(8)];
%{
dFuzdZT = ...
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
     (L1*k1*(vL^2 + wL^2))/(M3*(L1 - u1 + u2)^3) + (3*k1*(vL^2 + wL^2)*(L1*u1 - L1*u2 - L1^2 + vL^2 + wL^2))/(M3*(L1 - u1 + uk1*(vL^2 + wL^2))/(M3*(L1 - u1 + u2)^3) - (3*k1*(vL^2 + wL^2)*(L1*u1 - L1*u2 - L1^2 + vL^2 + wL^2))/(M3*(L1 - u1 + u2)^4),                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             (2*k1*vL*(vL^2 + wL^2))/(M3*(L1 - u1 + u2)^3) + (2*k1*vL*(L1*u1 - L1*u2 - L1^2 + vL^2 + wL^2))/(M3*(L1 - u1 + uk1*wL*(vL^2 + wL^2))/(M3*(L1 - u1 + u2)^3) + (2*k1*wL*(L1*u1 - L1*u2 - L1^2 + vL^2 + wL^2))/(M3*(L1 - u1 + u2)^3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
     (3*(vL^2 + wL^2)*(L^3*L1^2*k1 - L1^5*k2 - 3*L^2*L1^3*k1 - L1^5*k1 - L^2*L1^3*k2 + L^2*k2*u1^3 - L^2*k2*u2^3 - 4*L1^2*k1*u2^3 + L1^2*k2*u1^3 - 6*L1^3*k1*u2^2 - 3*L1^3*k2*u1^2 + L1^2*k1*u3^3 - 4*L1^2*k2*u2^3 - 3*L1^3*k1*u3^2 - 6*L1^3*k2*u2^2 - L^3*k1*vL^2 + L1^3*k1*vL^2 + L1^3*k2*vL^2 - L^3*k1*wL^2 + L1^3*k1*wL^2 + L1^3*k2*wL^2 + k1*u2^3*vL^2 - k2*u1^3*vL^2 - k1*u3^3*vL^2 + k2*u2^3*vL^2 + k1*u2^3*wL^2 - k2*u1^3*wL^2 - k1*u3^3*wL^2 + k2*u2^3*wL^2 + 3*L*L1^4*k1 + 2*L*L1^4*k2 + L1^4*k1*u1 + L*k2*u2^4 - L1*k1*u2^4 - 4*L1^4*k1*u2 + 3*L1^4*k2*u1 - L1*k2*u2^4 + 3*L1^4*k1*u3 - 4*L1^4*k2*u2 + L1^4*k2*u3 - 3*L*L1^3*k1*u1 - L^3*L1*k1*u1 + 3*L*L1*k1*u2^3 - 2*L*L1*k2*u1^3 + 9*L*L1^3*k1*u2 - 6*L*L1^3*k2*u1 + L^3*L1*k1*u2 + 5*L*L1*k2*u2^3 - 6*L*L1^3*k1*u3 + 7*L*L1^3*k2*u2 - L*L1^3*k2*u3 - 3*L*k2*u1*u2^3 - L*k2*u1^3*u2 + L1*k1*u1*u2^3 + 3*L1^3*k1*u1*u2 + L*k2*u1^3*u3 - L1*k1*u1*u3^3 + 3*L1*k2*u1*u2^3 + L1*k2*u1^3*u2 - 3*L1^3*k1*u1*u3 + 9*L1^3*k2*u1*u2 - L*k2*u2^3*u3 + L1*k1*u2*u3^3 + 3*L1*k1*u2^3*u3 - L1*k2*u1^3*u3 + 9*L1^3*k1*u2*u3 - 3*L1^3*k2*u1*u3 + L1*k2*u2^3*u3 + 3*L1^3*k2*u2*u3 + 3*L^2*L1^2*k1*u1 + 9*L*L1^2*k1*u2^2 + 6*L*L1^2*k2*u1^2 - 3*L^2*L1*k1*u2^2 - 3*L^2*L1*k2*u1^2 - 6*L^2*L1^2*k1*u2 + 3*L^2*L1^2*k2*u1 + 3*L*L1^2*k1*u3^2 + 9*L*L1^2*k2*u2^2 - 3*L^2*L1*k2*u2^2 + 3*L^2*L1^2*k1*u3 - 3*L^2*L1^2*k2*u2 - 3*L*L1^2*k1*vL^2 + 3*L^2*L1*k1*vL^2 - 3*L*L1^2*k1*wL^2 + 3*L^2*L1*k1*wL^2 + 3*L*k2*u1^2*u2^2 + 3*L^2*k2*u1*u2^2 - 3*L^2*k2*u1^2*u2 + 3*L1^2*k1*u1*u2^2 - 3*L1*k2*u1^2*u2^2 + 3*L1^2*k1*u1*u3^2 + 9*L1^2*k2*u1*u2^2 - 6*L1^2*k2*u1^2*u2 - 3*L1*k1*u2^2*u3^2 - 6*L1^2*k1*u2*u3^2 + 9*L1^2*k1*u2^2*u3 + 3*L1^2*k2*u1^2*u3 + 3*L1^2*k2*u2^2*u3 - 3*L*k1*u2^2*vL^2 + 3*L^2*k1*u2*vL^2 - 3*L*k1*u3^2*vL^2 + 3*L1*k1*u2^2*vL^2 + 3*L1*k2*u1^2*vL^2 - 3*L^2*k1*u3*vL^2 + 3*L1^2*k1*u2*vL^2 - 3*L1^2*k2*u1*vL^2 + 3*L1*k1*u3^2*vL^2 + 3*L1*k2*u2^2*vL^2 - 3*L1^2*k1*u3*vL^2 + 3*L1^2*k2*u2*vL^2 - 3*L*k1*u2^2*wL^2 + 3*L^2*k1*u2*wL^2 - 3*L*k1*u3^2*wL^2 + 3*L1*k1*u2^2*wL^2 + 3*L1*k2*u1^2*wL^2 - 3*L^2*k1*u3*wL^2 + 3*L1^2*k1*u2*wL^2 - 3*L1^2*k2*u1*wL^2 + 3*L1*k1*u3^2*wL^2 + 3*L1*k2*u2^2*wL^2 - 3*L1^2*k1*u3*wL^2 + 3*L1^2*k2*u2*wL^2 - 3*k2*u1*u2^2*vL^2 + 3*k2*u1^2*u2*vL^2 + 3*k1*u2*u3^2*vL^2 - 3*k1*u2^2*u3*vL^2 - 3*k2*u1*u2^2*wL^2 + 3*k2*u1^2*u2*wL^2 + 3*k1*u2*u3^2*wL^2 - 3*k1*u2^2*u3*wL^2 - 3*L*L1*k1*u1*u2^2 - 6*L*L1^2*k1*u1*u2 + 3*L^2*L1*k1*u1*u2 - 3*L*L1*k1*u1*u3^2 - 12*L*L1*k2*u1*u2^2 + 9*L*L1*k2*u1^2*u2 + 6*L*L1^2*k1*u1*u3 - 15*L*L1^2*k2*u1*u2 - 3*L^2*L1*k1*u1*u3 + 6*L^2*L1*k2*u1*u2 + 3*L*L1*k1*u2*u3^2 - 6*L*L1*k1*u2^2*u3 - 3*L*L1*k2*u1^2*u3 - 12*L*L1^2*k1*u2*u3 + 3*L*L1^2*k2*u1*u3 + 3*L^2*L1*k1*u2*u3 - 3*L*L1*k2*u2^2*u3 - 3*L*L1^2*k2*u2*u3 - 6*L*L1*k1*u2*vL^2 + 6*L*L1*k1*u3*vL^2 - 6*L*L1*k1*u2*wL^2 + 6*L*L1*k1*u3*wL^2 + 3*L*k2*u1*u2^2*u3 - 3*L*k2*u1^2*u2*u3 + 3*L1*k1*u1*u2*u3^2 - 3*L1*k1*u1*u2^2*u3 - 6*L1^2*k1*u1*u2*u3 - 3*L1*k2*u1*u2^2*u3 + 3*L1*k2*u1^2*u2*u3 - 6*L1^2*k2*u1*u2*u3 + 6*L*k1*u2*u3*vL^2 - 6*L1*k2*u1*u2*vL^2 - 6*L1*k1*u2*u3*vL^2 + 6*L*k1*u2*u3*wL^2 - 6*L1*k2*u1*u2*wL^2 - 6*L1*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2*u3 + 6*L*L1*k2*u1*u2*u3))/((Mb2 + dm)*(L1 - u1 + u2)^4*(L - L1 - u2 + u3)^3) - ((vL^2 + wL^2)*(3*L1^2*k2*vL^2 - 3*L1^4*k2 - 3*L^2*L1^2*k1 - 3*L^2*L1^2*k2 - 3*L^2*k2*u1^2 - 3*L^2*k2*u2^2 - 3*L1^2*k1*u2^2 - 3*L1^2*k2*u1^2 - 3*L1^2*k1*u3^2 - 9*L1^2*k2*u2^2 - L1^4*k1 + 3*L1^2*k2*wL^2 + 3*k2*u1^2*vL^2 + 3*k2*u2^2*vL^2 + 3*k2*u1^2*wL^2 + 3*k2*u2^2*wL^2 + 3*L*L1^3*k1 + L^3*L1*k1 + 6*L*L1^3*k2 + 3*L*k2*u2^3 - L1*k1*u2^3 - 3*L1^3*k1*u2 + 6*L1^3*k2*u1 + L1*k1*u3^3 - 3*L1*k2*u2^3 + 3*L1^3*k1*u3 - 9*L1^3*k2*u2 + 3*L1^3*k2*u3 + 3*L*L1*k1*u2^2 + 6*L*L1*k2*u1^2 + 6*L*L1^2*k1*u2 - 12*L*L1^2*k2*u1 - 3*L^2*L1*k1*u2 + 6*L^2*L1*k2*u1 + 3*L*L1*k1*u3^2 + 12*L*L1*k2*u2^2 - 6*L*L1^2*k1*u3 + 15*L*L1^2*k2*u2 + 3*L^2*L1*k1*u3 - 6*L^2*L1*k2*u2 - 3*L*L1^2*k2*u3 - 6*L*k2*u1*u2^2 + 3*L*k2*u1^2*u2 + 6*L^2*k2*u1*u2 - 3*L*k2*u1^2*u3 + 6*L1*k2*u1*u2^2 - 3*L1*k2*u1^2*u2 + 12*L1^2*k2*u1*u2 - 3*L*k2*u2^2*u3 - 3*L1*k1*u2*u3^2 + 3*L1*k1*u2^2*u3 + 3*L1*k2*u1^2*u3 + 6*L1^2*k1*u2*u3 - 6*L1^2*k2*u1*u3 + 3*L1*k2*u2^2*u3 + 6*L1^2*k2*u2*u3 - 6*L1*k2*u1*vL^2 + 6*L1*k2*u2*vL^2 - 6*L1*k2*u1*wL^2 + 6*L1*k2*u2*wL^2 - 6*k2*u1*u2*vL^2 - 6*k2*u1*u2*wL^2 - 18*L*L1*k2*u1*u2 - 6*L*L1*k1*u2*u3 + 6*L*L1*k2*u1*u3 - 6*L*L1*k2*u2*u3 + 6*L*k2*u1*u2*u3 - 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^3), 0, (3*(vL^2 + wL^2)*(L^3*L1^2*k1 - L1^5*k2 - 3*L^2*L1^3*k1 - L1^5*k1 - L^2*L1^3*k2 + L^2*k2*u1^3 - L^2*k2*u2^3 - 4*L1^2*k1*u2^3 + L1^2*k2*u1^3 - 6*L1^3*k1*u2^2 - 3*L1^3*k2*u1^2 + L1^2*k1*u3^3 - 4*L1^2*k2*u2^3 - 3*L1^3*k1*u3^2 - 6*L1^3*k2*u2^2 - L^3*k1*vL^2 + L1^3*k1*vL^2 + L1^3*k2*vL^2 - L^3*k1*wL^2 + L1^3*k1*wL^2 + L1^3*k2*wL^2 + k1*u2^3*vL^2 - k2*u1^3*vL^2 - k1*u3^3*vL^2 + k2*u2^3*vL^2 + k1*u2^3*wL^2 - k2*u1^3*wL^2 - k1*u3^3*wL^2 + k2*u2^3*wL^2 + 3*L*L1^4*k1 + 2*L*L1^4*k2 + L1^4*k1*u1 + L*k2*u2^4 - L1*k1*u2^4 - 4*L1^4*k1*u2 + 3*L1^4*k2*u1 - L1*k2*u2^4 + 3*L1^4*k1*u3 - 4*L1^4*k2*u2 + L1^4*k2*u3 - 3*L*L1^3*k1*u1 - L^3*L1*k1*u1 + 3*L*L1*k1*u2^3 - 2*L*L1*k2*u1^3 + 9*L*L1^3*k1*u2 - 6*L*L1^3*k2*u1 + L^3*L1*k1*u2 + 5*L*L1*k2*u2^3 - 6*L*L1^3*k1*u3 + 7*L*L1^3*k2*u2 - L*L1^3*k2*u3 - 3*L*k2*u1*u2^3 - L*k2*u1^3*u2 + L1*k1*u1*u2^3 + 3*L1^3*k1*u1*u2 + L*k2*u1^3*u3 - L1*k1*u1*u3^3 + 3*L1*k2*u1*u2^3 + L1*k2*u1^3*u2 - 3*L1^3*k1*u1*u3 + 9*L1^3*k2*u1*u2 - L*k2*u2^3*u3 + L1*k1*u2*u3^3 + 3*L1*k1*u2^3*u3 - L1*k2*u1^3*u3 + 9*L1^3*k1*u2*u3 - 3*L1^3*k2*u1*u3 + L1*k2*u2^3*u3 + 3*L1^3*k2*u2*u3 + 3*L^2*L1^2*k1*u1 + 9*L*L1^2*k1*u2^2 + 6*L*L1^2*k2*u1^2 - 3*L^2*L1*k1*u2^2 - 3*L^2*L1*k2*u1^2 - 6*L^2*L1^2*k1*u2 + 3*L^2*L1^2*k2*u1 + 3*L*L1^2*k1*u3^2 + 9*L*L1^2*k2*u2^2 - 3*L^2*L1*k2*u2^2 + 3*L^2*L1^2*k1*u3 - 3*L^2*L1^2*k2*u2 - 3*L*L1^2*k1*vL^2 + 3*L^2*L1*k1*vL^2 - 3*L*L1^2*k1*wL^2 + 3*L^2*L1*k1*wL^2 + 3*L*k2*u1^2*u2^2 + 3*L^2*k2*u1*u2^2 - 3*L^2*k2*u1^2*u2 + 3*L1^2*k1*u1*u2^2 - 3*L1*k2*u1^2*u2^2 + 3*L1^2*k1*u1*u3^2 + 9*L1^2*k2*u1*u2^2 - 6*L1^2*k2*u1^2*u2 - 3*L1*k1*u2^2*u3^2 - 6*L1^2*k1*u2*u3^2 + 9*L1^2*k1*u2^2*u3 + 3*L1^2*k2*u1^2*u3 + 3*L1^2*k2*u2^2*u3 - 3*L*k1*u2^2*vL^2 + 3*L^2*k1*u2*vL^2 - 3*L*k1*u3^2*vL^2 + 3*L1*k1*u2^2*vL^2 + 3*L1*k2*u1^2*vL^2 - 3*L^2*k1*u3*vL^2 + 3*L1^2*k1*u2*vL^2 - 3*L1^2*k2*u1*vL^2 + 3*L1*k1*u3^2*vL^2 + 3*L1*k2*u2^2*vL^2 - 3*L1^2*k1*u3*vL^2 + 3*L1^2*k2*u2*vL^2 - 3*L*k1*u2^2*wL^2 + 3*L^2*k1*u2*wL^2 - 3*L*k1*u3^2*wL^2 + 3*L1*k1*u2^2*wL^2 + 3*L1*k2*u1^2*wL^2 - 3*L^2*k1*u3*wL^2 + 3*L1^2*k1*u2*wL^2 - 3*L1^2*k2*u1*wL^2 + 3*L1*k1*u3^2*wL^2 + 3*L1*k2*u2^2*wL^2 - 3*L1^2*k1*u3*wL^2 + 3*L1^2*k2*u2*wL^2 - 3*k2*u1*u2^2*vL^2 + 3*k2*u1^2*u2*vL^2 + 3*k1*u2*u3^2*vL^2 - 3*k1*u2^2*u3*vL^2 - 3*k2*u1*u2^2*wL^2 + 3*k2*u1^2*u2*wL^2 + 3*k1*u2*u3^2*wL^2 - 3*k1*u2^2*u3*wL^2 - 3*L*L1*k1*u1*u2^2 - 6*L*L1^2*k1*u1*u2 + 3*L^2*L1*k1*u1*u2 - 3*L*L1*k1*u1*u3^2 - 12*L*L1*k2*u1*u2^2 + 9*L*L1*k2*u1^2*u2 + 6*L*L1^2*k1*u1*u3 - 15*L*L1^2*k2*u1*u2 - 3*L^2*L1*k1*u1*u3 + 6*L^2*L1*k2*u1*u2 + 3*L*L1*k1*u2*u3^2 - 6*L*L1*k1*u2^2*u3 - 3*L*L1*k2*u1^2*u3 - 12*L*L1^2*k1*u2*u3 + 3*L*L1^2*k2*u1*u3 + 3*L^2*L1*k1*u2*u3 - 3*L*L1*k2*u2^2*u3 - 3*L*L1^2*k2*u2*u3 - 6*L*L1*k1*u2*vL^2 + 6*L*L1*k1*u3*vL^2 - 6*L*L1*k1*u2*wL^2 + 6*L*L1*k1*u3*wL^2 + 3*L*k2*u1*u2^2*u3 - 3*L*k2*u1^2*u2*u3 + 3*L1*k1*u1*u2*u3^2 - 3*L1*k1*u1*u2^2*u3 - 6*L1^2*k1*u1*u2*u3 - 3*L1*k2*u1*u2^2*u3 + 3*L1*k2*u1^2*u2*u3 - 6*L1^2*k2*u1*u2*u3 + 6*L*k1*u2*u3*vL^2 - 6*L1*k2*u1*u2*vL^2 - 6*L1*k1*u2*u3*vL^2 + 6*L*k1*u2*u3*wL^2 - 6*L1*k2*u1*u2*wL^2 - 6*L1*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2*u3 + 6*L*L1*k2*u1*u2*u3))/((Mb2 + dm)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^4) - (3*(vL^2 + wL^2)*(L^3*L1^2*k1 - L1^5*k2 - 3*L^2*L1^3*k1 - L1^5*k1 - L^2*L1^3*k2 + L^2*k2*u1^3 - L^2*k2*u2^3 - 4*L1^2*k1*u2^3 + L1^2*k2*u1^3 - 6*L1^3*k1*u2^2 - 3*L1^3*k2*u1^2 + L1^2*k1*u3^3 - 4*L1^2*k2*u2^3 - 3*L1^3*k1*u3^2 - 6*L1^3*k2*u2^2 - L^3*k1*vL^2 + L1^3*k1*vL^2 + L1^3*k2*vL^2 - L^3*k1*wL^2 + L1^3*k1*wL^2 + L1^3*k2*wL^2 + k1*u2^3*vL^2 - k2*u1^3*vL^2 - k1*u3^3*vL^2 + k2*u2^3*vL^2 + k1*u2^3*wL^2 - k2*u1^3*wL^2 - k1*u3^3*wL^2 + k2*u2^3*wL^2 + 3*L*L1^4*k1 + 2*L*L1^4*k2 + L1^4*k1*u1 + L*k2*u2^4 - L1*k1*u2^4 - 4*L1^4*k1*u2 + 3*L1^4*k2*u1 - L1*k2*u2^4 + 3*L1^4*k1*u3 - 4*L1^4*k2*u2 + L1^4*k2*u3 - 3*L*L1^3*k1*u1 - L^3*L1*k1*u1 + 3*L*L1*k1*u2^3 - 2*L*L1*k2*u1^3 + 9*L*L1^3*k1*u2 - 6*L*L1^3*k2*u1 + L^3*L1*k1*u2 + 5*L*L1*k2*u2^3 - 6*L*L1^3*k1*u3 + 7*L*L1^3*k2*u2 - L*L1^3*k2*u3 - 3*L*k2*u1*u2^3 - L*k2*u1^3*u2 + L1*k1*u1*u2^3 + 3*L1^3*k1*u1*u2 + L*k2*u1^3*u3 - L1*k1*u1*u3^3 + 3*L1*k2*u1*u2^3 + L1*k2*u1^3*u2 - 3*L1^3*k1*u1*u3 + 9*L1^3*k2*u1*u2 - L*k2*u2^3*u3 + L1*k1*u2*u3^3 + 3*L1*k1*u2^3*u3 - L1*k2*u1^3*u3 + 9*L1^3*k1*u2*u3 - 3*L1^3*k2*u1*u3 + L1*k2*u2^3*u3 + 3*L1^3*k2*u2*u3 + 3*L^2*L1^2*k1*u1 + 9*L*L1^2*k1*u2^2 + 6*L*L1^2*k2*u1^2 - 3*L^2*L1*k1*u2^2 - 3*L^2*L1*k2*u1^2 - 6*L^2*L1^2*k1*u2 + 3*L^2*L1^2*k2*u1 + 3*L*L1^2*k1*u3^2 + 9*L*L1^2*k2*u2^2 - 3*L^2*L1*k2*u2^2 + 3*L^2*L1^2*k1*u3 - 3*L^2*L1^2*k2*u2 - 3*L*L1^2*k1*vL^2 + 3*L^2*L1*k1*vL^2 - 3*L*L1^2*k1*wL^2 + 3*L^2*L1*k1*wL^2 + 3*L*k2*u1^2*u2^2 + 3*L^2*k2*u1*u2^2 - 3*L^2*k2*u1^2*u2 + 3*L1^2*k1*u1*u2^2 - 3*L1*k2*u1^2*u2^2 + 3*L1^2*k1*u1*u3^2 + 9*L1^2*k2*u1*u2^2 - 6*L1^2*k2*u1^2*u2 - 3*L1*k1*u2^2*u3^2 - 6*L1^2*k1*u2*u3^2 + 9*L1^2*k1*u2^2*u3 + 3*L1^2*k2*u1^2*u3 + 3*L1^2*k2*u2^2*u3 - 3*L*k1*u2^2*vL^2 + 3*L^2*k1*u2*vL^2 - 3*L*k1*u3^2*vL^2 + 3*L1*k1*u2^2*vL^2 + 3*L1*k2*u1^2*vL^2 - 3*L^2*k1*u3*vL^2 + 3*L1^2*k1*u2*vL^2 - 3*L1^2*k2*u1*vL^2 + 3*L1*k1*u3^2*vL^2 + 3*L1*k2*u2^2*vL^2 - 3*L1^2*k1*u3*vL^2 + 3*L1^2*k2*u2*vL^2 - 3*L*k1*u2^2*wL^2 + 3*L^2*k1*u2*wL^2 - 3*L*k1*u3^2*wL^2 + 3*L1*k1*u2^2*wL^2 + 3*L1*k2*u1^2*wL^2 - 3*L^2*k1*u3*wL^2 + 3*L1^2*k1*u2*wL^2 - 3*L1^2*k2*u1*wL^2 + 3*L1*k1*u3^2*wL^2 + 3*L1*k2*u2^2*wL^2 - 3*L1^2*k1*u3*wL^2 + 3*L1^2*k2*u2*wL^2 - 3*k2*u1*u2^2*vL^2 + 3*k2*u1^2*u2*vL^2 + 3*k1*u2*u3^2*vL^2 - 3*k1*u2^2*u3*vL^2 - 3*k2*u1*u2^2*wL^2 + 3*k2*u1^2*u2*wL^2 + 3*k1*u2*u3^2*wL^2 - 3*k1*u2^2*u3*wL^2 - 3*L*L1*k1*u1*u2^2 - 6*L*L1^2*k1*u1*u2 + 3*L^2*L1*k1*u1*u2 - 3*L*L1*k1*u1*u3^2 - 12*L*L1*k2*u1*u2^2 + 9*L*L1*k2*u1^2*u2 + 6*L*L1^2*k1*u1*u3 - 15*L*L1^2*k2*u1*u2 - 3*L^2*L1*k1*u1*u3 + 6*L^2*L1*k2*u1*u2 + 3*L*L1*k1*u2*u3^2 - 6*L*L1*k1*u2^2*u3 - 3*L*L1*k2*u1^2*u3 - 12*L*L1^2*k1*u2*u3 + 3*L*L1^2*k2*u1*u3 + 3*L^2*L1*k1*u2*u3 - 3*L*L1*k2*u2^2*u3 - 3*L*L1^2*k2*u2*u3 - 6*L*L1*k1*u2*vL^2 + 6*L*L1*k1*u3*vL^2 - 6*L*L1*k1*u2*wL^2 + 6*L*L1*k1*u3*wL^2 + 3*L*k2*u1*u2^2*u3 - 3*L*k2*u1^2*u2*u3 + 3*L1*k1*u1*u2*u3^2 - 3*L1*k1*u1*u2^2*u3 - 6*L1^2*k1*u1*u2*u3 - 3*L1*k2*u1*u2^2*u3 + 3*L1*k2*u1^2*u2*u3 - 6*L1^2*k2*u1*u2*u3 + 6*L*k1*u2*u3*vL^2 - 6*L1*k2*u1*u2*vL^2 - 6*L1*k1*u2*u3*vL^2 + 6*L*k1*u2*u3*wL^2 - 6*L1*k2*u1*u2*wL^2 - 6*L1*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2*u3 + 6*L*L1*k2*u1*u2*u3))/((Mb2 + dm)*(L1 - u1 + u2)^4*(L - L1 - u2 + u3)^3) + ((vL^2 + wL^2)*(3*L^2*k1*vL^2 - 4*L1^4*k2 - 6*L^2*L1^2*k1 - 3*L^2*L1^2*k2 - 3*L^2*k2*u1^2 - 3*L^2*k2*u2^2 - 12*L1^2*k1*u2^2 - 6*L1^2*k2*u1^2 - 6*L1^2*k1*u3^2 - 12*L1^2*k2*u2^2 - 4*L1^4*k1 + 3*L1^2*k1*vL^2 + 3*L1^2*k2*vL^2 + 3*L^2*k1*wL^2 + 3*L1^2*k1*wL^2 + 3*L1^2*k2*wL^2 + 3*k1*u2^2*vL^2 + 3*k2*u1^2*vL^2 + 3*k1*u3^2*vL^2 + 3*k2*u2^2*vL^2 + 3*k1*u2^2*wL^2 + 3*k2*u1^2*wL^2 + 3*k1*u3^2*wL^2 + 3*k2*u2^2*wL^2 + 9*L*L1^3*k1 + L^3*L1*k1 + 7*L*L1^3*k2 - L*k2*u1^3 + 3*L1^3*k1*u1 + 4*L*k2*u2^3 - 4*L1*k1*u2^3 + L1*k2*u1^3 - 12*L1^3*k1*u2 + 9*L1^3*k2*u1 + L1*k1*u3^3 - 4*L1*k2*u2^3 + 9*L1^3*k1*u3 - 12*L1^3*k2*u2 + 3*L1^3*k2*u3 - 6*L*L1^2*k1*u1 + 3*L^2*L1*k1*u1 + 9*L*L1*k1*u2^2 + 9*L*L1*k2*u1^2 + 18*L*L1^2*k1*u2 - 15*L*L1^2*k2*u1 - 6*L^2*L1*k1*u2 + 6*L^2*L1*k2*u1 + 3*L*L1*k1*u3^2 + 15*L*L1*k2*u2^2 - 12*L*L1^2*k1*u3 + 18*L*L1^2*k2*u2 + 3*L^2*L1*k1*u3 - 6*L^2*L1*k2*u2 - 3*L*L1^2*k2*u3 - 6*L*L1*k1*vL^2 - 6*L*L1*k1*wL^2 - 9*L*k2*u1*u2^2 + 6*L*k2*u1^2*u2 + 3*L1*k1*u1*u2^2 + 6*L^2*k2*u1*u2 + 6*L1^2*k1*u1*u2 - 3*L*k2*u1^2*u3 + 3*L1*k1*u1*u3^2 + 9*L1*k2*u1*u2^2 - 6*L1*k2*u1^2*u2 - 6*L1^2*k1*u1*u3 + 18*L1^2*k2*u1*u2 - 3*L*k2*u2^2*u3 - 6*L1*k1*u2*u3^2 + 9*L1*k1*u2^2*u3 + 3*L1*k2*u1^2*u3 + 18*L1^2*k1*u2*u3 - 6*L1^2*k2*u1*u3 + 3*L1*k2*u2^2*u3 + 6*L1^2*k2*u2*u3 - 6*L*k1*u2*vL^2 + 6*L*k1*u3*vL^2 + 6*L1*k1*u2*vL^2 - 6*L1*k2*u1*vL^2 - 6*L1*k1*u3*vL^2 + 6*L1*k2*u2*vL^2 - 6*L*k1*u2*wL^2 + 6*L*k1*u3*wL^2 + 6*L1*k1*u2*wL^2 - 6*L1*k2*u1*wL^2 - 6*L1*k1*u3*wL^2 + 6*L1*k2*u2*wL^2 - 6*k2*u1*u2*vL^2 - 6*k1*u2*u3*vL^2 - 6*k2*u1*u2*wL^2 - 6*k1*u2*u3*wL^2 - 6*L*L1*k1*u1*u2 + 6*L*L1*k1*u1*u3 - 24*L*L1*k2*u1*u2 - 12*L*L1*k1*u2*u3 + 6*L*L1*k2*u1*u3 - 6*L*L1*k2*u2*u3 + 6*L*k2*u1*u2*u3 - 6*L1*k1*u1*u2*u3 - 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^3), (2*vL*(L^3*L1^2*k1 - L1^5*k2 - 3*L^2*L1^3*k1 - L1^5*k1 - L^2*L1^3*k2 + L^2*k2*u1^3 - L^2*k2*u2^3 - 4*L1^2*k1*u2^3 + L1^2*k2*u1^3 - 6*L1^3*k1*u2^2 - 3*L1^3*k2*u1^2 + L1^2*k1*u3^3 - 4*L1^2*k2*u2^3 - 3*L1^3*k1*u3^2 - 6*L1^3*k2*u2^2 - L^3*k1*vL^2 + L1^3*k1*vL^2 + L1^3*k2*vL^2 - L^3*k1*wL^2 + L1^3*k1*wL^2 + L1^3*k2*wL^2 + k1*u2^3*vL^2 - k2*u1^3*vL^2 - k1*u3^3*vL^2 + k2*u2^3*vL^2 + k1*u2^3*wL^2 - k2*u1^3*wL^2 - k1*u3^3*wL^2 + k2*u2^3*wL^2 + 3*L*L1^4*k1 + 2*L*L1^4*k2 + L1^4*k1*u1 + L*k2*u2^4 - L1*k1*u2^4 - 4*L1^4*k1*u2 + 3*L1^4*k2*u1 - L1*k2*u2^4 + 3*L1^4*k1*u3 - 4*L1^4*k2*u2 + L1^4*k2*u3 - 3*L*L1^3*k1*u1 - L^3*L1*k1*u1 + 3*L*L1*k1*u2^3 - 2*L*L1*k2*u1^3 + 9*L*L1^3*k1*u2 - 6*L*L1^3*k2*u1 + L^3*L1*k1*u2 + 5*L*L1*k2*u2^3 - 6*L*L1^3*k1*u3 + 7*L*L1^3*k2*u2 - L*L1^3*k2*u3 - 3*L*k2*u1*u2^3 - L*k2*u1^3*u2 + L1*k1*u1*u2^3 + 3*L1^3*k1*u1*u2 + L*k2*u1^3*u3 - L1*k1*u1*u3^3 + 3*L1*k2*u1*u2^3 + L1*k2*u1^3*u2 - 3*L1^3*k1*u1*u3 + 9*L1^3*k2*u1*u2 - L*k2*u2^3*u3 + L1*k1*u2*u3^3 + 3*L1*k1*u2^3*u3 - L1*k2*u1^3*u3 + 9*L1^3*k1*u2*u3 - 3*L1^3*k2*u1*u3 + L1*k2*u2^3*u3 + 3*L1^3*k2*u2*u3 + 3*L^2*L1^2*k1*u1 + 9*L*L1^2*k1*u2^2 + 6*L*L1^2*k2*u1^2 - 3*L^2*L1*k1*u2^2 - 3*L^2*L1*k2*u1^2 - 6*L^2*L1^2*k1*u2 + 3*L^2*L1^2*k2*u1 + 3*L*L1^2*k1*u3^2 + 9*L*L1^2*k2*u2^2 - 3*L^2*L1*k2*u2^2 + 3*L^2*L1^2*k1*u3 - 3*L^2*L1^2*k2*u2 - 3*L*L1^2*k1*vL^2 + 3*L^2*L1*k1*vL^2 - 3*L*L1^2*k1*wL^2 + 3*L^2*L1*k1*wL^2 + 3*L*k2*u1^2*u2^2 + 3*L^2*k2*u1*u2^2 - 3*L^2*k2*u1^2*u2 + 3*L1^2*k1*u1*u2^2 - 3*L1*k2*u1^2*u2^2 + 3*L1^2*k1*u1*u3^2 + 9*L1^2*k2*u1*u2^2 - 6*L1^2*k2*u1^2*u2 - 3*L1*k1*u2^2*u3^2 - 6*L1^2*k1*u2*u3^2 + 9*L1^2*k1*u2^2*u3 + 3*L1^2*k2*u1^2*u3 + 3*L1^2*k2*u2^2*u3 - 3*L*k1*u2^2*vL^2 + 3*L^2*k1*u2*vL^2 - 3*L*k1*u3^2*vL^2 + 3*L1*k1*u2^2*vL^2 + 3*L1*k2*u1^2*vL^2 - 3*L^2*k1*u3*vL^2 + 3*L1^2*k1*u2*vL^2 - 3*L1^2*k2*u1*vL^2 + 3*L1*k1*u3^2*vL^2 + 3*L1*k2*u2^2*vL^2 - 3*L1^2*k1*u3*vL^2 + 3*L1^2*k2*u2*vL^2 - 3*L*k1*u2^2*wL^2 + 3*L^2*k1*u2*wL^2 - 3*L*k1*u3^2*wL^2 + 3*L1*k1*u2^2*wL^2 + 3*L1*k2*u1^2*wL^2 - 3*L^2*k1*u3*wL^2 + 3*L1^2*k1*u2*wL^2 - 3*L1^2*k2*u1*wL^2 + 3*L1*k1*u3^2*wL^2 + 3*L1*k2*u2^2*wL^2 - 3*L1^2*k1*u3*wL^2 + 3*L1^2*k2*u2*wL^2 - 3*k2*u1*u2^2*vL^2 + 3*k2*u1^2*u2*vL^2 + 3*k1*u2*u3^2*vL^2 - 3*k1*u2^2*u3*vL^2 - 3*k2*u1*u2^2*wL^2 + 3*k2*u1^2*u2*wL^2 + 3*k1*u2*u3^2*wL^2 - 3*k1*u2^2*u3*wL^2 - 3*L*L1*k1*u1*u2^2 - 6*L*L1^2*k1*u1*u2 + 3*L^2*L1*k1*u1*u2 - 3*L*L1*k1*u1*u3^2 - 12*L*L1*k2*u1*u2^2 + 9*L*L1*k2*u1^2*u2 + 6*L*L1^2*k1*u1*u3 - 15*L*L1^2*k2*u1*u2 - 3*L^2*L1*k1*u1*u3 + 6*L^2*L1*k2*u1*u2 + 3*L*L1*k1*u2*u3^2 - 6*L*L1*k1*u2^2*u3 - 3*L*L1*k2*u1^2*u3 - 12*L*L1^2*k1*u2*u3 + 3*L*L1^2*k2*u1*u3 + 3*L^2*L1*k1*u2*u3 - 3*L*L1*k2*u2^2*u3 - 3*L*L1^2*k2*u2*u3 - 6*L*L1*k1*u2*vL^2 + 6*L*L1*k1*u3*vL^2 - 6*L*L1*k1*u2*wL^2 + 6*L*L1*k1*u3*wL^2 + 3*L*k2*u1*u2^2*u3 - 3*L*k2*u1^2*u2*u3 + 3*L1*k1*u1*u2*u3^2 - 3*L1*k1*u1*u2^2*u3 - 6*L1^2*k1*u1*u2*u3 - 3*L1*k2*u1*u2^2*u3 + 3*L1*k2*u1^2*u2*u3 - 6*L1^2*k2*u1*u2*u3 + 6*L*k1*u2*u3*vL^2 - 6*L1*k2*u1*u2*vL^2 - 6*L1*k1*u2*u3*vL^2 + 6*L*k1*u2*u3*wL^2 - 6*L1*k2*u1*u2*wL^2 - 6*L1*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2*u3 + 6*L*L1*k2*u1*u2*u3))/((Mb2 + dm)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^3) + ((vL^2 + wL^2)*(2*k1*u2^3*vL - 2*k2*u1^3*vL - 2*k1*u3^3*vL + 2*k2*u2^3*vL - 2*L^3*k1*vL + 2*L1^3*k1*vL + 2*L1^3*k2*vL - 6*L*L1^2*k1*vL + 6*L^2*L1*k1*vL - 6*L*k1*u2^2*vL + 6*L^2*k1*u2*vL - 6*L*k1*u3^2*vL + 6*L1*k1*u2^2*vL + 6*L1*k2*u1^2*vL - 6*L^2*k1*u3*vL + 6*L1^2*k1*u2*vL - 6*L1^2*k2*u1*vL + 6*L1*k1*u3^2*vL + 6*L1*k2*u2^2*vL - 6*L1^2*k1*u3*vL + 6*L1^2*k2*u2*vL - 6*k2*u1*u2^2*vL + 6*k2*u1^2*u2*vL + 6*k1*u2*u3^2*vL - 6*k1*u2^2*u3*vL - 12*L*L1*k1*u2*vL + 12*L*L1*k1*u3*vL + 12*L*k1*u2*u3*vL - 12*L1*k2*u1*u2*vL - 12*L1*k1*u2*u3*vL))/((Mb2 + dm)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^3), (2*wL*(L^3*L1^2*k1 - L1^5*k2 - 3*L^2*L1^3*k1 - L1^5*k1 - L^2*L1^3*k2 + L^2*k2*u1^3 - L^2*k2*u2^3 - 4*L1^2*k1*u2^3 + L1^2*k2*u1^3 - 6*L1^3*k1*u2^2 - 3*L1^3*k2*u1^2 + L1^2*k1*u3^3 - 4*L1^2*k2*u2^3 - 3*L1^3*k1*u3^2 - 6*L1^3*k2*u2^2 - L^3*k1*vL^2 + L1^3*k1*vL^2 + L1^3*k2*vL^2 - L^3*k1*wL^2 + L1^3*k1*wL^2 + L1^3*k2*wL^2 + k1*u2^3*vL^2 - k2*u1^3*vL^2 - k1*u3^3*vL^2 + k2*u2^3*vL^2 + k1*u2^3*wL^2 - k2*u1^3*wL^2 - k1*u3^3*wL^2 + k2*u2^3*wL^2 + 3*L*L1^4*k1 + 2*L*L1^4*k2 + L1^4*k1*u1 + L*k2*u2^4 - L1*k1*u2^4 - 4*L1^4*k1*u2 + 3*L1^4*k2*u1 - L1*k2*u2^4 + 3*L1^4*k1*u3 - 4*L1^4*k2*u2 + L1^4*k2*u3 - 3*L*L1^3*k1*u1 - L^3*L1*k1*u1 + 3*L*L1*k1*u2^3 - 2*L*L1*k2*u1^3 + 9*L*L1^3*k1*u2 - 6*L*L1^3*k2*u1 + L^3*L1*k1*u2 + 5*L*L1*k2*u2^3 - 6*L*L1^3*k1*u3 + 7*L*L1^3*k2*u2 - L*L1^3*k2*u3 - 3*L*k2*u1*u2^3 - L*k2*u1^3*u2 + L1*k1*u1*u2^3 + 3*L1^3*k1*u1*u2 + L*k2*u1^3*u3 - L1*k1*u1*u3^3 + 3*L1*k2*u1*u2^3 + L1*k2*u1^3*u2 - 3*L1^3*k1*u1*u3 + 9*L1^3*k2*u1*u2 - L*k2*u2^3*u3 + L1*k1*u2*u3^3 + 3*L1*k1*u2^3*u3 - L1*k2*u1^3*u3 + 9*L1^3*k1*u2*u3 - 3*L1^3*k2*u1*u3 + L1*k2*u2^3*u3 + 3*L1^3*k2*u2*u3 + 3*L^2*L1^2*k1*u1 + 9*L*L1^2*k1*u2^2 + 6*L*L1^2*k2*u1^2 - 3*L^2*L1*k1*u2^2 - 3*L^2*L1*k2*u1^2 - 6*L^2*L1^2*k1*u2 + 3*L^2*L1^2*k2*u1 + 3*L*L1^2*k1*u3^2 + 9*L*L1^2*k2*u2^2 - 3*L^2*L1*k2*u2^2 + 3*L^2*L1^2*k1*u3 - 3*L^2*L1^2*k2*u2 - 3*L*L1^2*k1*vL^2 + 3*L^2*L1*k1*vL^2 - 3*L*L1^2*k1*wL^2 + 3*L^2*L1*k1*wL^2 + 3*L*k2*u1^2*u2^2 + 3*L^2*k2*u1*u2^2 - 3*L^2*k2*u1^2*u2 + 3*L1^2*k1*u1*u2^2 - 3*L1*k2*u1^2*u2^2 + 3*L1^2*k1*u1*u3^2 + 9*L1^2*k2*u1*u2^2 - 6*L1^2*k2*u1^2*u2 - 3*L1*k1*u2^2*u3^2 - 6*L1^2*k1*u2*u3^2 + 9*L1^2*k1*u2^2*u3 + 3*L1^2*k2*u1^2*u3 + 3*L1^2*k2*u2^2*u3 - 3*L*k1*u2^2*vL^2 + 3*L^2*k1*u2*vL^2 - 3*L*k1*u3^2*vL^2 + 3*L1*k1*u2^2*vL^2 + 3*L1*k2*u1^2*vL^2 - 3*L^2*k1*u3*vL^2 + 3*L1^2*k1*u2*vL^2 - 3*L1^2*k2*u1*vL^2 + 3*L1*k1*u3^2*vL^2 + 3*L1*k2*u2^2*vL^2 - 3*L1^2*k1*u3*vL^2 + 3*L1^2*k2*u2*vL^2 - 3*L*k1*u2^2*wL^2 + 3*L^2*k1*u2*wL^2 - 3*L*k1*u3^2*wL^2 + 3*L1*k1*u2^2*wL^2 + 3*L1*k2*u1^2*wL^2 - 3*L^2*k1*u3*wL^2 + 3*L1^2*k1*u2*wL^2 - 3*L1^2*k2*u1*wL^2 + 3*L1*k1*u3^2*wL^2 + 3*L1*k2*u2^2*wL^2 - 3*L1^2*k1*u3*wL^2 + 3*L1^2*k2*u2*wL^2 - 3*k2*u1*u2^2*vL^2 + 3*k2*u1^2*u2*vL^2 + 3*k1*u2*u3^2*vL^2 - 3*k1*u2^2*u3*vL^2 - 3*k2*u1*u2^2*wL^2 + 3*k2*u1^2*u2*wL^2 + 3*k1*u2*u3^2*wL^2 - 3*k1*u2^2*u3*wL^2 - 3*L*L1*k1*u1*u2^2 - 6*L*L1^2*k1*u1*u2 + 3*L^2*L1*k1*u1*u2 - 3*L*L1*k1*u1*u3^2 - 12*L*L1*k2*u1*u2^2 + 9*L*L1*k2*u1^2*u2 + 6*L*L1^2*k1*u1*u3 - 15*L*L1^2*k2*u1*u2 - 3*L^2*L1*k1*u1*u3 + 6*L^2*L1*k2*u1*u2 + 3*L*L1*k1*u2*u3^2 - 6*L*L1*k1*u2^2*u3 - 3*L*L1*k2*u1^2*u3 - 12*L*L1^2*k1*u2*u3 + 3*L*L1^2*k2*u1*u3 + 3*L^2*L1*k1*u2*u3 - 3*L*L1*k2*u2^2*u3 - 3*L*L1^2*k2*u2*u3 - 6*L*L1*k1*u2*vL^2 + 6*L*L1*k1*u3*vL^2 - 6*L*L1*k1*u2*wL^2 + 6*L*L1*k1*u3*wL^2 + 3*L*k2*u1*u2^2*u3 - 3*L*k2*u1^2*u2*u3 + 3*L1*k1*u1*u2*u3^2 - 3*L1*k1*u1*u2^2*u3 - 6*L1^2*k1*u1*u2*u3 - 3*L1*k2*u1*u2^2*u3 + 3*L1*k2*u1^2*u2*u3 - 6*L1^2*k2*u1*u2*u3 + 6*L*k1*u2*u3*vL^2 - 6*L1*k2*u1*u2*vL^2 - 6*L1*k1*u2*u3*vL^2 + 6*L*k1*u2*u3*wL^2 - 6*L1*k2*u1*u2*wL^2 - 6*L1*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2*u3 + 6*L*L1*k2*u1*u2*u3))/((Mb2 + dm)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^3) + ((vL^2 + wL^2)*(2*k1*u2^3*wL - 2*k2*u1^3*wL - 2*k1*u3^3*wL + 2*k2*u2^3*wL - 2*L^3*k1*wL + 2*L1^3*k1*wL + 2*L1^3*k2*wL - 6*L*L1^2*k1*wL + 6*L^2*L1*k1*wL - 6*L*k1*u2^2*wL + 6*L^2*k1*u2*wL - 6*L*k1*u3^2*wL + 6*L1*k1*u2^2*wL + 6*L1*k2*u1^2*wL - 6*L^2*k1*u3*wL + 6*L1^2*k1*u2*wL - 6*L1^2*k2*u1*wL + 6*L1*k1*u3^2*wL + 6*L1*k2*u2^2*wL - 6*L1^2*k1*u3*wL + 6*L1^2*k2*u2*wL - 6*k2*u1*u2^2*wL + 6*k2*u1^2*u2*wL + 6*k1*u2*u3^2*wL - 6*k1*u2^2*u3*wL - 12*L*L1*k1*u2*wL + 12*L*L1*k1*u3*wL + 12*L*k1*u2*u3*wL - 12*L1*k2*u1*u2*wL - 12*L1*k1*u2*u3*wL))/((Mb2 + dm)*(L1 - u1 + u2)^3*(L - L1 - u2 + uvL^2 + wL^2)*(3*L^2*k1*vL^2 - L1^4*k2 - 3*L^2*L1^2*k1 - 9*L1^2*k1*u2^2 - 3*L1^2*k2*u1^2 - 3*L1^2*k1*u3^2 - 3*L1^2*k2*u2^2 - 3*L1^4*k1 + 3*L1^2*k1*vL^2 + 3*L^2*k1*wL^2 + 3*L1^2*k1*wL^2 + 3*k1*u2^2*vL^2 + 3*k1*u3^2*vL^2 + 3*k1*u2^2*wL^2 + 3*k1*u3^2*wL^2 + 6*L*L1^3*k1 + L*L1^3*k2 - L*k2*u1^3 + 3*L1^3*k1*u1 + L*k2*u2^3 - 3*L1*k1*u2^3 + L1*k2*u1^3 - 9*L1^3*k1*u2 + 3*L1^3*k2*u1 - L1*k2*u2^3 + 6*L1^3*k1*u3 - 3*L1^3*k2*u2 - 6*L*L1^2*k1*u1 + 3*L^2*L1*k1*u1 + 6*L*L1*k1*u2^2 + 3*L*L1*k2*u1^2 + 12*L*L1^2*k1*u2 - 3*L*L1^2*k2*u1 - 3*L^2*L1*k1*u2 + 3*L*L1*k2*u2^2 - 6*L*L1^2*k1*u3 + 3*L*L1^2*k2*u2 - 6*L*L1*k1*vL^2 - 6*L*L1*k1*wL^2 - 3*L*k2*u1*u2^2 + 3*L*k2*u1^2*u2 + 3*L1*k1*u1*u2^2 + 6*L1^2*k1*u1*u2 + 3*L1*k1*u1*u3^2 + 3*L1*k2*u1*u2^2 - 3*L1*k2*u1^2*u2 - 6*L1^2*k1*u1*u3 + 6*L1^2*k2*u1*u2 - 3*L1*k1*u2*u3^2 + 6*L1*k1*u2^2*u3 + 12*L1^2*k1*u2*u3 - 6*L*k1*u2*vL^2 + 6*L*k1*u3*vL^2 + 6*L1*k1*u2*vL^2 - 6*L1*k1*u3*vL^2 - 6*L*k1*u2*wL^2 + 6*L*k1*u3*wL^2 + 6*L1*k1*u2*wL^2 - 6*L1*k1*u3*wL^2 - 6*k1*u2*u3*vL^2 - 6*k1*u2*u3*wL^2 - 6*L*L1*k1*u1*u2 + 6*L*L1*k1*u1*u3 - 6*L*L1*k2*u1*u2 - 6*L*L1*k1*u2*u3 - 6*L1*k1*u1*u2*u3))/((Mb2 + dm)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^3) - (3*(vL^2 + wL^2)*(L^3*L1^2*k1 - L1^5*k2 - 3*L^2*L1^3*k1 - L1^5*k1 - L^2*L1^3*k2 + L^2*k2*u1^3 - L^2*k2*u2^3 - 4*L1^2*k1*u2^3 + L1^2*k2*u1^3 - 6*L1^3*k1*u2^2 - 3*L1^3*k2*u1^2 + L1^2*k1*u3^3 - 4*L1^2*k2*u2^3 - 3*L1^3*k1*u3^2 - 6*L1^3*k2*u2^2 - L^3*k1*vL^2 + L1^3*k1*vL^2 + L1^3*k2*vL^2 - L^3*k1*wL^2 + L1^3*k1*wL^2 + L1^3*k2*wL^2 + k1*u2^3*vL^2 - k2*u1^3*vL^2 - k1*u3^3*vL^2 + k2*u2^3*vL^2 + k1*u2^3*wL^2 - k2*u1^3*wL^2 - k1*u3^3*wL^2 + k2*u2^3*wL^2 + 3*L*L1^4*k1 + 2*L*L1^4*k2 + L1^4*k1*u1 + L*k2*u2^4 - L1*k1*u2^4 - 4*L1^4*k1*u2 + 3*L1^4*k2*u1 - L1*k2*u2^4 + 3*L1^4*k1*u3 - 4*L1^4*k2*u2 + L1^4*k2*u3 - 3*L*L1^3*k1*u1 - L^3*L1*k1*u1 + 3*L*L1*k1*u2^3 - 2*L*L1*k2*u1^3 + 9*L*L1^3*k1*u2 - 6*L*L1^3*k2*u1 + L^3*L1*k1*u2 + 5*L*L1*k2*u2^3 - 6*L*L1^3*k1*u3 + 7*L*L1^3*k2*u2 - L*L1^3*k2*u3 - 3*L*k2*u1*u2^3 - L*k2*u1^3*u2 + L1*k1*u1*u2^3 + 3*L1^3*k1*u1*u2 + L*k2*u1^3*u3 - L1*k1*u1*u3^3 + 3*L1*k2*u1*u2^3 + L1*k2*u1^3*u2 - 3*L1^3*k1*u1*u3 + 9*L1^3*k2*u1*u2 - L*k2*u2^3*u3 + L1*k1*u2*u3^3 + 3*L1*k1*u2^3*u3 - L1*k2*u1^3*u3 + 9*L1^3*k1*u2*u3 - 3*L1^3*k2*u1*u3 + L1*k2*u2^3*u3 + 3*L1^3*k2*u2*u3 + 3*L^2*L1^2*k1*u1 + 9*L*L1^2*k1*u2^2 + 6*L*L1^2*k2*u1^2 - 3*L^2*L1*k1*u2^2 - 3*L^2*L1*k2*u1^2 - 6*L^2*L1^2*k1*u2 + 3*L^2*L1^2*k2*u1 + 3*L*L1^2*k1*u3^2 + 9*L*L1^2*k2*u2^2 - 3*L^2*L1*k2*u2^2 + 3*L^2*L1^2*k1*u3 - 3*L^2*L1^2*k2*u2 - 3*L*L1^2*k1*vL^2 + 3*L^2*L1*k1*vL^2 - 3*L*L1^2*k1*wL^2 + 3*L^2*L1*k1*wL^2 + 3*L*k2*u1^2*u2^2 + 3*L^2*k2*u1*u2^2 - 3*L^2*k2*u1^2*u2 + 3*L1^2*k1*u1*u2^2 - 3*L1*k2*u1^2*u2^2 + 3*L1^2*k1*u1*u3^2 + 9*L1^2*k2*u1*u2^2 - 6*L1^2*k2*u1^2*u2 - 3*L1*k1*u2^2*u3^2 - 6*L1^2*k1*u2*u3^2 + 9*L1^2*k1*u2^2*u3 + 3*L1^2*k2*u1^2*u3 + 3*L1^2*k2*u2^2*u3 - 3*L*k1*u2^2*vL^2 + 3*L^2*k1*u2*vL^2 - 3*L*k1*u3^2*vL^2 + 3*L1*k1*u2^2*vL^2 + 3*L1*k2*u1^2*vL^2 - 3*L^2*k1*u3*vL^2 + 3*L1^2*k1*u2*vL^2 - 3*L1^2*k2*u1*vL^2 + 3*L1*k1*u3^2*vL^2 + 3*L1*k2*u2^2*vL^2 - 3*L1^2*k1*u3*vL^2 + 3*L1^2*k2*u2*vL^2 - 3*L*k1*u2^2*wL^2 + 3*L^2*k1*u2*wL^2 - 3*L*k1*u3^2*wL^2 + 3*L1*k1*u2^2*wL^2 + 3*L1*k2*u1^2*wL^2 - 3*L^2*k1*u3*wL^2 + 3*L1^2*k1*u2*wL^2 - 3*L1^2*k2*u1*wL^2 + 3*L1*k1*u3^2*wL^2 + 3*L1*k2*u2^2*wL^2 - 3*L1^2*k1*u3*wL^2 + 3*L1^2*k2*u2*wL^2 - 3*k2*u1*u2^2*vL^2 + 3*k2*u1^2*u2*vL^2 + 3*k1*u2*u3^2*vL^2 - 3*k1*u2^2*u3*vL^2 - 3*k2*u1*u2^2*wL^2 + 3*k2*u1^2*u2*wL^2 + 3*k1*u2*u3^2*wL^2 - 3*k1*u2^2*u3*wL^2 - 3*L*L1*k1*u1*u2^2 - 6*L*L1^2*k1*u1*u2 + 3*L^2*L1*k1*u1*u2 - 3*L*L1*k1*u1*u3^2 - 12*L*L1*k2*u1*u2^2 + 9*L*L1*k2*u1^2*u2 + 6*L*L1^2*k1*u1*u3 - 15*L*L1^2*k2*u1*u2 - 3*L^2*L1*k1*u1*u3 + 6*L^2*L1*k2*u1*u2 + 3*L*L1*k1*u2*u3^2 - 6*L*L1*k1*u2^2*u3 - 3*L*L1*k2*u1^2*u3 - 12*L*L1^2*k1*u2*u3 + 3*L*L1^2*k2*u1*u3 + 3*L^2*L1*k1*u2*u3 - 3*L*L1*k2*u2^2*u3 - 3*L*L1^2*k2*u2*u3 - 6*L*L1*k1*u2*vL^2 + 6*L*L1*k1*u3*vL^2 - 6*L*L1*k1*u2*wL^2 + 6*L*L1*k1*u3*wL^2 + 3*L*k2*u1*u2^2*u3 - 3*L*k2*u1^2*u2*u3 + 3*L1*k1*u1*u2*u3^2 - 3*L1*k1*u1*u2^2*u3 - 6*L1^2*k1*u1*u2*u3 - 3*L1*k2*u1*u2^2*u3 + 3*L1*k2*u1^2*u2*u3 - 6*L1^2*k2*u1*u2*u3 + 6*L*k1*u2*u3*vL^2 - 6*L1*k2*u1*u2*vL^2 - 6*L1*k1*u2*u3*vL^2 + 6*L*k1*u2*u3*wL^2 - 6*L1*k2*u1*u2*wL^2 - 6*L1*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2*u3 + 6*L*L1*k2*u1*u2*u3))/((Mb2 + dm)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^4), 0, 0, 0, 0, 0, 0, 0, 0, 0;
     (4*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^2) - (2*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*((L1^3*k1)/2 + k1*u2^3 + k2*u2^3 - k1*u1*u2^2 - k1*u1*u3^2 - k2*u1*u2^2 + k1*u2*u3^2 - 2*k1*u2^2*u3 - k2*u1*u3^2 + k2*u2*u3^2 - 2*k2*u2^2*u3 - k2*u1*vL^2 + k2*u2*vL^2 - k2*u1*wL^2 + k2*u2*wL^2 - L*L1^2*k1 + (L^2*L1*k1)/2 - L^2*k1*u1 - 2*L*k1*u2^2 + L^2*k1*u2 - L1^2*k1*u1 - L*k2*u2^2 + (5*L1*k1*u2^2)/2 + 2*L1^2*k1*u2 + (L1*k1*u3^2)/2 + 2*L1*k2*u2^2 - L1^2*k1*u3 + L1^2*k2*u2 + L1*k2*u3^2 - L1^2*k2*u3 + L1*k2*vL^2 + L1*k2*wL^2 + 2*L*k1*u1*u2 - 2*L*k1*u1*u3 + L*k2*u1*u2 - 2*L1*k1*u1*u2 + 2*L*k1*u2*u3 - L*k2*u1*u3 + 2*L1*k1*u1*u3 - L1*k2*u1*u2 + L*k2*u2*u3 - 3*L1*k1*u2*u3 + L1*k2*u1*u3 - 3*L1*k2*u2*u3 + 2*k1*u1*u2*u3 + 2*k2*u1*u2*u3 + 2*L*L1*k1*u1 - 3*L*L1*k1*u2 + L*L1*k1*u3 - L*L1*k2*u2 + L*L1*k2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + udm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*((L1^3*k1)/2 + (L1^3*k2)/2 + 2*k1*u2^3 + 2*k2*u2^3 - 3*k1*u1*u2^2 + k1*u1^2*u2 - k1*u1*u3^2 - k1*u1^2*u3 - 3*k2*u1*u2^2 + k2*u1^2*u2 + k1*u2*u3^2 - 3*k1*u2^2*u3 - k2*u1*u3^2 - k2*u1^2*u3 + k2*u2*u3^2 - 3*k2*u2^2*u3 + k1*u2*vL^2 - k2*u1*vL^2 - k1*u3*vL^2 + k2*u2*vL^2 + k1*u2*wL^2 - k2*u1*wL^2 - k1*u3*wL^2 + k2*u2*wL^2 - L*L1^2*k1 + (L^2*L1*k1)/2 - (L*L1^2*k2)/2 - L*k1*u1^2 - L^2*k1*u1 - 3*L*k1*u2^2 - (L*k2*u1^2)/2 + L1*k1*u1^2 + L^2*k1*u2 - 2*L1^2*k1*u1 - (3*L*k2*u2^2)/2 + (9*L1*k1*u2^2)/2 + (L1*k2*u1^2)/2 + 3*L1^2*k1*u2 - L1^2*k2*u1 + (L1*k1*u3^2)/2 + (9*L1*k2*u2^2)/2 - L1^2*k1*u3 + 3*L1^2*k2*u2 + L1*k2*u3^2 - 2*L1^2*k2*u3 - L*k1*vL^2 + L1*k1*vL^2 + L1*k2*vL^2 - L*k1*wL^2 + L1*k1*wL^2 + L1*k2*wL^2 + 4*L*k1*u1*u2 - 2*L*k1*u1*u3 + 2*L*k2*u1*u2 - 5*L1*k1*u1*u2 + 2*L*k1*u2*u3 - L*k2*u1*u3 + 3*L1*k1*u1*u3 - 4*L1*k2*u1*u2 + L*k2*u2*u3 - 4*L1*k1*u2*u3 + 3*L1*k2*u1*u3 - 5*L1*k2*u2*u3 + 4*k1*u1*u2*u3 + 4*k2*u1*u2*u3 + 3*L*L1*k1*u1 - 4*L*L1*k1*u2 + L*L1*k2*u1 + L*L1*k1*u3 - 2*L*L1*k2*u2 + L*L1*k2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (4*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3) - (4*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + udm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*(k1*u2^2*vL + k2*u1^2*vL + k1*u3^2*vL + k2*u2^2*vL + L^2*k1*vL + L1^2*k1*vL + L1^2*k2*vL - 2*L*k1*u2*vL + 2*L*k1*u3*vL + 2*L1*k1*u2*vL - 2*L1*k2*u1*vL - 2*L1*k1*u3*vL + 2*L1*k2*u2*vL - 2*k2*u1*u2*vL - 2*k1*u2*u3*vL - 2*L*L1*k1*vL))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (2*(2*Ib2*dm + dm^2*l2^2 + 2*Ib2*Mb2 - dm^2*l2^2*cos(2*alfa + 2*teta2) + 2*Mb2*dm*l2^2)*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + udm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*(k1*u2^2*wL + k2*u1^2*wL + k1*u3^2*wL + k2*u2^2*wL + L^2*k1*wL + L1^2*k1*wL + L1^2*k2*wL - 2*L*k1*u2*wL + 2*L*k1*u3*wL + 2*L1*k1*u2*wL - 2*L1*k2*u1*wL - 2*L1*k1*u3*wL + 2*L1*k2*u2*wL - 2*k2*u1*u2*wL - 2*k1*u2*u3*wL - 2*L*L1*k1*wL))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (2*dm^2*l2^2*sin(2*alfa + 2*teta2)*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), -(2*(2*dm^2*l2^2*wL*cos(2*alfa + 2*teta2) - 2*dm^2*l2^2*vL*sin(2*alfa + 2*teta2))*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + udm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*(2*k1*u1*u2^2 - k1*u2^3 - k2*u2^3 - (L1^3*k2)/2 - k1*u1^2*u2 + k1*u1^2*u3 + 2*k2*u1*u2^2 - k2*u1^2*u2 + k1*u2^2*u3 + k2*u1^2*u3 + k2*u2^2*u3 - k1*u2*vL^2 + k1*u3*vL^2 - k1*u2*wL^2 + k1*u3*wL^2 + (L*L1^2*k2)/2 + L*k1*u1^2 + L*k1*u2^2 + (L*k2*u1^2)/2 - L1*k1*u1^2 + L1^2*k1*u1 + (L*k2*u2^2)/2 - 2*L1*k1*u2^2 - (L1*k2*u1^2)/2 - L1^2*k1*u2 + L1^2*k2*u1 - (5*L1*k2*u2^2)/2 - 2*L1^2*k2*u2 + L1^2*k2*u3 + L*k1*vL^2 - L1*k1*vL^2 + L*k1*wL^2 - L1*k1*wL^2 - 2*L*k1*u1*u2 - L*k2*u1*u2 + 3*L1*k1*u1*u2 - L1*k1*u1*u3 + 3*L1*k2*u1*u2 + L1*k1*u2*u3 - 2*L1*k2*u1*u3 + 2*L1*k2*u2*u3 - 2*k1*u1*u2*u3 - 2*k2*u1*u2*u3 - L*L1*k1*u1 + L*L1*k1*u2 - L*L1*k2*u1 + L*L1*k2*u2))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (4*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3), 0, 0, 0, 0, 0, 0, 0, 0, 0;
     (4*(Ib2*Mb2*wL + Ib2*dm*wL + Mb2*dm*l2^2*wL + dm^2*l2^2*wL*cos(alfa + teta2)^2 - (dm^2*l2^2*vL*sin(2*alfa + 2*teta2))/2)*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^2) - (2*(Ib2*Mb2*wL + Ib2*dm*wL + Mb2*dm*l2^2*wL + dm^2*l2^2*wL*cos(alfa + teta2)^2 - (dm^2*l2^2*vL*sin(2*alfa + 2*teta2))/2)*(L1^3*k1 + 2*k1*u2^3 + 2*k2*u2^3 - 2*k1*u1*u2^2 - 2*k1*u1*u3^2 - 2*k2*u1*u2^2 + 2*k1*u2*u3^2 - 4*k1*u2^2*u3 - 2*k2*u1*u3^2 + 2*k2*u2*u3^2 - 4*k2*u2^2*u3 - 2*k2*u1*vL^2 + 2*k2*u2*vL^2 - 2*k2*u1*wL^2 + 2*k2*u2*wL^2 - 2*L*L1^2*k1 + L^2*L1*k1 - 2*L^2*k1*u1 - 4*L*k1*u2^2 + 2*L^2*k1*u2 - 2*L1^2*k1*u1 - 2*L*k2*u2^2 + 5*L1*k1*u2^2 + 4*L1^2*k1*u2 + L1*k1*u3^2 + 4*L1*k2*u2^2 - 2*L1^2*k1*u3 + 2*L1^2*k2*u2 + 2*L1*k2*u3^2 - 2*L1^2*k2*u3 + 2*L1*k2*vL^2 + 2*L1*k2*wL^2 + 4*L*k1*u1*u2 - 4*L*k1*u1*u3 + 2*L*k2*u1*u2 - 4*L1*k1*u1*u2 + 4*L*k1*u2*u3 - 2*L*k2*u1*u3 + 4*L1*k1*u1*u3 - 2*L1*k2*u1*u2 + 2*L*k2*u2*u3 - 6*L1*k1*u2*u3 + 2*L1*k2*u1*u3 - 6*L1*k2*u2*u3 + 4*k1*u1*u2*u3 + 4*k2*u1*u2*u3 + 4*L*L1*k1*u1 - 6*L*L1*k1*u2 + 2*L*L1*k1*u3 - 2*L*L1*k2*u2 + 2*L*L1*k2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + ub2*Mb2*wL + Ib2*dm*wL + Mb2*dm*l2^2*wL + dm^2*l2^2*wL*cos(alfa + teta2)^2 - (dm^2*l2^2*vL*sin(2*alfa + 2*teta2))/2)*(L1^3*k1 + L1^3*k2 + 4*k1*u2^3 + 4*k2*u2^3 - 6*k1*u1*u2^2 + 2*k1*u1^2*u2 - 2*k1*u1*u3^2 - 2*k1*u1^2*u3 - 6*k2*u1*u2^2 + 2*k2*u1^2*u2 + 2*k1*u2*u3^2 - 6*k1*u2^2*u3 - 2*k2*u1*u3^2 - 2*k2*u1^2*u3 + 2*k2*u2*u3^2 - 6*k2*u2^2*u3 + 2*k1*u2*vL^2 - 2*k2*u1*vL^2 - 2*k1*u3*vL^2 + 2*k2*u2*vL^2 + 2*k1*u2*wL^2 - 2*k2*u1*wL^2 - 2*k1*u3*wL^2 + 2*k2*u2*wL^2 - 2*L*L1^2*k1 + L^2*L1*k1 - L*L1^2*k2 - 2*L*k1*u1^2 - 2*L^2*k1*u1 - 6*L*k1*u2^2 - L*k2*u1^2 + 2*L1*k1*u1^2 + 2*L^2*k1*u2 - 4*L1^2*k1*u1 - 3*L*k2*u2^2 + 9*L1*k1*u2^2 + L1*k2*u1^2 + 6*L1^2*k1*u2 - 2*L1^2*k2*u1 + L1*k1*u3^2 + 9*L1*k2*u2^2 - 2*L1^2*k1*u3 + 6*L1^2*k2*u2 + 2*L1*k2*u3^2 - 4*L1^2*k2*u3 - 2*L*k1*vL^2 + 2*L1*k1*vL^2 + 2*L1*k2*vL^2 - 2*L*k1*wL^2 + 2*L1*k1*wL^2 + 2*L1*k2*wL^2 + 8*L*k1*u1*u2 - 4*L*k1*u1*u3 + 4*L*k2*u1*u2 - 10*L1*k1*u1*u2 + 4*L*k1*u2*u3 - 2*L*k2*u1*u3 + 6*L1*k1*u1*u3 - 8*L1*k2*u1*u2 + 2*L*k2*u2*u3 - 8*L1*k1*u2*u3 + 6*L1*k2*u1*u3 - 10*L1*k2*u2*u3 + 8*k1*u1*u2*u3 + 8*k2*u1*u2*u3 + 6*L*L1*k1*u1 - 8*L*L1*k1*u2 + 2*L*L1*k2*u1 + 2*L*L1*k1*u3 - 4*L*L1*k2*u2 + 2*L*L1*k2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (4*(Ib2*Mb2*wL + Ib2*dm*wL + Mb2*dm*l2^2*wL + dm^2*l2^2*wL*cos(alfa + teta2)^2 - (dm^2*l2^2*vL*sin(2*alfa + 2*teta2))/2)*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3) - (4*(Ib2*Mb2*wL + Ib2*dm*wL + Mb2*dm*l2^2*wL + dm^2*l2^2*wL*cos(alfa + teta2)^2 - (dm^2*l2^2*vL*sin(2*alfa + 2*teta2))/2)*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + ub2*Mb2*wL + Ib2*dm*wL + Mb2*dm*l2^2*wL + dm^2*l2^2*wL*cos(alfa + teta2)^2 - (dm^2*l2^2*vL*sin(2*alfa + 2*teta2))/2)*(2*k1*u2^2*vL + 2*k2*u1^2*vL + 2*k1*u3^2*vL + 2*k2*u2^2*vL + 2*L^2*k1*vL + 2*L1^2*k1*vL + 2*L1^2*k2*vL - 4*L*k1*u2*vL + 4*L*k1*u3*vL + 4*L1*k1*u2*vL - 4*L1*k2*u1*vL - 4*L1*k1*u3*vL + 4*L1*k2*u2*vL - 4*k2*u1*u2*vL - 4*k1*u2*u3*vL - 4*L*L1*k1*vL))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (dm^2*l2^2*sin(2*alfa + 2*teta2)*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + ub2*dm + Ib2*Mb2 + Mb2*dm*l2^2 + dm^2*l2^2*cos(alfa + teta2)^2)*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (2*(Ib2*Mb2*wL + Ib2*dm*wL + Mb2*dm*l2^2*wL + dm^2*l2^2*wL*cos(alfa + teta2)^2 - (dm^2*l2^2*vL*sin(2*alfa + 2*teta2))/2)*(2*k1*u2^2*wL + 2*k2*u1^2*wL + 2*k1*u3^2*wL + 2*k2*u2^2*wL + 2*L^2*k1*wL + 2*L1^2*k1*wL + 2*L1^2*k2*wL - 4*L*k1*u2*wL + 4*L*k1*u3*wL + 4*L1*k1*u2*wL - 4*L1*k2*u1*wL - 4*L1*k1*u3*wL + 4*L1*k2*u2*wL - 4*k2*u1*u2*wL - 4*k1*u2*u3*wL - 4*L*L1*k1*wL))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2),                                                                                 -(2*(dm^2*l2^2*vL*cos(2*alfa + 2*teta2) + 2*dm^2*l2^2*wL*cos(alfa + teta2)*sin(alfa + teta2))*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + ub2*Mb2*wL + Ib2*dm*wL + Mb2*dm*l2^2*wL + dm^2*l2^2*wL*cos(alfa + teta2)^2 - (dm^2*l2^2*vL*sin(2*alfa + 2*teta2))/2)*(4*k1*u1*u2^2 - 2*k1*u2^3 - 2*k2*u2^3 - L1^3*k2 - 2*k1*u1^2*u2 + 2*k1*u1^2*u3 + 4*k2*u1*u2^2 - 2*k2*u1^2*u2 + 2*k1*u2^2*u3 + 2*k2*u1^2*u3 + 2*k2*u2^2*u3 - 2*k1*u2*vL^2 + 2*k1*u3*vL^2 - 2*k1*u2*wL^2 + 2*k1*u3*wL^2 + L*L1^2*k2 + 2*L*k1*u1^2 + 2*L*k1*u2^2 + L*k2*u1^2 - 2*L1*k1*u1^2 + 2*L1^2*k1*u1 + L*k2*u2^2 - 4*L1*k1*u2^2 - L1*k2*u1^2 - 2*L1^2*k1*u2 + 2*L1^2*k2*u1 - 5*L1*k2*u2^2 - 4*L1^2*k2*u2 + 2*L1^2*k2*u3 + 2*L*k1*vL^2 - 2*L1*k1*vL^2 + 2*L*k1*wL^2 - 2*L1*k1*wL^2 - 4*L*k1*u1*u2 - 2*L*k2*u1*u2 + 6*L1*k1*u1*u2 - 2*L1*k1*u1*u3 + 6*L1*k2*u1*u2 + 2*L1*k1*u2*u3 - 4*L1*k2*u1*u3 + 4*L1*k2*u2*u3 - 4*k1*u1*u2*u3 - 4*k2*u1*u2*u3 - 2*L*L1*k1*u1 + 2*L*L1*k1*u2 - 2*L*L1*k2*u1 + 2*L*L1*k2*u2))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (4*(Ib2*Mb2*wL + Ib2*dm*wL + Mb2*dm*l2^2*wL + dm^2*l2^2*wL*cos(alfa + teta2)^2 - (dm^2*l2^2*vL*sin(2*alfa + 2*teta2))/2)*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3), 0, 0, 0, 0, 0, 0, 0, 0, 0;
     (2*dm*l2*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(L1^3*k1 + 2*k1*u2^3 + 2*k2*u2^3 - 2*k1*u1*u2^2 - 2*k1*u1*u3^2 - 2*k2*u1*u2^2 + 2*k1*u2*u3^2 - 4*k1*u2^2*u3 - 2*k2*u1*u3^2 + 2*k2*u2*u3^2 - 4*k2*u2^2*u3 - 2*k2*u1*vL^2 + 2*k2*u2*vL^2 - 2*k2*u1*wL^2 + 2*k2*u2*wL^2 - 2*L*L1^2*k1 + L^2*L1*k1 - 2*L^2*k1*u1 - 4*L*k1*u2^2 + 2*L^2*k1*u2 - 2*L1^2*k1*u1 - 2*L*k2*u2^2 + 5*L1*k1*u2^2 + 4*L1^2*k1*u2 + L1*k1*u3^2 + 4*L1*k2*u2^2 - 2*L1^2*k1*u3 + 2*L1^2*k2*u2 + 2*L1*k2*u3^2 - 2*L1^2*k2*u3 + 2*L1*k2*vL^2 + 2*L1*k2*wL^2 + 4*L*k1*u1*u2 - 4*L*k1*u1*u3 + 2*L*k2*u1*u2 - 4*L1*k1*u1*u2 + 4*L*k1*u2*u3 - 2*L*k2*u1*u3 + 4*L1*k1*u1*u3 - 2*L1*k2*u1*u2 + 2*L*k2*u2*u3 - 6*L1*k1*u2*u3 + 2*L1*k2*u1*u3 - 6*L1*k2*u2*u3 + 4*k1*u1*u2*u3 + 4*k2*u1*u2*u3 + 4*L*L1*k1*u1 - 6*L*L1*k1*u2 + 2*L*L1*k1*u3 - 2*L*L1*k2*u2 + 2*L*L1*k2*u3))/((Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (4*dm*l2*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + udm*l2*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^2) - (4*dm*l2*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3) - (2*dm*l2*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(L1^3*k1 + L1^3*k2 + 4*k1*u2^3 + 4*k2*u2^3 - 6*k1*u1*u2^2 + 2*k1*u1^2*u2 - 2*k1*u1*u3^2 - 2*k1*u1^2*u3 - 6*k2*u1*u2^2 + 2*k2*u1^2*u2 + 2*k1*u2*u3^2 - 6*k1*u2^2*u3 - 2*k2*u1*u3^2 - 2*k2*u1^2*u3 + 2*k2*u2*u3^2 - 6*k2*u2^2*u3 + 2*k1*u2*vL^2 - 2*k2*u1*vL^2 - 2*k1*u3*vL^2 + 2*k2*u2*vL^2 + 2*k1*u2*wL^2 - 2*k2*u1*wL^2 - 2*k1*u3*wL^2 + 2*k2*u2*wL^2 - 2*L*L1^2*k1 + L^2*L1*k1 - L*L1^2*k2 - 2*L*k1*u1^2 - 2*L^2*k1*u1 - 6*L*k1*u2^2 - L*k2*u1^2 + 2*L1*k1*u1^2 + 2*L^2*k1*u2 - 4*L1^2*k1*u1 - 3*L*k2*u2^2 + 9*L1*k1*u2^2 + L1*k2*u1^2 + 6*L1^2*k1*u2 - 2*L1^2*k2*u1 + L1*k1*u3^2 + 9*L1*k2*u2^2 - 2*L1^2*k1*u3 + 6*L1^2*k2*u2 + 2*L1*k2*u3^2 - 4*L1^2*k2*u3 - 2*L*k1*vL^2 + 2*L1*k1*vL^2 + 2*L1*k2*vL^2 - 2*L*k1*wL^2 + 2*L1*k1*wL^2 + 2*L1*k2*wL^2 + 8*L*k1*u1*u2 - 4*L*k1*u1*u3 + 4*L*k2*u1*u2 - 10*L1*k1*u1*u2 + 4*L*k1*u2*u3 - 2*L*k2*u1*u3 + 6*L1*k1*u1*u3 - 8*L1*k2*u1*u2 + 2*L*k2*u2*u3 - 8*L1*k1*u2*u3 + 6*L1*k2*u1*u3 - 10*L1*k2*u2*u3 + 8*k1*u1*u2*u3 + 8*k2*u1*u2*u3 + 6*L*L1*k1*u1 - 8*L*L1*k1*u2 + 2*L*L1*k2*u1 + 2*L*L1*k1*u3 - 4*L*L1*k2*u2 + 2*L*L1*k2*u3))/((Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + udm*l2*sin(alfa + teta2)*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (2*dm*l2*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(2*k1*u2^2*vL + 2*k2*u1^2*vL + 2*k1*u3^2*vL + 2*k2*u2^2*vL + 2*L^2*k1*vL + 2*L1^2*k1*vL + 2*L1^2*k2*vL - 4*L*k1*u2*vL + 4*L*k1*u3*vL + 4*L1*k1*u2*vL - 4*L1*k2*u1*vL - 4*L1*k1*u3*vL + 4*L1*k2*u2*vL - 4*k2*u1*u2*vL - 4*k1*u2*u3*vL - 4*L*L1*k1*vL))/((Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + udm*l2*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(2*k1*u2^2*wL + 2*k2*u1^2*wL + 2*k1*u3^2*wL + 2*k2*u2^2*wL + 2*L^2*k1*wL + 2*L1^2*k1*wL + 2*L1^2*k2*wL - 4*L*k1*u2*wL + 4*L*k1*u3*wL + 4*L1*k1*u2*wL - 4*L1*k2*u1*wL - 4*L1*k1*u3*wL + 4*L1*k2*u2*wL - 4*k2*u1*u2*wL - 4*k1*u2*u3*wL - 4*L*L1*k1*wL))/((Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (2*dm*l2*cos(alfa + teta2)*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2),                                                                                                                                   (2*dm*l2*(vL*cos(alfa + teta2) + wL*sin(alfa + teta2))*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + udm*l2*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3) - (2*dm*l2*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(4*k1*u1*u2^2 - 2*k1*u2^3 - 2*k2*u2^3 - L1^3*k2 - 2*k1*u1^2*u2 + 2*k1*u1^2*u3 + 4*k2*u1*u2^2 - 2*k2*u1^2*u2 + 2*k1*u2^2*u3 + 2*k2*u1^2*u3 + 2*k2*u2^2*u3 - 2*k1*u2*vL^2 + 2*k1*u3*vL^2 - 2*k1*u2*wL^2 + 2*k1*u3*wL^2 + L*L1^2*k2 + 2*L*k1*u1^2 + 2*L*k1*u2^2 + L*k2*u1^2 - 2*L1*k1*u1^2 + 2*L1^2*k1*u1 + L*k2*u2^2 - 4*L1*k1*u2^2 - L1*k2*u1^2 - 2*L1^2*k1*u2 + 2*L1^2*k2*u1 - 5*L1*k2*u2^2 - 4*L1^2*k2*u2 + 2*L1^2*k2*u3 + 2*L*k1*vL^2 - 2*L1*k1*vL^2 + 2*L*k1*wL^2 - 2*L1*k1*wL^2 - 4*L*k1*u1*u2 - 2*L*k2*u1*u2 + 6*L1*k1*u1*u2 - 2*L1*k1*u1*u3 + 6*L1*k2*u1*u2 + 2*L1*k1*u2*u3 - 4*L1*k2*u1*u3 + 4*L1*k2*u2*u3 - 4*k1*u1*u2*u3 - 4*k2*u1*u2*u3 - 2*L*L1*k1*u1 + 2*L*L1*k1*u2 - 2*L*L1*k2*u1 + 2*L*L1*k2*u2))/((Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0;
     0, 0, -(3*k2*(vL^2 + wL^2)*(L*u2 - L*u3 - L1*u2 + L1*u3 - L^2 - L1^2 + vL^2 + wL^2 + 2*L*L1))/(M1*(L - L1 - u2 + u3)^4) - (k2*(vL^2 + wL^2)*(L - L1))/(M1*(L - L1 - u2 + u3)^3),                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      - (2*k2*vL*(L*u2 - L*u3 - L1*u2 + L1*u3 - L^2 - L1^2 + vL^2 + wL^2 + 2*L*L1))/(M1*(L - L1 - u2 + u3)^3) - (2*k2*vL*(vL^2 + wL^2))/(M1*(L - L1 - u2 + uk2*wL*(L*u2 - L*u3 - L1*u2 + L1*u3 - L^2 - L1^2 + vL^2 + wL^2 + 2*L*L1))/(M1*(L - L1 - u2 + u3)^3) - (2*k2*wL*(vL^2 + wL^2))/(M1*(L - L1 - u2 + u3)^3),                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    0,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    (3*k2*(vL^2 + wL^2)*(L*u2 - L*u3 - L1*u2 + L1*u3 - L^2 - L1^2 + vL^2 + wL^2 + 2*L*L1))/(M1*(L - L1 - u2 + u3)^4) + (k2*(vL^2 + wL^2)*(L - L1))/(M1*(L - L1 - u2 + u3)^3), 0, 0, 0, 0, 0, 0, 0, 0, 0;
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
%}
%{
erro = simplify(dFuzdZTRef - dFuzdZT);
%}

syms fN(u3) fT(u3,tetap3) 
syms Fy(vL,wL,tetap2,vpL,wpL) Fz(vL,wL,tetap2,vpL,wpL) T2(vL,wL,tetap2,vpL,wpL)
Fat = [0; 0; 0; 0; 0; 0; fN(u3); fT(u3,tetap3)];
Frub = [0; 0; 0; Fy(vL,wL,tetap2,vpL,wpL); Fz(vL,wL,tetap2,vpL,wpL); T2(vL,wL,tetap2,vpL,wpL); 0; 0];

Z = [uTil; upTil];

%%
syms u1(t) u2(t) u3(t) vL(t) wL(t) teta1(t) teta2(t) teta3(t)
up1 = diff(u1,t); up2 = diff(u2,t); up3 = diff(u3,t);
vpL = diff(vL,t); wpL = diff(wL,t);
tetap1 = diff(teta1,t); tetap2 = diff(teta2,t); tetap3 = diff(teta3,t);
upp1 = diff(up1,t); upp2 = diff(up2,t); upp3 = diff(up3,t);
vppL = diff(vpL,t); wppL = diff(wpL,t);
tetapp1 = diff(tetap1,t); tetapp2 = diff(tetap2,t); tetapp3 = diff(tetap3,t);

uTil = [u1, teta1, u2, vL, wL, teta2, u3, teta3].';
uTilEq = [0, 0, u2eq, 0, 0, 0, u3eq, 0].';

T = (1/2)*I3*tetap1^2 + (1/2)*M3*up1^2 +...
    (1/2)*Ib2*tetap2^2 + (1/2)*Mb2*up2^2 + (1/2)*Mb2*vpL^2 + (1/2)*Mb2*wpL^2 +...
    (1/2)*I1*tetap3^2 + (1/2)*M1*up3^2 +...
    (1/2)*dm*(up2^2 + (vpL - l2*tetap2*sin(teta2 + alfa))^2 + (wpL + l2*tetap2*cos(teta2 + alfa))^2);

dTdteta2 = dm*((vpL - l2*tetap2*sin(teta2 + alfa))*(-l2*tetap2*cos(teta2 + alfa)) +...
               (wpL + l2*tetap2*cos(teta2 + alfa))*(-l2*tetap2*sin(teta2 + alfa)));

d2Tdtdup1 = M3*upp1;
%{
dTdup1 = M3*up1;
d2Tdtdup1Ref = diff(dTdup1,t);
erro = simplify(d2Tdtdup1Ref - d2Tdtdup1);
%}
d2Tdtdup2 = (Mb2 + dm)*upp2;
%{
dTdup2 = (Mb2 + dm)*up2;
d2Tdtdup2Ref = diff(dTdup2,t);
erro = simplify(d2Tdtdup2Ref - d2Tdtdup2);
%}
d2Tdtdup3 = M1*upp3;
%{
dTdup3 = M1*up3;
d2Tdtdup3Ref = diff(dTdup3,t);
erro = simplify(d2Tdtdup3Ref - d2Tdtdup3);
%}
d2Tdtdtetap1 = I3*tetapp1;
%{
dTdtetap1 = I3*tetap1;
d2Tdtdtetap1Ref = diff(dTdtetap1,t);
erro = simplify(d2Tdtdtetap1Ref - d2Tdtdtetap1);
%}
%{
d2Tdtdtetap2 = Ib2*tetapp2 +...
    dm*((vppL - l2*(tetapp2*sin(teta2 + alfa) + tetap2^2*cos(teta2 + alfa)))*(-l2*sin(teta2 + alfa)) +...
        (vpL - l2*tetap2*sin(teta2 + alfa))*(-l2*tetap2*cos(teta2 + alfa)) +...
        (wppL + l2*(tetapp2*cos(teta2 + alfa) - tetap2^2*sin(teta2 + alfa)))*(l2*cos(teta2 + alfa)) +...
        (wpL + l2*tetap2*cos(teta2 + alfa))*(-l2*tetap2*sin(teta2 + alfa)));
%}
d2Tdtdtetap2 = Ib2*tetapp2 +...
    dm*((vppL)*(-l2*sin(teta2 + alfa)) + l2^2*tetapp2 +...
        (vpL)*(-l2*tetap2*cos(teta2 + alfa)) +...
        (wppL)*(l2*cos(teta2 + alfa)) +...
        (wpL)*(-l2*tetap2*sin(teta2 + alfa)));
%{
dTdtetap2 = Ib2*tetap2 +...
    dm*((vpL - l2*tetap2*sin(teta2 + alfa))*(-l2*sin(teta2 + alfa)) +...
        (wpL + l2*tetap2*cos(teta2 + alfa))*(l2*cos(teta2 + alfa)));
d2Tdtdtetap2Ref = diff(dTdtetap2,t);
erro = simplify(d2Tdtdtetap2Ref - d2Tdtdtetap2);
%}
d2Tdtdtetap3 = I1*tetapp3;
%{
dTdtetap3 = I1*tetap3;
d2Tdtdtetap3Ref = diff(dTdtetap3,t);
erro = simplify(d2Tdtdtetap3Ref - d2Tdtdtetap3);
%}
d2TdtdvpL = (Mb2 + dm)*vppL - dm*l2*(tetapp2*sin(teta2 + alfa) + tetap2^2*cos(teta2 + alfa));
%{
dTdvpL = (Mb2 + dm)*vpL - dm*l2*tetap2*sin(teta2 + alfa);
d2TdtdvpLRef = diff(dTdvpL,t);
erro = simplify(d2TdtdvpLRef - d2TdtdvpL);
%}
d2TdtdwpL = (Mb2 + dm)*wppL + dm*l2*(tetapp2*cos(teta2 + alfa) - tetap2^2*sin(teta2 + alfa));
%{
dTdwpL = (Mb2 + dm)*wpL + dm*l2*tetap2*cos(teta2 + alfa);
d2TdtdwpLRef = diff(dTdwpL,t);
erro = simplify(d2TdtdwpLRef - d2TdtdwpL);
%}

%%
%Separação entre termos lineares e não lineares:

d2Tdtdtetap2ln = (Ib2 + dm*l2^2)*tetapp2;
d2Tdtdtetap2nln = dm*((vppL)*(-l2*sin(teta2 + alfa)) +...
        (vpL)*(-l2*tetap2*cos(teta2 + alfa)) +...
        (wppL)*(l2*cos(teta2 + alfa)) +...
        (wpL)*(-l2*tetap2*sin(teta2 + alfa)));
%{
erro = simplify(d2Tdtdtetap2 - (d2Tdtdtetap2ln + d2Tdtdtetap2nln));
%}

d2TdtdvpLln = (Mb2 + dm)*vppL;
d2TdtdvpLnln = -dm*l2*(tetapp2*sin(teta2 + alfa) + tetap2^2*cos(teta2 + alfa));
%{
erro = simplify(d2TdtdvpL - (d2TdtdvpLln + d2TdtdvpLnln));
%}

d2TdtdwpLln = (Mb2 + dm)*wppL;
d2TdtdwpLnln = dm*l2*(tetapp2*cos(teta2 + alfa) - tetap2^2*sin(teta2 + alfa));
%{
erro = simplify(d2TdtdwpL - (d2TdtdwpLln + d2TdtdwpLnln));
%}

%%
%Expressões matriciais referentes à energia cinética T:
%Obs.: uTil = [u1, teta1, u2, vL, wL, teta2, u3, teta3].'
uTilpp = [upp1, tetapp1, upp2, vppL, wppL, tetapp2, upp3, tetapp3].';

M1ac = [M3,  0,        0,                0,               0,                0,  0,  0; 
         0, I3,        0,                0,               0,                0,  0,  0;
         0,  0, Mb2 + dm,                0,               0,                0,  0,  0;
         0,  0,        0,         Mb2 + dm,               0, -dm*l2*sin(alfa),  0,  0;
         0,  0,        0,                0,        Mb2 + dm,  dm*l2*cos(alfa),  0,  0;
         0,  0,        0, -dm*l2*sin(alfa), dm*l2*cos(alfa),    Ib2 + dm*l2^2,  0,  0;
         0,  0,        0,                0,               0,                0, M1,  0;
         0,  0,        0,                0,               0,                0,  0, I1];

M2ac = [0, 0, 0,                                          0,                                         0,                                          0, 0, 0; 
        0, 0, 0,                                          0,                                         0,                                          0, 0, 0;
        0, 0, 0,                                          0,                                         0,                                          0, 0, 0;
        0, 0, 0,                                          0,                                         0, -dm*l2*sin(teta2 + alfa) + dm*l2*sin(alfa), 0, 0;
        0, 0, 0,                                          0,                                         0,  dm*l2*cos(teta2 + alfa) - dm*l2*cos(alfa), 0, 0;
        0, 0, 0, -dm*l2*sin(teta2 + alfa) + dm*l2*sin(alfa), dm*l2*cos(teta2 + alfa) - dm*l2*cos(alfa),                                          0, 0, 0;
        0, 0, 0,                                          0,                                         0,                                          0, 0, 0;
        0, 0, 0,                                          0,                                         0,                                          0, 0, 0];

%{
erro = simplify(subs(M2ac,teta2,0));
%}

fM2ac = @(uTil)(...
    [0, 0, 0,                                                 0,                                                0,                                                 0, 0, 0; 
     0, 0, 0,                                                 0,                                                0,                                                 0, 0, 0;
     0, 0, 0,                                                 0,                                                0,                                                 0, 0, 0;
     0, 0, 0,                                                 0,                                                0, -dm*l2*sin(fteta2(uTil) + alfa) + dm*l2*sin(alfa), 0, 0;
     0, 0, 0,                                                 0,                                                0,  dm*l2*cos(fteta2(uTil) + alfa) - dm*l2*cos(alfa), 0, 0;
     0, 0, 0, -dm*l2*sin(fteta2(uTil) + alfa) + dm*l2*sin(alfa), dm*l2*cos(fteta2(uTil) + alfa) - dm*l2*cos(alfa),                                                 0, 0, 0;
     0, 0, 0,                                                 0,                                                0,                                                 0, 0, 0;
     0, 0, 0,                                                 0,                                                0,                                                 0, 0, 0]);
        
G1ac = [0; 
        0; 
        0; 
        -dm*l2*tetap2^2*cos(teta2 + alfa); 
        -dm*l2*tetap2^2*sin(teta2 + alfa); 
        -dm*l2*tetap2*(vpL*cos(teta2 + alfa) + wpL*sin(teta2 + alfa)); 
        0; 
        0];

%{
d2TdtdupTil = [d2Tdtdup1; d2Tdtdtetap1; d2Tdtdup2; d2TdtdvpL; d2TdtdwpL; d2Tdtdtetap2; d2Tdtdup3; d2Tdtdtetap3];
erro = simplify(d2TdtdupTil - (M1ac*uTilpp + M2ac*uTilpp + G1ac));
%}
    
Mac = [M3,  0,        0,                        0,                       0,                        0,  0,  0; 
        0, I3,        0,                        0,                       0,                        0,  0,  0;
        0,  0, Mb2 + dm,                        0,                       0,                        0,  0,  0;
        0,  0,        0,                 Mb2 + dm,                       0, -dm*l2*sin(teta2 + alfa),  0,  0;
        0,  0,        0,                        0,                Mb2 + dm,  dm*l2*cos(teta2 + alfa),  0,  0;
        0,  0,        0, -dm*l2*sin(teta2 + alfa), dm*l2*cos(teta2 + alfa),            Ib2 + dm*l2^2,  0,  0;
        0,  0,        0,                        0,                       0,                        0, M1,  0;
        0,  0,        0,                        0,                       0,                        0,  0, I1];

%{
erro = simplify(M1ac + M2ac - Mac);
%}

fMac = @(uTil)(...
    [M3,  0,        0,                               0,                              0,                               0,  0,  0; 
      0, I3,        0,                               0,                              0,                               0,  0,  0;
      0,  0, Mb2 + dm,                               0,                              0,                               0,  0,  0;
      0,  0,        0,                        Mb2 + dm,                              0, -dm*l2*sin(fteta2(uTil) + alfa),  0,  0;
      0,  0,        0,                               0,                       Mb2 + dm,  dm*l2*cos(fteta2(uTil) + alfa),  0,  0;
      0,  0,        0, -dm*l2*sin(fteta2(uTil) + alfa), dm*l2*cos(fteta2(uTil) + alfa),                   Ib2 + dm*l2^2,  0,  0;
      0,  0,        0,                               0,                              0,                               0, M1,  0;
      0,  0,        0,                               0,                              0,                               0,  0, I1]);

G2ac = [0;
        0;
        0;
        0;
        0;
        dm*l2*tetap2*(vpL*cos(teta2 + alfa) + wpL*sin(teta2 + alfa)); 
        0; 
        0];
%{
G2acAst = dm*l2*tetap2*(vpL*cos(teta2 + alfa) + wpL*sin(teta2 + alfa));
erro = simplify((-dTdteta2) - G2acAst);
%}

Gac = [0; 
       0; 
       0; 
       -dm*l2*tetap2^2*cos(teta2 + alfa); 
       -dm*l2*tetap2^2*sin(teta2 + alfa); 
       0; 
       0; 
       0];

%{
d2TdtdupTil = [d2Tdtdup1; d2Tdtdtetap1; d2Tdtdup2; d2TdtdvpL; d2TdtdwpL; d2Tdtdtetap2; d2Tdtdup3; d2Tdtdtetap3];
dTduTil = [0; 0; 0; 0; 0; dTdteta2; 0; 0];
erro = simplify((d2TdtdupTil - dTduTil) - (M1ac*uTilpp + M2ac*uTilpp + Gac));
%}

fGac = @(uTil,upTil)(...
    [0; 
     0; 
     0; 
     -dm*l2*fteta2(upTil)^2*cos(fteta2(uTil) + alfa); 
     -dm*l2*fteta2(upTil)^2*sin(fteta2(uTil) + alfa); 
     0; 
     0; 
     0]);

%%
Fu = [k1*( (vL^2 + wL^2)/(L1 - u1 + u2)^2 )*( u2 - u1 + (vL^2 + wL^2)/(L1 - u1 + u2) ) - k1*(vL^2 + wL^2)/(L1 - u1 + u2); 
      0; 
      k2*( (vL^2 + wL^2)/(L - L1 - u2 + u3)^2 )*( u3 - u2 ) + k2*( (vL^2 + wL^2)/(L - L1 - u2 + u3)^2 - 1 )*( (vL^2 + wL^2)/(L - L1 - u2 + u3) ) + k1*( -(vL^2 + wL^2)/(L1 - u1 + u2)^2 )*( u2 - u1 ) + k1*( 1 - (vL^2 + wL^2)/(L1 - u1 + u2)^2 )*( (vL^2 + wL^2)/(L1 - u1 + u2) );
      2*k2*vL*( u3 - u2 + (vL^2 + wL^2)/(L - L1 - u2 + u3) )/( L - L1 - u2 + u3 ) + 2*k1*vL*( u2 - u1 + (vL^2 + wL^2)/(L1 - u1 + u2) )/( L1 - u1 + u2 );
      2*k2*wL*( u3 - u2 + (vL^2 + wL^2)/(L - L1 - u2 + u3) )/( L - L1 - u2 + u3 ) + 2*k1*wL*( u2 - u1 + (vL^2 + wL^2)/(L1 - u1 + u2) )/( L1 - u1 + u2 ); 
      0; 
      k2*( -(vL^2 + wL^2)/(L - L1 - u2 + u3)^2 )*( u3 - u2 ) + k2*( 1 - (vL^2 + wL^2)/(L - L1 - u2 + u3)^2 )*( (vL^2 + wL^2)/(L - L1 - u2 + u3) ); 
      0];
dFuzdZT = ...
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
     (L1*k1*(vL^2 + wL^2))/(M3*(L1 - u1 + u2)^3) + (3*k1*(vL^2 + wL^2)*(L1*u1 - L1*u2 - L1^2 + vL^2 + wL^2))/(M3*(L1 - u1 + u2)^4), 0, -(L1*k1*(vL^2 + wL^2))/(M3*(L1 - u1 + u2)^3) - (3*k1*(vL^2 + wL^2)*(L1*u1 - L1*u2 - L1^2 + vL^2 + wL^2))/(M3*(L1 - u1 + u2)^4), (2*k1*vL*(vL^2 + wL^2))/(M3*(L1 - u1 + u2)^3) + (2*k1*vL*(L1*u1 - L1*u2 - L1^2 + vL^2 + wL^2))/(M3*(L1 - u1 + u2)^3), (2*k1*wL*(vL^2 + wL^2))/(M3*(L1 - u1 + u2)^3) + (2*k1*wL*(L1*u1 - L1*u2 - L1^2 + vL^2 + wL^2))/(M3*(L1 - u1 + u2)^3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
     (3*(vL^2 + wL^2)*(L^3*L1^2*k1 - L1^5*k2 - 3*L^2*L1^3*k1 - L1^5*k1 - L^2*L1^3*k2 + L^2*k2*u1^3 - L^2*k2*u2^3 - 4*L1^2*k1*u2^3 + L1^2*k2*u1^3 - 6*L1^3*k1*u2^2 - 3*L1^3*k2*u1^2 + L1^2*k1*u3^3 - 4*L1^2*k2*u2^3 - 3*L1^3*k1*u3^2 - 6*L1^3*k2*u2^2 - L^3*k1*vL^2 + L1^3*k1*vL^2 + L1^3*k2*vL^2 - L^3*k1*wL^2 + L1^3*k1*wL^2 + L1^3*k2*wL^2 + k1*u2^3*vL^2 - k2*u1^3*vL^2 - k1*u3^3*vL^2 + k2*u2^3*vL^2 + k1*u2^3*wL^2 - k2*u1^3*wL^2 - k1*u3^3*wL^2 + k2*u2^3*wL^2 + 3*L*L1^4*k1 + 2*L*L1^4*k2 + L1^4*k1*u1 + L*k2*u2^4 - L1*k1*u2^4 - 4*L1^4*k1*u2 + 3*L1^4*k2*u1 - L1*k2*u2^4 + 3*L1^4*k1*u3 - 4*L1^4*k2*u2 + L1^4*k2*u3 - 3*L*L1^3*k1*u1 - L^3*L1*k1*u1 + 3*L*L1*k1*u2^3 - 2*L*L1*k2*u1^3 + 9*L*L1^3*k1*u2 - 6*L*L1^3*k2*u1 + L^3*L1*k1*u2 + 5*L*L1*k2*u2^3 - 6*L*L1^3*k1*u3 + 7*L*L1^3*k2*u2 - L*L1^3*k2*u3 - 3*L*k2*u1*u2^3 - L*k2*u1^3*u2 + L1*k1*u1*u2^3 + 3*L1^3*k1*u1*u2 + L*k2*u1^3*u3 - L1*k1*u1*u3^3 + 3*L1*k2*u1*u2^3 + L1*k2*u1^3*u2 - 3*L1^3*k1*u1*u3 + 9*L1^3*k2*u1*u2 - L*k2*u2^3*u3 + L1*k1*u2*u3^3 + 3*L1*k1*u2^3*u3 - L1*k2*u1^3*u3 + 9*L1^3*k1*u2*u3 - 3*L1^3*k2*u1*u3 + L1*k2*u2^3*u3 + 3*L1^3*k2*u2*u3 + 3*L^2*L1^2*k1*u1 + 9*L*L1^2*k1*u2^2 + 6*L*L1^2*k2*u1^2 - 3*L^2*L1*k1*u2^2 - 3*L^2*L1*k2*u1^2 - 6*L^2*L1^2*k1*u2 + 3*L^2*L1^2*k2*u1 + 3*L*L1^2*k1*u3^2 + 9*L*L1^2*k2*u2^2 - 3*L^2*L1*k2*u2^2 + 3*L^2*L1^2*k1*u3 - 3*L^2*L1^2*k2*u2 - 3*L*L1^2*k1*vL^2 + 3*L^2*L1*k1*vL^2 - 3*L*L1^2*k1*wL^2 + 3*L^2*L1*k1*wL^2 + 3*L*k2*u1^2*u2^2 + 3*L^2*k2*u1*u2^2 - 3*L^2*k2*u1^2*u2 + 3*L1^2*k1*u1*u2^2 - 3*L1*k2*u1^2*u2^2 + 3*L1^2*k1*u1*u3^2 + 9*L1^2*k2*u1*u2^2 - 6*L1^2*k2*u1^2*u2 - 3*L1*k1*u2^2*u3^2 - 6*L1^2*k1*u2*u3^2 + 9*L1^2*k1*u2^2*u3 + 3*L1^2*k2*u1^2*u3 + 3*L1^2*k2*u2^2*u3 - 3*L*k1*u2^2*vL^2 + 3*L^2*k1*u2*vL^2 - 3*L*k1*u3^2*vL^2 + 3*L1*k1*u2^2*vL^2 + 3*L1*k2*u1^2*vL^2 - 3*L^2*k1*u3*vL^2 + 3*L1^2*k1*u2*vL^2 - 3*L1^2*k2*u1*vL^2 + 3*L1*k1*u3^2*vL^2 + 3*L1*k2*u2^2*vL^2 - 3*L1^2*k1*u3*vL^2 + 3*L1^2*k2*u2*vL^2 - 3*L*k1*u2^2*wL^2 + 3*L^2*k1*u2*wL^2 - 3*L*k1*u3^2*wL^2 + 3*L1*k1*u2^2*wL^2 + 3*L1*k2*u1^2*wL^2 - 3*L^2*k1*u3*wL^2 + 3*L1^2*k1*u2*wL^2 - 3*L1^2*k2*u1*wL^2 + 3*L1*k1*u3^2*wL^2 + 3*L1*k2*u2^2*wL^2 - 3*L1^2*k1*u3*wL^2 + 3*L1^2*k2*u2*wL^2 - 3*k2*u1*u2^2*vL^2 + 3*k2*u1^2*u2*vL^2 + 3*k1*u2*u3^2*vL^2 - 3*k1*u2^2*u3*vL^2 - 3*k2*u1*u2^2*wL^2 + 3*k2*u1^2*u2*wL^2 + 3*k1*u2*u3^2*wL^2 - 3*k1*u2^2*u3*wL^2 - 3*L*L1*k1*u1*u2^2 - 6*L*L1^2*k1*u1*u2 + 3*L^2*L1*k1*u1*u2 - 3*L*L1*k1*u1*u3^2 - 12*L*L1*k2*u1*u2^2 + 9*L*L1*k2*u1^2*u2 + 6*L*L1^2*k1*u1*u3 - 15*L*L1^2*k2*u1*u2 - 3*L^2*L1*k1*u1*u3 + 6*L^2*L1*k2*u1*u2 + 3*L*L1*k1*u2*u3^2 - 6*L*L1*k1*u2^2*u3 - 3*L*L1*k2*u1^2*u3 - 12*L*L1^2*k1*u2*u3 + 3*L*L1^2*k2*u1*u3 + 3*L^2*L1*k1*u2*u3 - 3*L*L1*k2*u2^2*u3 - 3*L*L1^2*k2*u2*u3 - 6*L*L1*k1*u2*vL^2 + 6*L*L1*k1*u3*vL^2 - 6*L*L1*k1*u2*wL^2 + 6*L*L1*k1*u3*wL^2 + 3*L*k2*u1*u2^2*u3 - 3*L*k2*u1^2*u2*u3 + 3*L1*k1*u1*u2*u3^2 - 3*L1*k1*u1*u2^2*u3 - 6*L1^2*k1*u1*u2*u3 - 3*L1*k2*u1*u2^2*u3 + 3*L1*k2*u1^2*u2*u3 - 6*L1^2*k2*u1*u2*u3 + 6*L*k1*u2*u3*vL^2 - 6*L1*k2*u1*u2*vL^2 - 6*L1*k1*u2*u3*vL^2 + 6*L*k1*u2*u3*wL^2 - 6*L1*k2*u1*u2*wL^2 - 6*L1*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2*u3 + 6*L*L1*k2*u1*u2*u3))/((Mb2 + dm)*(L1 - u1 + u2)^4*(L - L1 - u2 + u3)^3) - ((vL^2 + wL^2)*(3*L1^2*k2*vL^2 - 3*L1^4*k2 - 3*L^2*L1^2*k1 - 3*L^2*L1^2*k2 - 3*L^2*k2*u1^2 - 3*L^2*k2*u2^2 - 3*L1^2*k1*u2^2 - 3*L1^2*k2*u1^2 - 3*L1^2*k1*u3^2 - 9*L1^2*k2*u2^2 - L1^4*k1 + 3*L1^2*k2*wL^2 + 3*k2*u1^2*vL^2 + 3*k2*u2^2*vL^2 + 3*k2*u1^2*wL^2 + 3*k2*u2^2*wL^2 + 3*L*L1^3*k1 + L^3*L1*k1 + 6*L*L1^3*k2 + 3*L*k2*u2^3 - L1*k1*u2^3 - 3*L1^3*k1*u2 + 6*L1^3*k2*u1 + L1*k1*u3^3 - 3*L1*k2*u2^3 + 3*L1^3*k1*u3 - 9*L1^3*k2*u2 + 3*L1^3*k2*u3 + 3*L*L1*k1*u2^2 + 6*L*L1*k2*u1^2 + 6*L*L1^2*k1*u2 - 12*L*L1^2*k2*u1 - 3*L^2*L1*k1*u2 + 6*L^2*L1*k2*u1 + 3*L*L1*k1*u3^2 + 12*L*L1*k2*u2^2 - 6*L*L1^2*k1*u3 + 15*L*L1^2*k2*u2 + 3*L^2*L1*k1*u3 - 6*L^2*L1*k2*u2 - 3*L*L1^2*k2*u3 - 6*L*k2*u1*u2^2 + 3*L*k2*u1^2*u2 + 6*L^2*k2*u1*u2 - 3*L*k2*u1^2*u3 + 6*L1*k2*u1*u2^2 - 3*L1*k2*u1^2*u2 + 12*L1^2*k2*u1*u2 - 3*L*k2*u2^2*u3 - 3*L1*k1*u2*u3^2 + 3*L1*k1*u2^2*u3 + 3*L1*k2*u1^2*u3 + 6*L1^2*k1*u2*u3 - 6*L1^2*k2*u1*u3 + 3*L1*k2*u2^2*u3 + 6*L1^2*k2*u2*u3 - 6*L1*k2*u1*vL^2 + 6*L1*k2*u2*vL^2 - 6*L1*k2*u1*wL^2 + 6*L1*k2*u2*wL^2 - 6*k2*u1*u2*vL^2 - 6*k2*u1*u2*wL^2 - 18*L*L1*k2*u1*u2 - 6*L*L1*k1*u2*u3 + 6*L*L1*k2*u1*u3 - 6*L*L1*k2*u2*u3 + 6*L*k2*u1*u2*u3 - 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^3), 0, (3*(vL^2 + wL^2)*(L^3*L1^2*k1 - L1^5*k2 - 3*L^2*L1^3*k1 - L1^5*k1 - L^2*L1^3*k2 + L^2*k2*u1^3 - L^2*k2*u2^3 - 4*L1^2*k1*u2^3 + L1^2*k2*u1^3 - 6*L1^3*k1*u2^2 - 3*L1^3*k2*u1^2 + L1^2*k1*u3^3 - 4*L1^2*k2*u2^3 - 3*L1^3*k1*u3^2 - 6*L1^3*k2*u2^2 - L^3*k1*vL^2 + L1^3*k1*vL^2 + L1^3*k2*vL^2 - L^3*k1*wL^2 + L1^3*k1*wL^2 + L1^3*k2*wL^2 + k1*u2^3*vL^2 - k2*u1^3*vL^2 - k1*u3^3*vL^2 + k2*u2^3*vL^2 + k1*u2^3*wL^2 - k2*u1^3*wL^2 - k1*u3^3*wL^2 + k2*u2^3*wL^2 + 3*L*L1^4*k1 + 2*L*L1^4*k2 + L1^4*k1*u1 + L*k2*u2^4 - L1*k1*u2^4 - 4*L1^4*k1*u2 + 3*L1^4*k2*u1 - L1*k2*u2^4 + 3*L1^4*k1*u3 - 4*L1^4*k2*u2 + L1^4*k2*u3 - 3*L*L1^3*k1*u1 - L^3*L1*k1*u1 + 3*L*L1*k1*u2^3 - 2*L*L1*k2*u1^3 + 9*L*L1^3*k1*u2 - 6*L*L1^3*k2*u1 + L^3*L1*k1*u2 + 5*L*L1*k2*u2^3 - 6*L*L1^3*k1*u3 + 7*L*L1^3*k2*u2 - L*L1^3*k2*u3 - 3*L*k2*u1*u2^3 - L*k2*u1^3*u2 + L1*k1*u1*u2^3 + 3*L1^3*k1*u1*u2 + L*k2*u1^3*u3 - L1*k1*u1*u3^3 + 3*L1*k2*u1*u2^3 + L1*k2*u1^3*u2 - 3*L1^3*k1*u1*u3 + 9*L1^3*k2*u1*u2 - L*k2*u2^3*u3 + L1*k1*u2*u3^3 + 3*L1*k1*u2^3*u3 - L1*k2*u1^3*u3 + 9*L1^3*k1*u2*u3 - 3*L1^3*k2*u1*u3 + L1*k2*u2^3*u3 + 3*L1^3*k2*u2*u3 + 3*L^2*L1^2*k1*u1 + 9*L*L1^2*k1*u2^2 + 6*L*L1^2*k2*u1^2 - 3*L^2*L1*k1*u2^2 - 3*L^2*L1*k2*u1^2 - 6*L^2*L1^2*k1*u2 + 3*L^2*L1^2*k2*u1 + 3*L*L1^2*k1*u3^2 + 9*L*L1^2*k2*u2^2 - 3*L^2*L1*k2*u2^2 + 3*L^2*L1^2*k1*u3 - 3*L^2*L1^2*k2*u2 - 3*L*L1^2*k1*vL^2 + 3*L^2*L1*k1*vL^2 - 3*L*L1^2*k1*wL^2 + 3*L^2*L1*k1*wL^2 + 3*L*k2*u1^2*u2^2 + 3*L^2*k2*u1*u2^2 - 3*L^2*k2*u1^2*u2 + 3*L1^2*k1*u1*u2^2 - 3*L1*k2*u1^2*u2^2 + 3*L1^2*k1*u1*u3^2 + 9*L1^2*k2*u1*u2^2 - 6*L1^2*k2*u1^2*u2 - 3*L1*k1*u2^2*u3^2 - 6*L1^2*k1*u2*u3^2 + 9*L1^2*k1*u2^2*u3 + 3*L1^2*k2*u1^2*u3 + 3*L1^2*k2*u2^2*u3 - 3*L*k1*u2^2*vL^2 + 3*L^2*k1*u2*vL^2 - 3*L*k1*u3^2*vL^2 + 3*L1*k1*u2^2*vL^2 + 3*L1*k2*u1^2*vL^2 - 3*L^2*k1*u3*vL^2 + 3*L1^2*k1*u2*vL^2 - 3*L1^2*k2*u1*vL^2 + 3*L1*k1*u3^2*vL^2 + 3*L1*k2*u2^2*vL^2 - 3*L1^2*k1*u3*vL^2 + 3*L1^2*k2*u2*vL^2 - 3*L*k1*u2^2*wL^2 + 3*L^2*k1*u2*wL^2 - 3*L*k1*u3^2*wL^2 + 3*L1*k1*u2^2*wL^2 + 3*L1*k2*u1^2*wL^2 - 3*L^2*k1*u3*wL^2 + 3*L1^2*k1*u2*wL^2 - 3*L1^2*k2*u1*wL^2 + 3*L1*k1*u3^2*wL^2 + 3*L1*k2*u2^2*wL^2 - 3*L1^2*k1*u3*wL^2 + 3*L1^2*k2*u2*wL^2 - 3*k2*u1*u2^2*vL^2 + 3*k2*u1^2*u2*vL^2 + 3*k1*u2*u3^2*vL^2 - 3*k1*u2^2*u3*vL^2 - 3*k2*u1*u2^2*wL^2 + 3*k2*u1^2*u2*wL^2 + 3*k1*u2*u3^2*wL^2 - 3*k1*u2^2*u3*wL^2 - 3*L*L1*k1*u1*u2^2 - 6*L*L1^2*k1*u1*u2 + 3*L^2*L1*k1*u1*u2 - 3*L*L1*k1*u1*u3^2 - 12*L*L1*k2*u1*u2^2 + 9*L*L1*k2*u1^2*u2 + 6*L*L1^2*k1*u1*u3 - 15*L*L1^2*k2*u1*u2 - 3*L^2*L1*k1*u1*u3 + 6*L^2*L1*k2*u1*u2 + 3*L*L1*k1*u2*u3^2 - 6*L*L1*k1*u2^2*u3 - 3*L*L1*k2*u1^2*u3 - 12*L*L1^2*k1*u2*u3 + 3*L*L1^2*k2*u1*u3 + 3*L^2*L1*k1*u2*u3 - 3*L*L1*k2*u2^2*u3 - 3*L*L1^2*k2*u2*u3 - 6*L*L1*k1*u2*vL^2 + 6*L*L1*k1*u3*vL^2 - 6*L*L1*k1*u2*wL^2 + 6*L*L1*k1*u3*wL^2 + 3*L*k2*u1*u2^2*u3 - 3*L*k2*u1^2*u2*u3 + 3*L1*k1*u1*u2*u3^2 - 3*L1*k1*u1*u2^2*u3 - 6*L1^2*k1*u1*u2*u3 - 3*L1*k2*u1*u2^2*u3 + 3*L1*k2*u1^2*u2*u3 - 6*L1^2*k2*u1*u2*u3 + 6*L*k1*u2*u3*vL^2 - 6*L1*k2*u1*u2*vL^2 - 6*L1*k1*u2*u3*vL^2 + 6*L*k1*u2*u3*wL^2 - 6*L1*k2*u1*u2*wL^2 - 6*L1*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2*u3 + 6*L*L1*k2*u1*u2*u3))/((Mb2 + dm)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^4) - (3*(vL^2 + wL^2)*(L^3*L1^2*k1 - L1^5*k2 - 3*L^2*L1^3*k1 - L1^5*k1 - L^2*L1^3*k2 + L^2*k2*u1^3 - L^2*k2*u2^3 - 4*L1^2*k1*u2^3 + L1^2*k2*u1^3 - 6*L1^3*k1*u2^2 - 3*L1^3*k2*u1^2 + L1^2*k1*u3^3 - 4*L1^2*k2*u2^3 - 3*L1^3*k1*u3^2 - 6*L1^3*k2*u2^2 - L^3*k1*vL^2 + L1^3*k1*vL^2 + L1^3*k2*vL^2 - L^3*k1*wL^2 + L1^3*k1*wL^2 + L1^3*k2*wL^2 + k1*u2^3*vL^2 - k2*u1^3*vL^2 - k1*u3^3*vL^2 + k2*u2^3*vL^2 + k1*u2^3*wL^2 - k2*u1^3*wL^2 - k1*u3^3*wL^2 + k2*u2^3*wL^2 + 3*L*L1^4*k1 + 2*L*L1^4*k2 + L1^4*k1*u1 + L*k2*u2^4 - L1*k1*u2^4 - 4*L1^4*k1*u2 + 3*L1^4*k2*u1 - L1*k2*u2^4 + 3*L1^4*k1*u3 - 4*L1^4*k2*u2 + L1^4*k2*u3 - 3*L*L1^3*k1*u1 - L^3*L1*k1*u1 + 3*L*L1*k1*u2^3 - 2*L*L1*k2*u1^3 + 9*L*L1^3*k1*u2 - 6*L*L1^3*k2*u1 + L^3*L1*k1*u2 + 5*L*L1*k2*u2^3 - 6*L*L1^3*k1*u3 + 7*L*L1^3*k2*u2 - L*L1^3*k2*u3 - 3*L*k2*u1*u2^3 - L*k2*u1^3*u2 + L1*k1*u1*u2^3 + 3*L1^3*k1*u1*u2 + L*k2*u1^3*u3 - L1*k1*u1*u3^3 + 3*L1*k2*u1*u2^3 + L1*k2*u1^3*u2 - 3*L1^3*k1*u1*u3 + 9*L1^3*k2*u1*u2 - L*k2*u2^3*u3 + L1*k1*u2*u3^3 + 3*L1*k1*u2^3*u3 - L1*k2*u1^3*u3 + 9*L1^3*k1*u2*u3 - 3*L1^3*k2*u1*u3 + L1*k2*u2^3*u3 + 3*L1^3*k2*u2*u3 + 3*L^2*L1^2*k1*u1 + 9*L*L1^2*k1*u2^2 + 6*L*L1^2*k2*u1^2 - 3*L^2*L1*k1*u2^2 - 3*L^2*L1*k2*u1^2 - 6*L^2*L1^2*k1*u2 + 3*L^2*L1^2*k2*u1 + 3*L*L1^2*k1*u3^2 + 9*L*L1^2*k2*u2^2 - 3*L^2*L1*k2*u2^2 + 3*L^2*L1^2*k1*u3 - 3*L^2*L1^2*k2*u2 - 3*L*L1^2*k1*vL^2 + 3*L^2*L1*k1*vL^2 - 3*L*L1^2*k1*wL^2 + 3*L^2*L1*k1*wL^2 + 3*L*k2*u1^2*u2^2 + 3*L^2*k2*u1*u2^2 - 3*L^2*k2*u1^2*u2 + 3*L1^2*k1*u1*u2^2 - 3*L1*k2*u1^2*u2^2 + 3*L1^2*k1*u1*u3^2 + 9*L1^2*k2*u1*u2^2 - 6*L1^2*k2*u1^2*u2 - 3*L1*k1*u2^2*u3^2 - 6*L1^2*k1*u2*u3^2 + 9*L1^2*k1*u2^2*u3 + 3*L1^2*k2*u1^2*u3 + 3*L1^2*k2*u2^2*u3 - 3*L*k1*u2^2*vL^2 + 3*L^2*k1*u2*vL^2 - 3*L*k1*u3^2*vL^2 + 3*L1*k1*u2^2*vL^2 + 3*L1*k2*u1^2*vL^2 - 3*L^2*k1*u3*vL^2 + 3*L1^2*k1*u2*vL^2 - 3*L1^2*k2*u1*vL^2 + 3*L1*k1*u3^2*vL^2 + 3*L1*k2*u2^2*vL^2 - 3*L1^2*k1*u3*vL^2 + 3*L1^2*k2*u2*vL^2 - 3*L*k1*u2^2*wL^2 + 3*L^2*k1*u2*wL^2 - 3*L*k1*u3^2*wL^2 + 3*L1*k1*u2^2*wL^2 + 3*L1*k2*u1^2*wL^2 - 3*L^2*k1*u3*wL^2 + 3*L1^2*k1*u2*wL^2 - 3*L1^2*k2*u1*wL^2 + 3*L1*k1*u3^2*wL^2 + 3*L1*k2*u2^2*wL^2 - 3*L1^2*k1*u3*wL^2 + 3*L1^2*k2*u2*wL^2 - 3*k2*u1*u2^2*vL^2 + 3*k2*u1^2*u2*vL^2 + 3*k1*u2*u3^2*vL^2 - 3*k1*u2^2*u3*vL^2 - 3*k2*u1*u2^2*wL^2 + 3*k2*u1^2*u2*wL^2 + 3*k1*u2*u3^2*wL^2 - 3*k1*u2^2*u3*wL^2 - 3*L*L1*k1*u1*u2^2 - 6*L*L1^2*k1*u1*u2 + 3*L^2*L1*k1*u1*u2 - 3*L*L1*k1*u1*u3^2 - 12*L*L1*k2*u1*u2^2 + 9*L*L1*k2*u1^2*u2 + 6*L*L1^2*k1*u1*u3 - 15*L*L1^2*k2*u1*u2 - 3*L^2*L1*k1*u1*u3 + 6*L^2*L1*k2*u1*u2 + 3*L*L1*k1*u2*u3^2 - 6*L*L1*k1*u2^2*u3 - 3*L*L1*k2*u1^2*u3 - 12*L*L1^2*k1*u2*u3 + 3*L*L1^2*k2*u1*u3 + 3*L^2*L1*k1*u2*u3 - 3*L*L1*k2*u2^2*u3 - 3*L*L1^2*k2*u2*u3 - 6*L*L1*k1*u2*vL^2 + 6*L*L1*k1*u3*vL^2 - 6*L*L1*k1*u2*wL^2 + 6*L*L1*k1*u3*wL^2 + 3*L*k2*u1*u2^2*u3 - 3*L*k2*u1^2*u2*u3 + 3*L1*k1*u1*u2*u3^2 - 3*L1*k1*u1*u2^2*u3 - 6*L1^2*k1*u1*u2*u3 - 3*L1*k2*u1*u2^2*u3 + 3*L1*k2*u1^2*u2*u3 - 6*L1^2*k2*u1*u2*u3 + 6*L*k1*u2*u3*vL^2 - 6*L1*k2*u1*u2*vL^2 - 6*L1*k1*u2*u3*vL^2 + 6*L*k1*u2*u3*wL^2 - 6*L1*k2*u1*u2*wL^2 - 6*L1*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2*u3 + 6*L*L1*k2*u1*u2*u3))/((Mb2 + dm)*(L1 - u1 + u2)^4*(L - L1 - u2 + u3)^3) + ((vL^2 + wL^2)*(3*L^2*k1*vL^2 - 4*L1^4*k2 - 6*L^2*L1^2*k1 - 3*L^2*L1^2*k2 - 3*L^2*k2*u1^2 - 3*L^2*k2*u2^2 - 12*L1^2*k1*u2^2 - 6*L1^2*k2*u1^2 - 6*L1^2*k1*u3^2 - 12*L1^2*k2*u2^2 - 4*L1^4*k1 + 3*L1^2*k1*vL^2 + 3*L1^2*k2*vL^2 + 3*L^2*k1*wL^2 + 3*L1^2*k1*wL^2 + 3*L1^2*k2*wL^2 + 3*k1*u2^2*vL^2 + 3*k2*u1^2*vL^2 + 3*k1*u3^2*vL^2 + 3*k2*u2^2*vL^2 + 3*k1*u2^2*wL^2 + 3*k2*u1^2*wL^2 + 3*k1*u3^2*wL^2 + 3*k2*u2^2*wL^2 + 9*L*L1^3*k1 + L^3*L1*k1 + 7*L*L1^3*k2 - L*k2*u1^3 + 3*L1^3*k1*u1 + 4*L*k2*u2^3 - 4*L1*k1*u2^3 + L1*k2*u1^3 - 12*L1^3*k1*u2 + 9*L1^3*k2*u1 + L1*k1*u3^3 - 4*L1*k2*u2^3 + 9*L1^3*k1*u3 - 12*L1^3*k2*u2 + 3*L1^3*k2*u3 - 6*L*L1^2*k1*u1 + 3*L^2*L1*k1*u1 + 9*L*L1*k1*u2^2 + 9*L*L1*k2*u1^2 + 18*L*L1^2*k1*u2 - 15*L*L1^2*k2*u1 - 6*L^2*L1*k1*u2 + 6*L^2*L1*k2*u1 + 3*L*L1*k1*u3^2 + 15*L*L1*k2*u2^2 - 12*L*L1^2*k1*u3 + 18*L*L1^2*k2*u2 + 3*L^2*L1*k1*u3 - 6*L^2*L1*k2*u2 - 3*L*L1^2*k2*u3 - 6*L*L1*k1*vL^2 - 6*L*L1*k1*wL^2 - 9*L*k2*u1*u2^2 + 6*L*k2*u1^2*u2 + 3*L1*k1*u1*u2^2 + 6*L^2*k2*u1*u2 + 6*L1^2*k1*u1*u2 - 3*L*k2*u1^2*u3 + 3*L1*k1*u1*u3^2 + 9*L1*k2*u1*u2^2 - 6*L1*k2*u1^2*u2 - 6*L1^2*k1*u1*u3 + 18*L1^2*k2*u1*u2 - 3*L*k2*u2^2*u3 - 6*L1*k1*u2*u3^2 + 9*L1*k1*u2^2*u3 + 3*L1*k2*u1^2*u3 + 18*L1^2*k1*u2*u3 - 6*L1^2*k2*u1*u3 + 3*L1*k2*u2^2*u3 + 6*L1^2*k2*u2*u3 - 6*L*k1*u2*vL^2 + 6*L*k1*u3*vL^2 + 6*L1*k1*u2*vL^2 - 6*L1*k2*u1*vL^2 - 6*L1*k1*u3*vL^2 + 6*L1*k2*u2*vL^2 - 6*L*k1*u2*wL^2 + 6*L*k1*u3*wL^2 + 6*L1*k1*u2*wL^2 - 6*L1*k2*u1*wL^2 - 6*L1*k1*u3*wL^2 + 6*L1*k2*u2*wL^2 - 6*k2*u1*u2*vL^2 - 6*k1*u2*u3*vL^2 - 6*k2*u1*u2*wL^2 - 6*k1*u2*u3*wL^2 - 6*L*L1*k1*u1*u2 + 6*L*L1*k1*u1*u3 - 24*L*L1*k2*u1*u2 - 12*L*L1*k1*u2*u3 + 6*L*L1*k2*u1*u3 - 6*L*L1*k2*u2*u3 + 6*L*k2*u1*u2*u3 - 6*L1*k1*u1*u2*u3 - 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^3), (2*vL*(L^3*L1^2*k1 - L1^5*k2 - 3*L^2*L1^3*k1 - L1^5*k1 - L^2*L1^3*k2 + L^2*k2*u1^3 - L^2*k2*u2^3 - 4*L1^2*k1*u2^3 + L1^2*k2*u1^3 - 6*L1^3*k1*u2^2 - 3*L1^3*k2*u1^2 + L1^2*k1*u3^3 - 4*L1^2*k2*u2^3 - 3*L1^3*k1*u3^2 - 6*L1^3*k2*u2^2 - L^3*k1*vL^2 + L1^3*k1*vL^2 + L1^3*k2*vL^2 - L^3*k1*wL^2 + L1^3*k1*wL^2 + L1^3*k2*wL^2 + k1*u2^3*vL^2 - k2*u1^3*vL^2 - k1*u3^3*vL^2 + k2*u2^3*vL^2 + k1*u2^3*wL^2 - k2*u1^3*wL^2 - k1*u3^3*wL^2 + k2*u2^3*wL^2 + 3*L*L1^4*k1 + 2*L*L1^4*k2 + L1^4*k1*u1 + L*k2*u2^4 - L1*k1*u2^4 - 4*L1^4*k1*u2 + 3*L1^4*k2*u1 - L1*k2*u2^4 + 3*L1^4*k1*u3 - 4*L1^4*k2*u2 + L1^4*k2*u3 - 3*L*L1^3*k1*u1 - L^3*L1*k1*u1 + 3*L*L1*k1*u2^3 - 2*L*L1*k2*u1^3 + 9*L*L1^3*k1*u2 - 6*L*L1^3*k2*u1 + L^3*L1*k1*u2 + 5*L*L1*k2*u2^3 - 6*L*L1^3*k1*u3 + 7*L*L1^3*k2*u2 - L*L1^3*k2*u3 - 3*L*k2*u1*u2^3 - L*k2*u1^3*u2 + L1*k1*u1*u2^3 + 3*L1^3*k1*u1*u2 + L*k2*u1^3*u3 - L1*k1*u1*u3^3 + 3*L1*k2*u1*u2^3 + L1*k2*u1^3*u2 - 3*L1^3*k1*u1*u3 + 9*L1^3*k2*u1*u2 - L*k2*u2^3*u3 + L1*k1*u2*u3^3 + 3*L1*k1*u2^3*u3 - L1*k2*u1^3*u3 + 9*L1^3*k1*u2*u3 - 3*L1^3*k2*u1*u3 + L1*k2*u2^3*u3 + 3*L1^3*k2*u2*u3 + 3*L^2*L1^2*k1*u1 + 9*L*L1^2*k1*u2^2 + 6*L*L1^2*k2*u1^2 - 3*L^2*L1*k1*u2^2 - 3*L^2*L1*k2*u1^2 - 6*L^2*L1^2*k1*u2 + 3*L^2*L1^2*k2*u1 + 3*L*L1^2*k1*u3^2 + 9*L*L1^2*k2*u2^2 - 3*L^2*L1*k2*u2^2 + 3*L^2*L1^2*k1*u3 - 3*L^2*L1^2*k2*u2 - 3*L*L1^2*k1*vL^2 + 3*L^2*L1*k1*vL^2 - 3*L*L1^2*k1*wL^2 + 3*L^2*L1*k1*wL^2 + 3*L*k2*u1^2*u2^2 + 3*L^2*k2*u1*u2^2 - 3*L^2*k2*u1^2*u2 + 3*L1^2*k1*u1*u2^2 - 3*L1*k2*u1^2*u2^2 + 3*L1^2*k1*u1*u3^2 + 9*L1^2*k2*u1*u2^2 - 6*L1^2*k2*u1^2*u2 - 3*L1*k1*u2^2*u3^2 - 6*L1^2*k1*u2*u3^2 + 9*L1^2*k1*u2^2*u3 + 3*L1^2*k2*u1^2*u3 + 3*L1^2*k2*u2^2*u3 - 3*L*k1*u2^2*vL^2 + 3*L^2*k1*u2*vL^2 - 3*L*k1*u3^2*vL^2 + 3*L1*k1*u2^2*vL^2 + 3*L1*k2*u1^2*vL^2 - 3*L^2*k1*u3*vL^2 + 3*L1^2*k1*u2*vL^2 - 3*L1^2*k2*u1*vL^2 + 3*L1*k1*u3^2*vL^2 + 3*L1*k2*u2^2*vL^2 - 3*L1^2*k1*u3*vL^2 + 3*L1^2*k2*u2*vL^2 - 3*L*k1*u2^2*wL^2 + 3*L^2*k1*u2*wL^2 - 3*L*k1*u3^2*wL^2 + 3*L1*k1*u2^2*wL^2 + 3*L1*k2*u1^2*wL^2 - 3*L^2*k1*u3*wL^2 + 3*L1^2*k1*u2*wL^2 - 3*L1^2*k2*u1*wL^2 + 3*L1*k1*u3^2*wL^2 + 3*L1*k2*u2^2*wL^2 - 3*L1^2*k1*u3*wL^2 + 3*L1^2*k2*u2*wL^2 - 3*k2*u1*u2^2*vL^2 + 3*k2*u1^2*u2*vL^2 + 3*k1*u2*u3^2*vL^2 - 3*k1*u2^2*u3*vL^2 - 3*k2*u1*u2^2*wL^2 + 3*k2*u1^2*u2*wL^2 + 3*k1*u2*u3^2*wL^2 - 3*k1*u2^2*u3*wL^2 - 3*L*L1*k1*u1*u2^2 - 6*L*L1^2*k1*u1*u2 + 3*L^2*L1*k1*u1*u2 - 3*L*L1*k1*u1*u3^2 - 12*L*L1*k2*u1*u2^2 + 9*L*L1*k2*u1^2*u2 + 6*L*L1^2*k1*u1*u3 - 15*L*L1^2*k2*u1*u2 - 3*L^2*L1*k1*u1*u3 + 6*L^2*L1*k2*u1*u2 + 3*L*L1*k1*u2*u3^2 - 6*L*L1*k1*u2^2*u3 - 3*L*L1*k2*u1^2*u3 - 12*L*L1^2*k1*u2*u3 + 3*L*L1^2*k2*u1*u3 + 3*L^2*L1*k1*u2*u3 - 3*L*L1*k2*u2^2*u3 - 3*L*L1^2*k2*u2*u3 - 6*L*L1*k1*u2*vL^2 + 6*L*L1*k1*u3*vL^2 - 6*L*L1*k1*u2*wL^2 + 6*L*L1*k1*u3*wL^2 + 3*L*k2*u1*u2^2*u3 - 3*L*k2*u1^2*u2*u3 + 3*L1*k1*u1*u2*u3^2 - 3*L1*k1*u1*u2^2*u3 - 6*L1^2*k1*u1*u2*u3 - 3*L1*k2*u1*u2^2*u3 + 3*L1*k2*u1^2*u2*u3 - 6*L1^2*k2*u1*u2*u3 + 6*L*k1*u2*u3*vL^2 - 6*L1*k2*u1*u2*vL^2 - 6*L1*k1*u2*u3*vL^2 + 6*L*k1*u2*u3*wL^2 - 6*L1*k2*u1*u2*wL^2 - 6*L1*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2*u3 + 6*L*L1*k2*u1*u2*u3))/((Mb2 + dm)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^3) + ((vL^2 + wL^2)*(2*k1*u2^3*vL - 2*k2*u1^3*vL - 2*k1*u3^3*vL + 2*k2*u2^3*vL - 2*L^3*k1*vL + 2*L1^3*k1*vL + 2*L1^3*k2*vL - 6*L*L1^2*k1*vL + 6*L^2*L1*k1*vL - 6*L*k1*u2^2*vL + 6*L^2*k1*u2*vL - 6*L*k1*u3^2*vL + 6*L1*k1*u2^2*vL + 6*L1*k2*u1^2*vL - 6*L^2*k1*u3*vL + 6*L1^2*k1*u2*vL - 6*L1^2*k2*u1*vL + 6*L1*k1*u3^2*vL + 6*L1*k2*u2^2*vL - 6*L1^2*k1*u3*vL + 6*L1^2*k2*u2*vL - 6*k2*u1*u2^2*vL + 6*k2*u1^2*u2*vL + 6*k1*u2*u3^2*vL - 6*k1*u2^2*u3*vL - 12*L*L1*k1*u2*vL + 12*L*L1*k1*u3*vL + 12*L*k1*u2*u3*vL - 12*L1*k2*u1*u2*vL - 12*L1*k1*u2*u3*vL))/((Mb2 + dm)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^3), (2*wL*(L^3*L1^2*k1 - L1^5*k2 - 3*L^2*L1^3*k1 - L1^5*k1 - L^2*L1^3*k2 + L^2*k2*u1^3 - L^2*k2*u2^3 - 4*L1^2*k1*u2^3 + L1^2*k2*u1^3 - 6*L1^3*k1*u2^2 - 3*L1^3*k2*u1^2 + L1^2*k1*u3^3 - 4*L1^2*k2*u2^3 - 3*L1^3*k1*u3^2 - 6*L1^3*k2*u2^2 - L^3*k1*vL^2 + L1^3*k1*vL^2 + L1^3*k2*vL^2 - L^3*k1*wL^2 + L1^3*k1*wL^2 + L1^3*k2*wL^2 + k1*u2^3*vL^2 - k2*u1^3*vL^2 - k1*u3^3*vL^2 + k2*u2^3*vL^2 + k1*u2^3*wL^2 - k2*u1^3*wL^2 - k1*u3^3*wL^2 + k2*u2^3*wL^2 + 3*L*L1^4*k1 + 2*L*L1^4*k2 + L1^4*k1*u1 + L*k2*u2^4 - L1*k1*u2^4 - 4*L1^4*k1*u2 + 3*L1^4*k2*u1 - L1*k2*u2^4 + 3*L1^4*k1*u3 - 4*L1^4*k2*u2 + L1^4*k2*u3 - 3*L*L1^3*k1*u1 - L^3*L1*k1*u1 + 3*L*L1*k1*u2^3 - 2*L*L1*k2*u1^3 + 9*L*L1^3*k1*u2 - 6*L*L1^3*k2*u1 + L^3*L1*k1*u2 + 5*L*L1*k2*u2^3 - 6*L*L1^3*k1*u3 + 7*L*L1^3*k2*u2 - L*L1^3*k2*u3 - 3*L*k2*u1*u2^3 - L*k2*u1^3*u2 + L1*k1*u1*u2^3 + 3*L1^3*k1*u1*u2 + L*k2*u1^3*u3 - L1*k1*u1*u3^3 + 3*L1*k2*u1*u2^3 + L1*k2*u1^3*u2 - 3*L1^3*k1*u1*u3 + 9*L1^3*k2*u1*u2 - L*k2*u2^3*u3 + L1*k1*u2*u3^3 + 3*L1*k1*u2^3*u3 - L1*k2*u1^3*u3 + 9*L1^3*k1*u2*u3 - 3*L1^3*k2*u1*u3 + L1*k2*u2^3*u3 + 3*L1^3*k2*u2*u3 + 3*L^2*L1^2*k1*u1 + 9*L*L1^2*k1*u2^2 + 6*L*L1^2*k2*u1^2 - 3*L^2*L1*k1*u2^2 - 3*L^2*L1*k2*u1^2 - 6*L^2*L1^2*k1*u2 + 3*L^2*L1^2*k2*u1 + 3*L*L1^2*k1*u3^2 + 9*L*L1^2*k2*u2^2 - 3*L^2*L1*k2*u2^2 + 3*L^2*L1^2*k1*u3 - 3*L^2*L1^2*k2*u2 - 3*L*L1^2*k1*vL^2 + 3*L^2*L1*k1*vL^2 - 3*L*L1^2*k1*wL^2 + 3*L^2*L1*k1*wL^2 + 3*L*k2*u1^2*u2^2 + 3*L^2*k2*u1*u2^2 - 3*L^2*k2*u1^2*u2 + 3*L1^2*k1*u1*u2^2 - 3*L1*k2*u1^2*u2^2 + 3*L1^2*k1*u1*u3^2 + 9*L1^2*k2*u1*u2^2 - 6*L1^2*k2*u1^2*u2 - 3*L1*k1*u2^2*u3^2 - 6*L1^2*k1*u2*u3^2 + 9*L1^2*k1*u2^2*u3 + 3*L1^2*k2*u1^2*u3 + 3*L1^2*k2*u2^2*u3 - 3*L*k1*u2^2*vL^2 + 3*L^2*k1*u2*vL^2 - 3*L*k1*u3^2*vL^2 + 3*L1*k1*u2^2*vL^2 + 3*L1*k2*u1^2*vL^2 - 3*L^2*k1*u3*vL^2 + 3*L1^2*k1*u2*vL^2 - 3*L1^2*k2*u1*vL^2 + 3*L1*k1*u3^2*vL^2 + 3*L1*k2*u2^2*vL^2 - 3*L1^2*k1*u3*vL^2 + 3*L1^2*k2*u2*vL^2 - 3*L*k1*u2^2*wL^2 + 3*L^2*k1*u2*wL^2 - 3*L*k1*u3^2*wL^2 + 3*L1*k1*u2^2*wL^2 + 3*L1*k2*u1^2*wL^2 - 3*L^2*k1*u3*wL^2 + 3*L1^2*k1*u2*wL^2 - 3*L1^2*k2*u1*wL^2 + 3*L1*k1*u3^2*wL^2 + 3*L1*k2*u2^2*wL^2 - 3*L1^2*k1*u3*wL^2 + 3*L1^2*k2*u2*wL^2 - 3*k2*u1*u2^2*vL^2 + 3*k2*u1^2*u2*vL^2 + 3*k1*u2*u3^2*vL^2 - 3*k1*u2^2*u3*vL^2 - 3*k2*u1*u2^2*wL^2 + 3*k2*u1^2*u2*wL^2 + 3*k1*u2*u3^2*wL^2 - 3*k1*u2^2*u3*wL^2 - 3*L*L1*k1*u1*u2^2 - 6*L*L1^2*k1*u1*u2 + 3*L^2*L1*k1*u1*u2 - 3*L*L1*k1*u1*u3^2 - 12*L*L1*k2*u1*u2^2 + 9*L*L1*k2*u1^2*u2 + 6*L*L1^2*k1*u1*u3 - 15*L*L1^2*k2*u1*u2 - 3*L^2*L1*k1*u1*u3 + 6*L^2*L1*k2*u1*u2 + 3*L*L1*k1*u2*u3^2 - 6*L*L1*k1*u2^2*u3 - 3*L*L1*k2*u1^2*u3 - 12*L*L1^2*k1*u2*u3 + 3*L*L1^2*k2*u1*u3 + 3*L^2*L1*k1*u2*u3 - 3*L*L1*k2*u2^2*u3 - 3*L*L1^2*k2*u2*u3 - 6*L*L1*k1*u2*vL^2 + 6*L*L1*k1*u3*vL^2 - 6*L*L1*k1*u2*wL^2 + 6*L*L1*k1*u3*wL^2 + 3*L*k2*u1*u2^2*u3 - 3*L*k2*u1^2*u2*u3 + 3*L1*k1*u1*u2*u3^2 - 3*L1*k1*u1*u2^2*u3 - 6*L1^2*k1*u1*u2*u3 - 3*L1*k2*u1*u2^2*u3 + 3*L1*k2*u1^2*u2*u3 - 6*L1^2*k2*u1*u2*u3 + 6*L*k1*u2*u3*vL^2 - 6*L1*k2*u1*u2*vL^2 - 6*L1*k1*u2*u3*vL^2 + 6*L*k1*u2*u3*wL^2 - 6*L1*k2*u1*u2*wL^2 - 6*L1*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2*u3 + 6*L*L1*k2*u1*u2*u3))/((Mb2 + dm)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^3) + ((vL^2 + wL^2)*(2*k1*u2^3*wL - 2*k2*u1^3*wL - 2*k1*u3^3*wL + 2*k2*u2^3*wL - 2*L^3*k1*wL + 2*L1^3*k1*wL + 2*L1^3*k2*wL - 6*L*L1^2*k1*wL + 6*L^2*L1*k1*wL - 6*L*k1*u2^2*wL + 6*L^2*k1*u2*wL - 6*L*k1*u3^2*wL + 6*L1*k1*u2^2*wL + 6*L1*k2*u1^2*wL - 6*L^2*k1*u3*wL + 6*L1^2*k1*u2*wL - 6*L1^2*k2*u1*wL + 6*L1*k1*u3^2*wL + 6*L1*k2*u2^2*wL - 6*L1^2*k1*u3*wL + 6*L1^2*k2*u2*wL - 6*k2*u1*u2^2*wL + 6*k2*u1^2*u2*wL + 6*k1*u2*u3^2*wL - 6*k1*u2^2*u3*wL - 12*L*L1*k1*u2*wL + 12*L*L1*k1*u3*wL + 12*L*k1*u2*u3*wL - 12*L1*k2*u1*u2*wL - 12*L1*k1*u2*u3*wL))/((Mb2 + dm)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^3), 0, -((vL^2 + wL^2)*(3*L^2*k1*vL^2 - L1^4*k2 - 3*L^2*L1^2*k1 - 9*L1^2*k1*u2^2 - 3*L1^2*k2*u1^2 - 3*L1^2*k1*u3^2 - 3*L1^2*k2*u2^2 - 3*L1^4*k1 + 3*L1^2*k1*vL^2 + 3*L^2*k1*wL^2 + 3*L1^2*k1*wL^2 + 3*k1*u2^2*vL^2 + 3*k1*u3^2*vL^2 + 3*k1*u2^2*wL^2 + 3*k1*u3^2*wL^2 + 6*L*L1^3*k1 + L*L1^3*k2 - L*k2*u1^3 + 3*L1^3*k1*u1 + L*k2*u2^3 - 3*L1*k1*u2^3 + L1*k2*u1^3 - 9*L1^3*k1*u2 + 3*L1^3*k2*u1 - L1*k2*u2^3 + 6*L1^3*k1*u3 - 3*L1^3*k2*u2 - 6*L*L1^2*k1*u1 + 3*L^2*L1*k1*u1 + 6*L*L1*k1*u2^2 + 3*L*L1*k2*u1^2 + 12*L*L1^2*k1*u2 - 3*L*L1^2*k2*u1 - 3*L^2*L1*k1*u2 + 3*L*L1*k2*u2^2 - 6*L*L1^2*k1*u3 + 3*L*L1^2*k2*u2 - 6*L*L1*k1*vL^2 - 6*L*L1*k1*wL^2 - 3*L*k2*u1*u2^2 + 3*L*k2*u1^2*u2 + 3*L1*k1*u1*u2^2 + 6*L1^2*k1*u1*u2 + 3*L1*k1*u1*u3^2 + 3*L1*k2*u1*u2^2 - 3*L1*k2*u1^2*u2 - 6*L1^2*k1*u1*u3 + 6*L1^2*k2*u1*u2 - 3*L1*k1*u2*u3^2 + 6*L1*k1*u2^2*u3 + 12*L1^2*k1*u2*u3 - 6*L*k1*u2*vL^2 + 6*L*k1*u3*vL^2 + 6*L1*k1*u2*vL^2 - 6*L1*k1*u3*vL^2 - 6*L*k1*u2*wL^2 + 6*L*k1*u3*wL^2 + 6*L1*k1*u2*wL^2 - 6*L1*k1*u3*wL^2 - 6*k1*u2*u3*vL^2 - 6*k1*u2*u3*wL^2 - 6*L*L1*k1*u1*u2 + 6*L*L1*k1*u1*u3 - 6*L*L1*k2*u1*u2 - 6*L*L1*k1*u2*u3 - 6*L1*k1*u1*u2*u3))/((Mb2 + dm)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^3) - (3*(vL^2 + wL^2)*(L^3*L1^2*k1 - L1^5*k2 - 3*L^2*L1^3*k1 - L1^5*k1 - L^2*L1^3*k2 + L^2*k2*u1^3 - L^2*k2*u2^3 - 4*L1^2*k1*u2^3 + L1^2*k2*u1^3 - 6*L1^3*k1*u2^2 - 3*L1^3*k2*u1^2 + L1^2*k1*u3^3 - 4*L1^2*k2*u2^3 - 3*L1^3*k1*u3^2 - 6*L1^3*k2*u2^2 - L^3*k1*vL^2 + L1^3*k1*vL^2 + L1^3*k2*vL^2 - L^3*k1*wL^2 + L1^3*k1*wL^2 + L1^3*k2*wL^2 + k1*u2^3*vL^2 - k2*u1^3*vL^2 - k1*u3^3*vL^2 + k2*u2^3*vL^2 + k1*u2^3*wL^2 - k2*u1^3*wL^2 - k1*u3^3*wL^2 + k2*u2^3*wL^2 + 3*L*L1^4*k1 + 2*L*L1^4*k2 + L1^4*k1*u1 + L*k2*u2^4 - L1*k1*u2^4 - 4*L1^4*k1*u2 + 3*L1^4*k2*u1 - L1*k2*u2^4 + 3*L1^4*k1*u3 - 4*L1^4*k2*u2 + L1^4*k2*u3 - 3*L*L1^3*k1*u1 - L^3*L1*k1*u1 + 3*L*L1*k1*u2^3 - 2*L*L1*k2*u1^3 + 9*L*L1^3*k1*u2 - 6*L*L1^3*k2*u1 + L^3*L1*k1*u2 + 5*L*L1*k2*u2^3 - 6*L*L1^3*k1*u3 + 7*L*L1^3*k2*u2 - L*L1^3*k2*u3 - 3*L*k2*u1*u2^3 - L*k2*u1^3*u2 + L1*k1*u1*u2^3 + 3*L1^3*k1*u1*u2 + L*k2*u1^3*u3 - L1*k1*u1*u3^3 + 3*L1*k2*u1*u2^3 + L1*k2*u1^3*u2 - 3*L1^3*k1*u1*u3 + 9*L1^3*k2*u1*u2 - L*k2*u2^3*u3 + L1*k1*u2*u3^3 + 3*L1*k1*u2^3*u3 - L1*k2*u1^3*u3 + 9*L1^3*k1*u2*u3 - 3*L1^3*k2*u1*u3 + L1*k2*u2^3*u3 + 3*L1^3*k2*u2*u3 + 3*L^2*L1^2*k1*u1 + 9*L*L1^2*k1*u2^2 + 6*L*L1^2*k2*u1^2 - 3*L^2*L1*k1*u2^2 - 3*L^2*L1*k2*u1^2 - 6*L^2*L1^2*k1*u2 + 3*L^2*L1^2*k2*u1 + 3*L*L1^2*k1*u3^2 + 9*L*L1^2*k2*u2^2 - 3*L^2*L1*k2*u2^2 + 3*L^2*L1^2*k1*u3 - 3*L^2*L1^2*k2*u2 - 3*L*L1^2*k1*vL^2 + 3*L^2*L1*k1*vL^2 - 3*L*L1^2*k1*wL^2 + 3*L^2*L1*k1*wL^2 + 3*L*k2*u1^2*u2^2 + 3*L^2*k2*u1*u2^2 - 3*L^2*k2*u1^2*u2 + 3*L1^2*k1*u1*u2^2 - 3*L1*k2*u1^2*u2^2 + 3*L1^2*k1*u1*u3^2 + 9*L1^2*k2*u1*u2^2 - 6*L1^2*k2*u1^2*u2 - 3*L1*k1*u2^2*u3^2 - 6*L1^2*k1*u2*u3^2 + 9*L1^2*k1*u2^2*u3 + 3*L1^2*k2*u1^2*u3 + 3*L1^2*k2*u2^2*u3 - 3*L*k1*u2^2*vL^2 + 3*L^2*k1*u2*vL^2 - 3*L*k1*u3^2*vL^2 + 3*L1*k1*u2^2*vL^2 + 3*L1*k2*u1^2*vL^2 - 3*L^2*k1*u3*vL^2 + 3*L1^2*k1*u2*vL^2 - 3*L1^2*k2*u1*vL^2 + 3*L1*k1*u3^2*vL^2 + 3*L1*k2*u2^2*vL^2 - 3*L1^2*k1*u3*vL^2 + 3*L1^2*k2*u2*vL^2 - 3*L*k1*u2^2*wL^2 + 3*L^2*k1*u2*wL^2 - 3*L*k1*u3^2*wL^2 + 3*L1*k1*u2^2*wL^2 + 3*L1*k2*u1^2*wL^2 - 3*L^2*k1*u3*wL^2 + 3*L1^2*k1*u2*wL^2 - 3*L1^2*k2*u1*wL^2 + 3*L1*k1*u3^2*wL^2 + 3*L1*k2*u2^2*wL^2 - 3*L1^2*k1*u3*wL^2 + 3*L1^2*k2*u2*wL^2 - 3*k2*u1*u2^2*vL^2 + 3*k2*u1^2*u2*vL^2 + 3*k1*u2*u3^2*vL^2 - 3*k1*u2^2*u3*vL^2 - 3*k2*u1*u2^2*wL^2 + 3*k2*u1^2*u2*wL^2 + 3*k1*u2*u3^2*wL^2 - 3*k1*u2^2*u3*wL^2 - 3*L*L1*k1*u1*u2^2 - 6*L*L1^2*k1*u1*u2 + 3*L^2*L1*k1*u1*u2 - 3*L*L1*k1*u1*u3^2 - 12*L*L1*k2*u1*u2^2 + 9*L*L1*k2*u1^2*u2 + 6*L*L1^2*k1*u1*u3 - 15*L*L1^2*k2*u1*u2 - 3*L^2*L1*k1*u1*u3 + 6*L^2*L1*k2*u1*u2 + 3*L*L1*k1*u2*u3^2 - 6*L*L1*k1*u2^2*u3 - 3*L*L1*k2*u1^2*u3 - 12*L*L1^2*k1*u2*u3 + 3*L*L1^2*k2*u1*u3 + 3*L^2*L1*k1*u2*u3 - 3*L*L1*k2*u2^2*u3 - 3*L*L1^2*k2*u2*u3 - 6*L*L1*k1*u2*vL^2 + 6*L*L1*k1*u3*vL^2 - 6*L*L1*k1*u2*wL^2 + 6*L*L1*k1*u3*wL^2 + 3*L*k2*u1*u2^2*u3 - 3*L*k2*u1^2*u2*u3 + 3*L1*k1*u1*u2*u3^2 - 3*L1*k1*u1*u2^2*u3 - 6*L1^2*k1*u1*u2*u3 - 3*L1*k2*u1*u2^2*u3 + 3*L1*k2*u1^2*u2*u3 - 6*L1^2*k2*u1*u2*u3 + 6*L*k1*u2*u3*vL^2 - 6*L1*k2*u1*u2*vL^2 - 6*L1*k1*u2*u3*vL^2 + 6*L*k1*u2*u3*wL^2 - 6*L1*k2*u1*u2*wL^2 - 6*L1*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2*u3 + 6*L*L1*k2*u1*u2*u3))/((Mb2 + dm)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^4), 0, 0, 0, 0, 0, 0, 0, 0, 0;
     (4*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^2) - (2*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*((L1^3*k1)/2 + k1*u2^3 + k2*u2^3 - k1*u1*u2^2 - k1*u1*u3^2 - k2*u1*u2^2 + k1*u2*u3^2 - 2*k1*u2^2*u3 - k2*u1*u3^2 + k2*u2*u3^2 - 2*k2*u2^2*u3 - k2*u1*vL^2 + k2*u2*vL^2 - k2*u1*wL^2 + k2*u2*wL^2 - L*L1^2*k1 + (L^2*L1*k1)/2 - L^2*k1*u1 - 2*L*k1*u2^2 + L^2*k1*u2 - L1^2*k1*u1 - L*k2*u2^2 + (5*L1*k1*u2^2)/2 + 2*L1^2*k1*u2 + (L1*k1*u3^2)/2 + 2*L1*k2*u2^2 - L1^2*k1*u3 + L1^2*k2*u2 + L1*k2*u3^2 - L1^2*k2*u3 + L1*k2*vL^2 + L1*k2*wL^2 + 2*L*k1*u1*u2 - 2*L*k1*u1*u3 + L*k2*u1*u2 - 2*L1*k1*u1*u2 + 2*L*k1*u2*u3 - L*k2*u1*u3 + 2*L1*k1*u1*u3 - L1*k2*u1*u2 + L*k2*u2*u3 - 3*L1*k1*u2*u3 + L1*k2*u1*u3 - 3*L1*k2*u2*u3 + 2*k1*u1*u2*u3 + 2*k2*u1*u2*u3 + 2*L*L1*k1*u1 - 3*L*L1*k1*u2 + L*L1*k1*u3 - L*L1*k2*u2 + L*L1*k2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), 0, (2*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*((L1^3*k1)/2 + (L1^3*k2)/2 + 2*k1*u2^3 + 2*k2*u2^3 - 3*k1*u1*u2^2 + k1*u1^2*u2 - k1*u1*u3^2 - k1*u1^2*u3 - 3*k2*u1*u2^2 + k2*u1^2*u2 + k1*u2*u3^2 - 3*k1*u2^2*u3 - k2*u1*u3^2 - k2*u1^2*u3 + k2*u2*u3^2 - 3*k2*u2^2*u3 + k1*u2*vL^2 - k2*u1*vL^2 - k1*u3*vL^2 + k2*u2*vL^2 + k1*u2*wL^2 - k2*u1*wL^2 - k1*u3*wL^2 + k2*u2*wL^2 - L*L1^2*k1 + (L^2*L1*k1)/2 - (L*L1^2*k2)/2 - L*k1*u1^2 - L^2*k1*u1 - 3*L*k1*u2^2 - (L*k2*u1^2)/2 + L1*k1*u1^2 + L^2*k1*u2 - 2*L1^2*k1*u1 - (3*L*k2*u2^2)/2 + (9*L1*k1*u2^2)/2 + (L1*k2*u1^2)/2 + 3*L1^2*k1*u2 - L1^2*k2*u1 + (L1*k1*u3^2)/2 + (9*L1*k2*u2^2)/2 - L1^2*k1*u3 + 3*L1^2*k2*u2 + L1*k2*u3^2 - 2*L1^2*k2*u3 - L*k1*vL^2 + L1*k1*vL^2 + L1*k2*vL^2 - L*k1*wL^2 + L1*k1*wL^2 + L1*k2*wL^2 + 4*L*k1*u1*u2 - 2*L*k1*u1*u3 + 2*L*k2*u1*u2 - 5*L1*k1*u1*u2 + 2*L*k1*u2*u3 - L*k2*u1*u3 + 3*L1*k1*u1*u3 - 4*L1*k2*u1*u2 + L*k2*u2*u3 - 4*L1*k1*u2*u3 + 3*L1*k2*u1*u3 - 5*L1*k2*u2*u3 + 4*k1*u1*u2*u3 + 4*k2*u1*u2*u3 + 3*L*L1*k1*u1 - 4*L*L1*k1*u2 + L*L1*k2*u1 + L*L1*k1*u3 - 2*L*L1*k2*u2 + L*L1*k2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (4*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3) - (4*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^2), (2*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*(k1*u2^2*vL + k2*u1^2*vL + k1*u3^2*vL + k2*u2^2*vL + L^2*k1*vL + L1^2*k1*vL + L1^2*k2*vL - 2*L*k1*u2*vL + 2*L*k1*u3*vL + 2*L1*k1*u2*vL - 2*L1*k2*u1*vL - 2*L1*k1*u3*vL + 2*L1*k2*u2*vL - 2*k2*u1*u2*vL - 2*k1*u2*u3*vL - 2*L*L1*k1*vL))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (2*(2*Ib2*dm + dm^2*l2^2 + 2*Ib2*Mb2 - dm^2*l2^2*cos(2*alfa + 2*teta2) + 2*Mb2*dm*l2^2)*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), (2*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*(k1*u2^2*wL + k2*u1^2*wL + k1*u3^2*wL + k2*u2^2*wL + L^2*k1*wL + L1^2*k1*wL + L1^2*k2*wL - 2*L*k1*u2*wL + 2*L*k1*u3*wL + 2*L1*k1*u2*wL - 2*L1*k2*u1*wL - 2*L1*k1*u3*wL + 2*L1*k2*u2*wL - 2*k2*u1*u2*wL - 2*k1*u2*u3*wL - 2*L*L1*k1*wL))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (2*dm^2*l2^2*sin(2*alfa + 2*teta2)*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), -(2*(2*dm^2*l2^2*wL*cos(2*alfa + 2*teta2) - 2*dm^2*l2^2*vL*sin(2*alfa + 2*teta2))*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), (2*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*(2*k1*u1*u2^2 - k1*u2^3 - k2*u2^3 - (L1^3*k2)/2 - k1*u1^2*u2 + k1*u1^2*u3 + 2*k2*u1*u2^2 - k2*u1^2*u2 + k1*u2^2*u3 + k2*u1^2*u3 + k2*u2^2*u3 - k1*u2*vL^2 + k1*u3*vL^2 - k1*u2*wL^2 + k1*u3*wL^2 + (L*L1^2*k2)/2 + L*k1*u1^2 + L*k1*u2^2 + (L*k2*u1^2)/2 - L1*k1*u1^2 + L1^2*k1*u1 + (L*k2*u2^2)/2 - 2*L1*k1*u2^2 - (L1*k2*u1^2)/2 - L1^2*k1*u2 + L1^2*k2*u1 - (5*L1*k2*u2^2)/2 - 2*L1^2*k2*u2 + L1^2*k2*u3 + L*k1*vL^2 - L1*k1*vL^2 + L*k1*wL^2 - L1*k1*wL^2 - 2*L*k1*u1*u2 - L*k2*u1*u2 + 3*L1*k1*u1*u2 - L1*k1*u1*u3 + 3*L1*k2*u1*u2 + L1*k1*u2*u3 - 2*L1*k2*u1*u3 + 2*L1*k2*u2*u3 - 2*k1*u1*u2*u3 - 2*k2*u1*u2*u3 - L*L1*k1*u1 + L*L1*k1*u2 - L*L1*k2*u1 + L*L1*k2*u2))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (4*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3), 0, 0, 0, 0, 0, 0, 0, 0, 0;
     (4*(Ib2*Mb2*wL + Ib2*dm*wL + Mb2*dm*l2^2*wL + dm^2*l2^2*wL*cos(alfa + teta2)^2 - (dm^2*l2^2*vL*sin(2*alfa + 2*teta2))/2)*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^2) - (2*(Ib2*Mb2*wL + Ib2*dm*wL + Mb2*dm*l2^2*wL + dm^2*l2^2*wL*cos(alfa + teta2)^2 - (dm^2*l2^2*vL*sin(2*alfa + 2*teta2))/2)*(L1^3*k1 + 2*k1*u2^3 + 2*k2*u2^3 - 2*k1*u1*u2^2 - 2*k1*u1*u3^2 - 2*k2*u1*u2^2 + 2*k1*u2*u3^2 - 4*k1*u2^2*u3 - 2*k2*u1*u3^2 + 2*k2*u2*u3^2 - 4*k2*u2^2*u3 - 2*k2*u1*vL^2 + 2*k2*u2*vL^2 - 2*k2*u1*wL^2 + 2*k2*u2*wL^2 - 2*L*L1^2*k1 + L^2*L1*k1 - 2*L^2*k1*u1 - 4*L*k1*u2^2 + 2*L^2*k1*u2 - 2*L1^2*k1*u1 - 2*L*k2*u2^2 + 5*L1*k1*u2^2 + 4*L1^2*k1*u2 + L1*k1*u3^2 + 4*L1*k2*u2^2 - 2*L1^2*k1*u3 + 2*L1^2*k2*u2 + 2*L1*k2*u3^2 - 2*L1^2*k2*u3 + 2*L1*k2*vL^2 + 2*L1*k2*wL^2 + 4*L*k1*u1*u2 - 4*L*k1*u1*u3 + 2*L*k2*u1*u2 - 4*L1*k1*u1*u2 + 4*L*k1*u2*u3 - 2*L*k2*u1*u3 + 4*L1*k1*u1*u3 - 2*L1*k2*u1*u2 + 2*L*k2*u2*u3 - 6*L1*k1*u2*u3 + 2*L1*k2*u1*u3 - 6*L1*k2*u2*u3 + 4*k1*u1*u2*u3 + 4*k2*u1*u2*u3 + 4*L*L1*k1*u1 - 6*L*L1*k1*u2 + 2*L*L1*k1*u3 - 2*L*L1*k2*u2 + 2*L*L1*k2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), 0, (2*(Ib2*Mb2*wL + Ib2*dm*wL + Mb2*dm*l2^2*wL + dm^2*l2^2*wL*cos(alfa + teta2)^2 - (dm^2*l2^2*vL*sin(2*alfa + 2*teta2))/2)*(L1^3*k1 + L1^3*k2 + 4*k1*u2^3 + 4*k2*u2^3 - 6*k1*u1*u2^2 + 2*k1*u1^2*u2 - 2*k1*u1*u3^2 - 2*k1*u1^2*u3 - 6*k2*u1*u2^2 + 2*k2*u1^2*u2 + 2*k1*u2*u3^2 - 6*k1*u2^2*u3 - 2*k2*u1*u3^2 - 2*k2*u1^2*u3 + 2*k2*u2*u3^2 - 6*k2*u2^2*u3 + 2*k1*u2*vL^2 - 2*k2*u1*vL^2 - 2*k1*u3*vL^2 + 2*k2*u2*vL^2 + 2*k1*u2*wL^2 - 2*k2*u1*wL^2 - 2*k1*u3*wL^2 + 2*k2*u2*wL^2 - 2*L*L1^2*k1 + L^2*L1*k1 - L*L1^2*k2 - 2*L*k1*u1^2 - 2*L^2*k1*u1 - 6*L*k1*u2^2 - L*k2*u1^2 + 2*L1*k1*u1^2 + 2*L^2*k1*u2 - 4*L1^2*k1*u1 - 3*L*k2*u2^2 + 9*L1*k1*u2^2 + L1*k2*u1^2 + 6*L1^2*k1*u2 - 2*L1^2*k2*u1 + L1*k1*u3^2 + 9*L1*k2*u2^2 - 2*L1^2*k1*u3 + 6*L1^2*k2*u2 + 2*L1*k2*u3^2 - 4*L1^2*k2*u3 - 2*L*k1*vL^2 + 2*L1*k1*vL^2 + 2*L1*k2*vL^2 - 2*L*k1*wL^2 + 2*L1*k1*wL^2 + 2*L1*k2*wL^2 + 8*L*k1*u1*u2 - 4*L*k1*u1*u3 + 4*L*k2*u1*u2 - 10*L1*k1*u1*u2 + 4*L*k1*u2*u3 - 2*L*k2*u1*u3 + 6*L1*k1*u1*u3 - 8*L1*k2*u1*u2 + 2*L*k2*u2*u3 - 8*L1*k1*u2*u3 + 6*L1*k2*u1*u3 - 10*L1*k2*u2*u3 + 8*k1*u1*u2*u3 + 8*k2*u1*u2*u3 + 6*L*L1*k1*u1 - 8*L*L1*k1*u2 + 2*L*L1*k2*u1 + 2*L*L1*k1*u3 - 4*L*L1*k2*u2 + 2*L*L1*k2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (4*(Ib2*Mb2*wL + Ib2*dm*wL + Mb2*dm*l2^2*wL + dm^2*l2^2*wL*cos(alfa + teta2)^2 - (dm^2*l2^2*vL*sin(2*alfa + 2*teta2))/2)*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3) - (4*(Ib2*Mb2*wL + Ib2*dm*wL + Mb2*dm*l2^2*wL + dm^2*l2^2*wL*cos(alfa + teta2)^2 - (dm^2*l2^2*vL*sin(2*alfa + 2*teta2))/2)*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^2), (2*(Ib2*Mb2*wL + Ib2*dm*wL + Mb2*dm*l2^2*wL + dm^2*l2^2*wL*cos(alfa + teta2)^2 - (dm^2*l2^2*vL*sin(2*alfa + 2*teta2))/2)*(2*k1*u2^2*vL + 2*k2*u1^2*vL + 2*k1*u3^2*vL + 2*k2*u2^2*vL + 2*L^2*k1*vL + 2*L1^2*k1*vL + 2*L1^2*k2*vL - 4*L*k1*u2*vL + 4*L*k1*u3*vL + 4*L1*k1*u2*vL - 4*L1*k2*u1*vL - 4*L1*k1*u3*vL + 4*L1*k2*u2*vL - 4*k2*u1*u2*vL - 4*k1*u2*u3*vL - 4*L*L1*k1*vL))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (dm^2*l2^2*sin(2*alfa + 2*teta2)*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), (2*(Ib2*dm + Ib2*Mb2 + Mb2*dm*l2^2 + dm^2*l2^2*cos(alfa + teta2)^2)*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (2*(Ib2*Mb2*wL + Ib2*dm*wL + Mb2*dm*l2^2*wL + dm^2*l2^2*wL*cos(alfa + teta2)^2 - (dm^2*l2^2*vL*sin(2*alfa + 2*teta2))/2)*(2*k1*u2^2*wL + 2*k2*u1^2*wL + 2*k1*u3^2*wL + 2*k2*u2^2*wL + 2*L^2*k1*wL + 2*L1^2*k1*wL + 2*L1^2*k2*wL - 4*L*k1*u2*wL + 4*L*k1*u3*wL + 4*L1*k1*u2*wL - 4*L1*k2*u1*wL - 4*L1*k1*u3*wL + 4*L1*k2*u2*wL - 4*k2*u1*u2*wL - 4*k1*u2*u3*wL - 4*L*L1*k1*wL))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), -(2*(dm^2*l2^2*vL*cos(2*alfa + 2*teta2) + 2*dm^2*l2^2*wL*cos(alfa + teta2)*sin(alfa + teta2))*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), (2*(Ib2*Mb2*wL + Ib2*dm*wL + Mb2*dm*l2^2*wL + dm^2*l2^2*wL*cos(alfa + teta2)^2 - (dm^2*l2^2*vL*sin(2*alfa + 2*teta2))/2)*(4*k1*u1*u2^2 - 2*k1*u2^3 - 2*k2*u2^3 - L1^3*k2 - 2*k1*u1^2*u2 + 2*k1*u1^2*u3 + 4*k2*u1*u2^2 - 2*k2*u1^2*u2 + 2*k1*u2^2*u3 + 2*k2*u1^2*u3 + 2*k2*u2^2*u3 - 2*k1*u2*vL^2 + 2*k1*u3*vL^2 - 2*k1*u2*wL^2 + 2*k1*u3*wL^2 + L*L1^2*k2 + 2*L*k1*u1^2 + 2*L*k1*u2^2 + L*k2*u1^2 - 2*L1*k1*u1^2 + 2*L1^2*k1*u1 + L*k2*u2^2 - 4*L1*k1*u2^2 - L1*k2*u1^2 - 2*L1^2*k1*u2 + 2*L1^2*k2*u1 - 5*L1*k2*u2^2 - 4*L1^2*k2*u2 + 2*L1^2*k2*u3 + 2*L*k1*vL^2 - 2*L1*k1*vL^2 + 2*L*k1*wL^2 - 2*L1*k1*wL^2 - 4*L*k1*u1*u2 - 2*L*k2*u1*u2 + 6*L1*k1*u1*u2 - 2*L1*k1*u1*u3 + 6*L1*k2*u1*u2 + 2*L1*k1*u2*u3 - 4*L1*k2*u1*u3 + 4*L1*k2*u2*u3 - 4*k1*u1*u2*u3 - 4*k2*u1*u2*u3 - 2*L*L1*k1*u1 + 2*L*L1*k1*u2 - 2*L*L1*k2*u1 + 2*L*L1*k2*u2))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (4*(Ib2*Mb2*wL + Ib2*dm*wL + Mb2*dm*l2^2*wL + dm^2*l2^2*wL*cos(alfa + teta2)^2 - (dm^2*l2^2*vL*sin(2*alfa + 2*teta2))/2)*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3), 0, 0, 0, 0, 0, 0, 0, 0, 0;
     (2*dm*l2*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(L1^3*k1 + 2*k1*u2^3 + 2*k2*u2^3 - 2*k1*u1*u2^2 - 2*k1*u1*u3^2 - 2*k2*u1*u2^2 + 2*k1*u2*u3^2 - 4*k1*u2^2*u3 - 2*k2*u1*u3^2 + 2*k2*u2*u3^2 - 4*k2*u2^2*u3 - 2*k2*u1*vL^2 + 2*k2*u2*vL^2 - 2*k2*u1*wL^2 + 2*k2*u2*wL^2 - 2*L*L1^2*k1 + L^2*L1*k1 - 2*L^2*k1*u1 - 4*L*k1*u2^2 + 2*L^2*k1*u2 - 2*L1^2*k1*u1 - 2*L*k2*u2^2 + 5*L1*k1*u2^2 + 4*L1^2*k1*u2 + L1*k1*u3^2 + 4*L1*k2*u2^2 - 2*L1^2*k1*u3 + 2*L1^2*k2*u2 + 2*L1*k2*u3^2 - 2*L1^2*k2*u3 + 2*L1*k2*vL^2 + 2*L1*k2*wL^2 + 4*L*k1*u1*u2 - 4*L*k1*u1*u3 + 2*L*k2*u1*u2 - 4*L1*k1*u1*u2 + 4*L*k1*u2*u3 - 2*L*k2*u1*u3 + 4*L1*k1*u1*u3 - 2*L1*k2*u1*u2 + 2*L*k2*u2*u3 - 6*L1*k1*u2*u3 + 2*L1*k2*u1*u3 - 6*L1*k2*u2*u3 + 4*k1*u1*u2*u3 + 4*k2*u1*u2*u3 + 4*L*L1*k1*u1 - 6*L*L1*k1*u2 + 2*L*L1*k1*u3 - 2*L*L1*k2*u2 + 2*L*L1*k2*u3))/((Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (4*dm*l2*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^2), 0, (4*dm*l2*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^2) - (4*dm*l2*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3) - (2*dm*l2*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(L1^3*k1 + L1^3*k2 + 4*k1*u2^3 + 4*k2*u2^3 - 6*k1*u1*u2^2 + 2*k1*u1^2*u2 - 2*k1*u1*u3^2 - 2*k1*u1^2*u3 - 6*k2*u1*u2^2 + 2*k2*u1^2*u2 + 2*k1*u2*u3^2 - 6*k1*u2^2*u3 - 2*k2*u1*u3^2 - 2*k2*u1^2*u3 + 2*k2*u2*u3^2 - 6*k2*u2^2*u3 + 2*k1*u2*vL^2 - 2*k2*u1*vL^2 - 2*k1*u3*vL^2 + 2*k2*u2*vL^2 + 2*k1*u2*wL^2 - 2*k2*u1*wL^2 - 2*k1*u3*wL^2 + 2*k2*u2*wL^2 - 2*L*L1^2*k1 + L^2*L1*k1 - L*L1^2*k2 - 2*L*k1*u1^2 - 2*L^2*k1*u1 - 6*L*k1*u2^2 - L*k2*u1^2 + 2*L1*k1*u1^2 + 2*L^2*k1*u2 - 4*L1^2*k1*u1 - 3*L*k2*u2^2 + 9*L1*k1*u2^2 + L1*k2*u1^2 + 6*L1^2*k1*u2 - 2*L1^2*k2*u1 + L1*k1*u3^2 + 9*L1*k2*u2^2 - 2*L1^2*k1*u3 + 6*L1^2*k2*u2 + 2*L1*k2*u3^2 - 4*L1^2*k2*u3 - 2*L*k1*vL^2 + 2*L1*k1*vL^2 + 2*L1*k2*vL^2 - 2*L*k1*wL^2 + 2*L1*k1*wL^2 + 2*L1*k2*wL^2 + 8*L*k1*u1*u2 - 4*L*k1*u1*u3 + 4*L*k2*u1*u2 - 10*L1*k1*u1*u2 + 4*L*k1*u2*u3 - 2*L*k2*u1*u3 + 6*L1*k1*u1*u3 - 8*L1*k2*u1*u2 + 2*L*k2*u2*u3 - 8*L1*k1*u2*u3 + 6*L1*k2*u1*u3 - 10*L1*k2*u2*u3 + 8*k1*u1*u2*u3 + 8*k2*u1*u2*u3 + 6*L*L1*k1*u1 - 8*L*L1*k1*u2 + 2*L*L1*k2*u1 + 2*L*L1*k1*u3 - 4*L*L1*k2*u2 + 2*L*L1*k2*u3))/((Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), (2*dm*l2*sin(alfa + teta2)*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (2*dm*l2*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(2*k1*u2^2*vL + 2*k2*u1^2*vL + 2*k1*u3^2*vL + 2*k2*u2^2*vL + 2*L^2*k1*vL + 2*L1^2*k1*vL + 2*L1^2*k2*vL - 4*L*k1*u2*vL + 4*L*k1*u3*vL + 4*L1*k1*u2*vL - 4*L1*k2*u1*vL - 4*L1*k1*u3*vL + 4*L1*k2*u2*vL - 4*k2*u1*u2*vL - 4*k1*u2*u3*vL - 4*L*L1*k1*vL))/((Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), -(2*dm*l2*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(2*k1*u2^2*wL + 2*k2*u1^2*wL + 2*k1*u3^2*wL + 2*k2*u2^2*wL + 2*L^2*k1*wL + 2*L1^2*k1*wL + 2*L1^2*k2*wL - 4*L*k1*u2*wL + 4*L*k1*u3*wL + 4*L1*k1*u2*wL - 4*L1*k2*u1*wL - 4*L1*k1*u3*wL + 4*L1*k2*u2*wL - 4*k2*u1*u2*wL - 4*k1*u2*u3*wL - 4*L*L1*k1*wL))/((Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (2*dm*l2*cos(alfa + teta2)*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), (2*dm*l2*(vL*cos(alfa + teta2) + wL*sin(alfa + teta2))*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), (4*dm*l2*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3) - (2*dm*l2*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(4*k1*u1*u2^2 - 2*k1*u2^3 - 2*k2*u2^3 - L1^3*k2 - 2*k1*u1^2*u2 + 2*k1*u1^2*u3 + 4*k2*u1*u2^2 - 2*k2*u1^2*u2 + 2*k1*u2^2*u3 + 2*k2*u1^2*u3 + 2*k2*u2^2*u3 - 2*k1*u2*vL^2 + 2*k1*u3*vL^2 - 2*k1*u2*wL^2 + 2*k1*u3*wL^2 + L*L1^2*k2 + 2*L*k1*u1^2 + 2*L*k1*u2^2 + L*k2*u1^2 - 2*L1*k1*u1^2 + 2*L1^2*k1*u1 + L*k2*u2^2 - 4*L1*k1*u2^2 - L1*k2*u1^2 - 2*L1^2*k1*u2 + 2*L1^2*k2*u1 - 5*L1*k2*u2^2 - 4*L1^2*k2*u2 + 2*L1^2*k2*u3 + 2*L*k1*vL^2 - 2*L1*k1*vL^2 + 2*L*k1*wL^2 - 2*L1*k1*wL^2 - 4*L*k1*u1*u2 - 2*L*k2*u1*u2 + 6*L1*k1*u1*u2 - 2*L1*k1*u1*u3 + 6*L1*k2*u1*u2 + 2*L1*k1*u2*u3 - 4*L1*k2*u1*u3 + 4*L1*k2*u2*u3 - 4*k1*u1*u2*u3 - 4*k2*u1*u2*u3 - 2*L*L1*k1*u1 + 2*L*L1*k1*u2 - 2*L*L1*k2*u1 + 2*L*L1*k2*u2))/((Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), 0, 0, 0, 0, 0, 0, 0, 0, 0;
     0, 0, -(3*k2*(vL^2 + wL^2)*(L*u2 - L*u3 - L1*u2 + L1*u3 - L^2 - L1^2 + vL^2 + wL^2 + 2*L*L1))/(M1*(L - L1 - u2 + u3)^4) - (k2*(vL^2 + wL^2)*(L - L1))/(M1*(L - L1 - u2 + u3)^3), -(2*k2*vL*(L*u2 - L*u3 - L1*u2 + L1*u3 - L^2 - L1^2 + vL^2 + wL^2 + 2*L*L1))/(M1*(L - L1 - u2 + u3)^3) - (2*k2*vL*(vL^2 + wL^2))/(M1*(L - L1 - u2 + u3)^3), -(2*k2*wL*(L*u2 - L*u3 - L1*u2 + L1*u3 - L^2 - L1^2 + vL^2 + wL^2 + 2*L*L1))/(M1*(L - L1 - u2 + u3)^3) - (2*k2*wL*(vL^2 + wL^2))/(M1*(L - L1 - u2 + u3)^3), 0, (3*k2*(vL^2 + wL^2)*(L*u2 - L*u3 - L1*u2 + L1*u3 - L^2 - L1^2 + vL^2 + wL^2 + 2*L*L1))/(M1*(L - L1 - u2 + u3)^4) + (k2*(vL^2 + wL^2)*(L - L1))/(M1*(L - L1 - u2 + u3)^3), 0, 0, 0, 0, 0, 0, 0, 0, 0;
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];

syms b1 c1 b3 c3
C = diag([b1, c1, 0, 0, 0, 0, b3, c3]);
A = [zeros(8), Id8; -Mac\K, -Mac\C];
B = Id8(:,[2,1]);
Bb = [zeros(8,2); Mac\B];
C1 = [zeros(1,8), Id8(8,:)];

iMFu = simplify(Mac\Fu);
iMG = simplify(Mac\Gac);
iMFuz = [zeros(8,1); iMFu];
iMGz = [zeros(8,1); iMG]; 
%
C1A = simplify(C1*A);
C1iMFu = simplify(C1*iMFuz); %zero!
C1iMG = simplify(C1*iMGz); %zero!
C1Bb = simplify(C1*Bb); %zero!

dC1Adt = diff(C1A,t); %zero!
C1A2 = simplify(C1A*A);
C1AiMFu = simplify(C1A*iMFuz); %zero!
C1AiMG = simplify(C1A*iMGz); %zero!
C1ABb = simplify(C1A*Bb); %zero!

C1A3 = simplify(C1A2*A);
dC1A2dt = diff(C1A2,t); %zero!
C1A2iMFu = simplify(C1A2*iMFuz);
C1A2iMG = simplify(C1A2*iMGz); %zero!
C1A2Bb = simplify(C1A2*Bb); %zero!

dC1A3dt = diff(C1A3,t); %zero!
C1A4 = simplify(C1A3*A);
C1A2dFdZT = simplify(C1A2*dFuzdZT);
C1A2dFdZTA = simplify(C1A2dFdZT*A);
C1A3iMG = simplify(C1A3*iMGz); %zero!
C1A2dFdZTiMG = simplify(C1A2dFdZT*iMGz); %zero!
C1A3iMFu = simplify(C1A3*iMFuz); %zero!
C1A2dFdZTiMFu = simplify(C1A2dFdZT*iMFuz); %zero!
C1A3Bb = simplify(C1A3*Bb); %zero!
C1A2dFdZTBb = simplify(C1A2dFdZT*Bb); %zero!

dC1A4dt = diff(C1A4,t); %zero!
dC1A2dFdZTAdt = diff(C1A2dFdZTA,t);
C1A5 = simplify(C1A4*A);
C1A4iMG = simplify(C1A4*iMGz); %zero!
C1A4iMFu = simplify(C1A4*iMFuz);
C1A2dFdZTA2 = simplify(C1A2dFdZTA*A);
C1A2dFdZTAiMG = simplify(C1A2dFdZTA*iMGz);
C1A2dFdZTAiMFu = simplify(C1A2dFdZTA*iMFuz);
C1A3dFdZT = simplify(C1A3*dFuzdZT);
C1A3dFdZTA = simplify(C1A3dFdZT*A);
C1A3dFdZTiMGz = simplify(C1A3dFdZT*iMGz); %zero!
C1A3dFdZTiMFuz = simplify(C1A3dFdZT*iMFuz); %zero!
C1A4Bb = simplify(C1A4*Bb);
C1A2dFdZTABb = simplify(C1A2dFdZTA*Bb);
C1A3dFdZTBb = simplify(C1A3dFdZT*Bb); %zero!
%}

%%
%
%Saídas vL = gamaV*Z e wL = gamaW*Z:
%Obs.: uTil = [u1, teta1, u2, vL, wL, teta2, u3, teta3].'
gamaV = [Id8(4,:), zeros(1,8)];
gamaW = [Id8(5,:), zeros(1,8)];

gamaVA = simplify(gamaV*A);
gamaVA2 = simplify(gamaVA*A);

dgamaVA2dt = simplify(diff(gamaVA2,t));
dgamaVAiMGdZT = [0, 0, 0, 0, 0, (dm*l2*tetap2^2*sin(alfa + teta2))/(Mb2 + dm), 0, 0, 0, 0, 0, 0, 0, -(2*dm*l2*tetap2*cos(alfa + teta2))/(Mb2 + dm), 0, 0];
dgamaVAiMFudZT = [(4*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^2) - (2*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*((L1^3*k1)/2 + k1*u2^3 + k2*u2^3 - k1*u1*u2^2 - k1*u1*u3^2 - k2*u1*u2^2 + k1*u2*u3^2 - 2*k1*u2^2*u3 - k2*u1*u3^2 + k2*u2*u3^2 - 2*k2*u2^2*u3 - k2*u1*vL^2 + k2*u2*vL^2 - k2*u1*wL^2 + k2*u2*wL^2 - L*L1^2*k1 + (L^2*L1*k1)/2 - L^2*k1*u1 - 2*L*k1*u2^2 + L^2*k1*u2 - L1^2*k1*u1 - L*k2*u2^2 + (5*L1*k1*u2^2)/2 + 2*L1^2*k1*u2 + (L1*k1*u3^2)/2 + 2*L1*k2*u2^2 - L1^2*k1*u3 + L1^2*k2*u2 + L1*k2*u3^2 - L1^2*k2*u3 + L1*k2*vL^2 + L1*k2*wL^2 + 2*L*k1*u1*u2 - 2*L*k1*u1*u3 + L*k2*u1*u2 - 2*L1*k1*u1*u2 + 2*L*k1*u2*u3 - L*k2*u1*u3 + 2*L1*k1*u1*u3 - L1*k2*u1*u2 + L*k2*u2*u3 - 3*L1*k1*u2*u3 + L1*k2*u1*u3 - 3*L1*k2*u2*u3 + 2*k1*u1*u2*u3 + 2*k2*u1*u2*u3 + 2*L*L1*k1*u1 - 3*L*L1*k1*u2 + L*L1*k1*u3 - L*L1*k2*u2 + L*L1*k2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), 0, (2*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*((L1^3*k1)/2 + (L1^3*k2)/2 + 2*k1*u2^3 + 2*k2*u2^3 - 3*k1*u1*u2^2 + k1*u1^2*u2 - k1*u1*u3^2 - k1*u1^2*u3 - 3*k2*u1*u2^2 + k2*u1^2*u2 + k1*u2*u3^2 - 3*k1*u2^2*u3 - k2*u1*u3^2 - k2*u1^2*u3 + k2*u2*u3^2 - 3*k2*u2^2*u3 + k1*u2*vL^2 - k2*u1*vL^2 - k1*u3*vL^2 + k2*u2*vL^2 + k1*u2*wL^2 - k2*u1*wL^2 - k1*u3*wL^2 + k2*u2*wL^2 - L*L1^2*k1 + (L^2*L1*k1)/2 - (L*L1^2*k2)/2 - L*k1*u1^2 - L^2*k1*u1 - 3*L*k1*u2^2 - (L*k2*u1^2)/2 + L1*k1*u1^2 + L^2*k1*u2 - 2*L1^2*k1*u1 - (3*L*k2*u2^2)/2 + (9*L1*k1*u2^2)/2 + (L1*k2*u1^2)/2 + 3*L1^2*k1*u2 - L1^2*k2*u1 + (L1*k1*u3^2)/2 + (9*L1*k2*u2^2)/2 - L1^2*k1*u3 + 3*L1^2*k2*u2 + L1*k2*u3^2 - 2*L1^2*k2*u3 - L*k1*vL^2 + L1*k1*vL^2 + L1*k2*vL^2 - L*k1*wL^2 + L1*k1*wL^2 + L1*k2*wL^2 + 4*L*k1*u1*u2 - 2*L*k1*u1*u3 + 2*L*k2*u1*u2 - 5*L1*k1*u1*u2 + 2*L*k1*u2*u3 - L*k2*u1*u3 + 3*L1*k1*u1*u3 - 4*L1*k2*u1*u2 + L*k2*u2*u3 - 4*L1*k1*u2*u3 + 3*L1*k2*u1*u3 - 5*L1*k2*u2*u3 + 4*k1*u1*u2*u3 + 4*k2*u1*u2*u3 + 3*L*L1*k1*u1 - 4*L*L1*k1*u2 + L*L1*k2*u1 + L*L1*k1*u3 - 2*L*L1*k2*u2 + L*L1*k2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (4*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3) - (4*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^2), (2*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*(k1*u2^2*vL + k2*u1^2*vL + k1*u3^2*vL + k2*u2^2*vL + L^2*k1*vL + L1^2*k1*vL + L1^2*k2*vL - 2*L*k1*u2*vL + 2*L*k1*u3*vL + 2*L1*k1*u2*vL - 2*L1*k2*u1*vL - 2*L1*k1*u3*vL + 2*L1*k2*u2*vL - 2*k2*u1*u2*vL - 2*k1*u2*u3*vL - 2*L*L1*k1*vL))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (2*(2*Ib2*dm + dm^2*l2^2 + 2*Ib2*Mb2 - dm^2*l2^2*cos(2*alfa + 2*teta2) + 2*Mb2*dm*l2^2)*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), (2*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*(k1*u2^2*wL + k2*u1^2*wL + k1*u3^2*wL + k2*u2^2*wL + L^2*k1*wL + L1^2*k1*wL + L1^2*k2*wL - 2*L*k1*u2*wL + 2*L*k1*u3*wL + 2*L1*k1*u2*wL - 2*L1*k2*u1*wL - 2*L1*k1*u3*wL + 2*L1*k2*u2*wL - 2*k2*u1*u2*wL - 2*k1*u2*u3*wL - 2*L*L1*k1*wL))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (2*dm^2*l2^2*sin(2*alfa + 2*teta2)*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), -(2*(2*dm^2*l2^2*wL*cos(2*alfa + 2*teta2) - 2*dm^2*l2^2*vL*sin(2*alfa + 2*teta2))*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), (2*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*(2*k1*u1*u2^2 - k1*u2^3 - k2*u2^3 - (L1^3*k2)/2 - k1*u1^2*u2 + k1*u1^2*u3 + 2*k2*u1*u2^2 - k2*u1^2*u2 + k1*u2^2*u3 + k2*u1^2*u3 + k2*u2^2*u3 - k1*u2*vL^2 + k1*u3*vL^2 - k1*u2*wL^2 + k1*u3*wL^2 + (L*L1^2*k2)/2 + L*k1*u1^2 + L*k1*u2^2 + (L*k2*u1^2)/2 - L1*k1*u1^2 + L1^2*k1*u1 + (L*k2*u2^2)/2 - 2*L1*k1*u2^2 - (L1*k2*u1^2)/2 - L1^2*k1*u2 + L1^2*k2*u1 - (5*L1*k2*u2^2)/2 - 2*L1^2*k2*u2 + L1^2*k2*u3 + L*k1*vL^2 - L1*k1*vL^2 + L*k1*wL^2 - L1*k1*wL^2 - 2*L*k1*u1*u2 - L*k2*u1*u2 + 3*L1*k1*u1*u2 - L1*k1*u1*u3 + 3*L1*k2*u1*u2 + L1*k1*u2*u3 - 2*L1*k2*u1*u3 + 2*L1*k2*u2*u3 - 2*k1*u1*u2*u3 - 2*k2*u1*u2*u3 - L*L1*k1*u1 + L*L1*k1*u2 - L*L1*k2*u1 + L*L1*k2*u2))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (4*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3), 0, 0, 0, 0, 0, 0, 0, 0, 0];
gamaVA3 = simplify(gamaVA2*A);
%{
diary ('gamaVA3.txt');
gamaVA3 % your symbolic variable
diary off
%}
gamaVA2iMG = simplify(gamaVA2*iMGz); %zero!
gamaVA2iMFu = simplify(gamaVA2*iMFuz); %zero!
gamaVA2Bb = simplify(gamaVA2*Bb); %zero!
dgamaVAiMGdZTA = simplify(dgamaVAiMGdZT*A);
%{
diary ('dgamaVAiMGdZTA.txt');
dgamaVAiMGdZTA % your symbolic variable
diary off
%}
dgamaVAiMGdZTiMG = simplify(dgamaVAiMGdZT*iMGz); %zero!
dgamaVAiMGdZTiMFu = simplify(dgamaVAiMGdZT*iMFuz);
%{
diary ('dgamaVAiMGdZTiMFu.txt');
dgamaVAiMGdZTiMFu % your symbolic variable
diary off
%}
dgamaVAiMGdZTBb = simplify(dgamaVAiMGdZT*Bb); %zero!
dgamaVAiMFudZTA = simplify(dgamaVAiMFudZT*A);
%{
diary ('dgamaVAiMFudZTA.txt');
dgamaVAiMFudZTA % your symbolic variable
diary off
%}
dgamaVAiMFudZTiMG = simplify(dgamaVAiMFudZT*iMGz); %zero!
dgamaVAiMFudZTiMFu = simplify(dgamaVAiMFudZT*iMFuz); %zero!
dgamaVAiMFudZTBb = simplify(dgamaVAiMFudZT*Bb); %zero!

gamaWA = simplify(gamaW*A);
gamaWA2 = simplify(gamaWA*A);

dgamaWA2dt = simplify(diff(gamaWA2,t));
%{
diary ('dgamaWA2dt.txt');
dgamaWA2dt % your symbolic variable
diary off
%}
dgamaWAiMGdZT = [0, 0, 0, 0, 0, -(dm*l2*tetap2^2*cos(alfa + teta2))/(Mb2 + dm), 0, 0, 0, 0, 0, 0, 0, -(2*dm*l2*tetap2*sin(alfa + teta2))/(Mb2 + dm), 0, 0];
dgamaWAiMFudZT = [(4*(Ib2*Mb2*wL + Ib2*dm*wL + Mb2*dm*l2^2*wL + dm^2*l2^2*wL*cos(alfa + teta2)^2 - (dm^2*l2^2*vL*sin(2*alfa + 2*teta2))/2)*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^2) - (2*(Ib2*Mb2*wL + Ib2*dm*wL + Mb2*dm*l2^2*wL + dm^2*l2^2*wL*cos(alfa + teta2)^2 - (dm^2*l2^2*vL*sin(2*alfa + 2*teta2))/2)*(L1^3*k1 + 2*k1*u2^3 + 2*k2*u2^3 - 2*k1*u1*u2^2 - 2*k1*u1*u3^2 - 2*k2*u1*u2^2 + 2*k1*u2*u3^2 - 4*k1*u2^2*u3 - 2*k2*u1*u3^2 + 2*k2*u2*u3^2 - 4*k2*u2^2*u3 - 2*k2*u1*vL^2 + 2*k2*u2*vL^2 - 2*k2*u1*wL^2 + 2*k2*u2*wL^2 - 2*L*L1^2*k1 + L^2*L1*k1 - 2*L^2*k1*u1 - 4*L*k1*u2^2 + 2*L^2*k1*u2 - 2*L1^2*k1*u1 - 2*L*k2*u2^2 + 5*L1*k1*u2^2 + 4*L1^2*k1*u2 + L1*k1*u3^2 + 4*L1*k2*u2^2 - 2*L1^2*k1*u3 + 2*L1^2*k2*u2 + 2*L1*k2*u3^2 - 2*L1^2*k2*u3 + 2*L1*k2*vL^2 + 2*L1*k2*wL^2 + 4*L*k1*u1*u2 - 4*L*k1*u1*u3 + 2*L*k2*u1*u2 - 4*L1*k1*u1*u2 + 4*L*k1*u2*u3 - 2*L*k2*u1*u3 + 4*L1*k1*u1*u3 - 2*L1*k2*u1*u2 + 2*L*k2*u2*u3 - 6*L1*k1*u2*u3 + 2*L1*k2*u1*u3 - 6*L1*k2*u2*u3 + 4*k1*u1*u2*u3 + 4*k2*u1*u2*u3 + 4*L*L1*k1*u1 - 6*L*L1*k1*u2 + 2*L*L1*k1*u3 - 2*L*L1*k2*u2 + 2*L*L1*k2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), 0, (2*(Ib2*Mb2*wL + Ib2*dm*wL + Mb2*dm*l2^2*wL + dm^2*l2^2*wL*cos(alfa + teta2)^2 - (dm^2*l2^2*vL*sin(2*alfa + 2*teta2))/2)*(L1^3*k1 + L1^3*k2 + 4*k1*u2^3 + 4*k2*u2^3 - 6*k1*u1*u2^2 + 2*k1*u1^2*u2 - 2*k1*u1*u3^2 - 2*k1*u1^2*u3 - 6*k2*u1*u2^2 + 2*k2*u1^2*u2 + 2*k1*u2*u3^2 - 6*k1*u2^2*u3 - 2*k2*u1*u3^2 - 2*k2*u1^2*u3 + 2*k2*u2*u3^2 - 6*k2*u2^2*u3 + 2*k1*u2*vL^2 - 2*k2*u1*vL^2 - 2*k1*u3*vL^2 + 2*k2*u2*vL^2 + 2*k1*u2*wL^2 - 2*k2*u1*wL^2 - 2*k1*u3*wL^2 + 2*k2*u2*wL^2 - 2*L*L1^2*k1 + L^2*L1*k1 - L*L1^2*k2 - 2*L*k1*u1^2 - 2*L^2*k1*u1 - 6*L*k1*u2^2 - L*k2*u1^2 + 2*L1*k1*u1^2 + 2*L^2*k1*u2 - 4*L1^2*k1*u1 - 3*L*k2*u2^2 + 9*L1*k1*u2^2 + L1*k2*u1^2 + 6*L1^2*k1*u2 - 2*L1^2*k2*u1 + L1*k1*u3^2 + 9*L1*k2*u2^2 - 2*L1^2*k1*u3 + 6*L1^2*k2*u2 + 2*L1*k2*u3^2 - 4*L1^2*k2*u3 - 2*L*k1*vL^2 + 2*L1*k1*vL^2 + 2*L1*k2*vL^2 - 2*L*k1*wL^2 + 2*L1*k1*wL^2 + 2*L1*k2*wL^2 + 8*L*k1*u1*u2 - 4*L*k1*u1*u3 + 4*L*k2*u1*u2 - 10*L1*k1*u1*u2 + 4*L*k1*u2*u3 - 2*L*k2*u1*u3 + 6*L1*k1*u1*u3 - 8*L1*k2*u1*u2 + 2*L*k2*u2*u3 - 8*L1*k1*u2*u3 + 6*L1*k2*u1*u3 - 10*L1*k2*u2*u3 + 8*k1*u1*u2*u3 + 8*k2*u1*u2*u3 + 6*L*L1*k1*u1 - 8*L*L1*k1*u2 + 2*L*L1*k2*u1 + 2*L*L1*k1*u3 - 4*L*L1*k2*u2 + 2*L*L1*k2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (4*(Ib2*Mb2*wL + Ib2*dm*wL + Mb2*dm*l2^2*wL + dm^2*l2^2*wL*cos(alfa + teta2)^2 - (dm^2*l2^2*vL*sin(2*alfa + 2*teta2))/2)*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3) - (4*(Ib2*Mb2*wL + Ib2*dm*wL + Mb2*dm*l2^2*wL + dm^2*l2^2*wL*cos(alfa + teta2)^2 - (dm^2*l2^2*vL*sin(2*alfa + 2*teta2))/2)*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^2), (2*(Ib2*Mb2*wL + Ib2*dm*wL + Mb2*dm*l2^2*wL + dm^2*l2^2*wL*cos(alfa + teta2)^2 - (dm^2*l2^2*vL*sin(2*alfa + 2*teta2))/2)*(2*k1*u2^2*vL + 2*k2*u1^2*vL + 2*k1*u3^2*vL + 2*k2*u2^2*vL + 2*L^2*k1*vL + 2*L1^2*k1*vL + 2*L1^2*k2*vL - 4*L*k1*u2*vL + 4*L*k1*u3*vL + 4*L1*k1*u2*vL - 4*L1*k2*u1*vL - 4*L1*k1*u3*vL + 4*L1*k2*u2*vL - 4*k2*u1*u2*vL - 4*k1*u2*u3*vL - 4*L*L1*k1*vL))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (dm^2*l2^2*sin(2*alfa + 2*teta2)*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), (2*(dm^2*l2^2*cos(alfa + teta2)^2 + Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (2*(Ib2*Mb2*wL + Ib2*dm*wL + Mb2*dm*l2^2*wL + dm^2*l2^2*wL*cos(alfa + teta2)^2 - (dm^2*l2^2*vL*sin(2*alfa + 2*teta2))/2)*(2*k1*u2^2*wL + 2*k2*u1^2*wL + 2*k1*u3^2*wL + 2*k2*u2^2*wL + 2*L^2*k1*wL + 2*L1^2*k1*wL + 2*L1^2*k2*wL - 4*L*k1*u2*wL + 4*L*k1*u3*wL + 4*L1*k1*u2*wL - 4*L1*k2*u1*wL - 4*L1*k1*u3*wL + 4*L1*k2*u2*wL - 4*k2*u1*u2*wL - 4*k1*u2*u3*wL - 4*L*L1*k1*wL))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), -(2*(dm^2*l2^2*vL*cos(2*alfa + 2*teta2) + 2*dm^2*l2^2*wL*cos(alfa + teta2)*sin(alfa + teta2))*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), (2*(Ib2*Mb2*wL + Ib2*dm*wL + Mb2*dm*l2^2*wL + dm^2*l2^2*wL*cos(alfa + teta2)^2 - (dm^2*l2^2*vL*sin(2*alfa + 2*teta2))/2)*(4*k1*u1*u2^2 - 2*k1*u2^3 - 2*k2*u2^3 - L1^3*k2 - 2*k1*u1^2*u2 + 2*k1*u1^2*u3 + 4*k2*u1*u2^2 - 2*k2*u1^2*u2 + 2*k1*u2^2*u3 + 2*k2*u1^2*u3 + 2*k2*u2^2*u3 - 2*k1*u2*vL^2 + 2*k1*u3*vL^2 - 2*k1*u2*wL^2 + 2*k1*u3*wL^2 + L*L1^2*k2 + 2*L*k1*u1^2 + 2*L*k1*u2^2 + L*k2*u1^2 - 2*L1*k1*u1^2 + 2*L1^2*k1*u1 + L*k2*u2^2 - 4*L1*k1*u2^2 - L1*k2*u1^2 - 2*L1^2*k1*u2 + 2*L1^2*k2*u1 - 5*L1*k2*u2^2 - 4*L1^2*k2*u2 + 2*L1^2*k2*u3 + 2*L*k1*vL^2 - 2*L1*k1*vL^2 + 2*L*k1*wL^2 - 2*L1*k1*wL^2 - 4*L*k1*u1*u2 - 2*L*k2*u1*u2 + 6*L1*k1*u1*u2 - 2*L1*k1*u1*u3 + 6*L1*k2*u1*u2 + 2*L1*k1*u2*u3 - 4*L1*k2*u1*u3 + 4*L1*k2*u2*u3 - 4*k1*u1*u2*u3 - 4*k2*u1*u2*u3 - 2*L*L1*k1*u1 + 2*L*L1*k1*u2 - 2*L*L1*k2*u1 + 2*L*L1*k2*u2))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (4*(Ib2*Mb2*wL + Ib2*dm*wL + Mb2*dm*l2^2*wL + dm^2*l2^2*wL*cos(alfa + teta2)^2 - (dm^2*l2^2*vL*sin(2*alfa + 2*teta2))/2)*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3), 0, 0, 0, 0, 0, 0, 0, 0, 0];
gamaWA3 = simplify(gamaWA2*A);
%{
diary ('gamaWA3.txt');
gamaWA3 % your symbolic variable
diary off
%}
gamaWA2iMG = simplify(gamaWA2*iMGz); %zero!
gamaWA2iMFu = simplify(gamaWA2*iMFuz); %zero!
gamaWA2Bb = simplify(gamaWA2*Bb); %zero!
dgamaWAiMGdZTA = simplify(dgamaWAiMGdZT*A);
%{
diary ('dgamaWAiMGdZTA.txt');
dgamaWAiMGdZTA % your symbolic variable
diary off
%}
dgamaWAiMGdZTiMG = simplify(dgamaWAiMGdZT*iMGz); %zero!
dgamaWAiMGdZTiMFu = simplify(dgamaWAiMGdZT*iMFuz);
%{
diary ('dgamaWAiMGdZTiMFu.txt');
dgamaWAiMGdZTiMFu % your symbolic variable
diary off
%}
dgamaWAiMGdZTBb = simplify(dgamaWAiMGdZT*Bb); %zero!
dgamaWAiMFudZTA = simplify(dgamaWAiMFudZT*A);
%{
diary ('dgamaWAiMFudZTA.txt');
dgamaWAiMFudZTA % your symbolic variable
diary off
%}
dgamaWAiMFudZTiMG = simplify(dgamaWAiMFudZT*iMGz); %zero!
dgamaWAiMFudZTiMFu = simplify(dgamaWAiMFudZT*iMFuz); %zero!
dgamaWAiMFudZTBb = simplify(dgamaWAiMFudZT*Bb); %zero!

disp('ping_01')
dgamaVA3dt = simplify(diff(gamaVA3,t));
%{
diary ('dgamaVA3dt.txt');
dgamaVA3dt % your symbolic variable
diary off
%}
gamaVA4 = simplify(gamaVA3*A);
%{
diary ('gamaVA4.txt');
gamaVA4 % your symbolic variable
diary off
%}
gamaVA3Gz = simplify(gamaVA3*iMGz);
%{
diary ('gamaVA3Gz.txt');
gamaVA3Gz % your symbolic variable
diary off
%}
gamaVA3Fuz = simplify(gamaVA3*iMFuz);
%{
diary ('gamaVA3Fuz.txt');
gamaVA3Fuz % your symbolic variable
diary off
%}
gamaVA3Bb = simplify(gamaVA3*Bb);
%{
diary ('gamaVA3Bb.txt');
gamaVA3Bb % your symbolic variable
diary off
%}
disp('ping_02')
ddgamaVAiMGdZTAZdZT = [0, -(2*K1*dm*l2*tetap2*cos(alfa + teta2))/(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2), 0, 0, 0, (dm*l2*tetap2^3*cos(alfa + teta2))/(Mb2 + dm) + (2*dm*l2*tetap2*cos(alfa + teta2)*(K1 + K2))/(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2) - (2*dm*l2*teta2*tetap2*sin(alfa + teta2)*(K1 + K2))/(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2) + (2*K1*dm*l2*teta1*tetap2*sin(alfa + teta2))/(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2) + (2*K2*dm*l2*teta3*tetap2*sin(alfa + teta2))/(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2), 0, -(2*K2*dm*l2*tetap2*cos(alfa + teta2))/(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2), 0, 0, 0, 0, 0, (3*dm*l2*sin(alfa + teta2)*tetap2^2)/(Mb2 + dm) - (2*K1*dm*l2*teta1*cos(alfa + teta2))/(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2) - (2*K2*dm*l2*teta3*cos(alfa + teta2))/(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2) + (2*dm*l2*teta2*cos(alfa + teta2)*(K1 + K2))/(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2), 0, 0];
ddgamaVAiMGdZTAZdZTA = simplify(ddgamaVAiMGdZTAZdZT*A);
%{
diary ('ddgamaVAiMGdZTAZdZTA.txt');
ddgamaVAiMGdZTAZdZTA % your symbolic variable
diary off
%} 
ddgamaVAiMGdZTAZdZTiMG = simplify(ddgamaVAiMGdZTAZdZT*iMGz);
%{
diary ('ddgamaVAiMGdZTAZdZTiMG.txt');
ddgamaVAiMGdZTAZdZTiMG % your symbolic variable
diary off
%}
ddgamaVAiMGdZTAZdZTiMFu = simplify(ddgamaVAiMGdZTAZdZT*iMFuz);
%{
diary ('ddgamaVAiMGdZTAZdZTiMFu.txt');
ddgamaVAiMGdZTAZdZTiMFu % your symbolic variable
diary off
%}
ddgamaVAiMGdZTAZdZTBb = simplify(ddgamaVAiMGdZTAZdZT*Bb);
%{
diary ('ddgamaVAiMGdZTAZdZTBb.txt');
ddgamaVAiMGdZTAZdZTBb % your symbolic variable
diary off
%}
disp('ping_03')
ddgamaVAiMFudZTAZdZT = [wpL*((4*wL*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*(L^2*k1 + L1^2*k1 + L1^2*k2 + k1*u2^2 + k2*u1^2 + k1*u3^2 + k2*u2^2 - 2*L*L1*k1 - 2*L*k1*u2 + 2*L*k1*u3 + 2*L1*k1*u2 - 2*L1*k2*u1 - 2*L1*k1*u3 + 2*L1*k2*u2 - 2*k2*u1*u2 - 2*k1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^2) - (2*wL*(2*L1*k2 - 2*k2*u1 + 2*k2*u2)*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2)))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (2*dm^2*l2^2*sin(2*alfa + 2*teta2)*((L1^3*k1)/2 + k1*u2^3 + k2*u2^3 - k1*u1*u2^2 - k1*u1*u3^2 - k2*u1*u2^2 + k1*u2*u3^2 - 2*k1*u2^2*u3 - k2*u1*u3^2 + k2*u2*u3^2 - 2*k2*u2^2*u3 - k2*u1*vL^2 + k2*u2*vL^2 - k2*u1*wL^2 + k2*u2*wL^2 - L*L1^2*k1 + (L^2*L1*k1)/2 - L^2*k1*u1 - 2*L*k1*u2^2 + L^2*k1*u2 - L1^2*k1*u1 - L*k2*u2^2 + (5*L1*k1*u2^2)/2 + 2*L1^2*k1*u2 + (L1*k1*u3^2)/2 + 2*L1*k2*u2^2 - L1^2*k1*u3 + L1^2*k2*u2 + L1*k2*u3^2 - L1^2*k2*u3 + L1*k2*vL^2 + L1*k2*wL^2 + 2*L*k1*u1*u2 - 2*L*k1*u1*u3 + L*k2*u1*u2 - 2*L1*k1*u1*u2 + 2*L*k1*u2*u3 - L*k2*u1*u3 + 2*L1*k1*u1*u3 - L1*k2*u1*u2 + L*k2*u2*u3 - 3*L1*k1*u2*u3 + L1*k2*u1*u3 - 3*L1*k2*u2*u3 + 2*k1*u1*u2*u3 + 2*k2*u1*u2*u3 + 2*L*L1*k1*u1 - 3*L*L1*k1*u2 + L*L1*k1*u3 - L*L1*k2*u2 + L*L1*k2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (4*dm^2*l2^2*sin(2*alfa + 2*teta2)*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^2)) - vpL*((2*(2*Ib2*dm + dm^2*l2^2 + 2*Ib2*Mb2 - dm^2*l2^2*cos(2*alfa + 2*teta2) + 2*Mb2*dm*l2^2)*((L1^3*k1)/2 + k1*u2^3 + k2*u2^3 - k1*u1*u2^2 - k1*u1*u3^2 - k2*u1*u2^2 + k1*u2*u3^2 - 2*k1*u2^2*u3 - k2*u1*u3^2 + k2*u2*u3^2 - 2*k2*u2^2*u3 - k2*u1*vL^2 + k2*u2*vL^2 - k2*u1*wL^2 + k2*u2*wL^2 - L*L1^2*k1 + (L^2*L1*k1)/2 - L^2*k1*u1 - 2*L*k1*u2^2 + L^2*k1*u2 - L1^2*k1*u1 - L*k2*u2^2 + (5*L1*k1*u2^2)/2 + 2*L1^2*k1*u2 + (L1*k1*u3^2)/2 + 2*L1*k2*u2^2 - L1^2*k1*u3 + L1^2*k2*u2 + L1*k2*u3^2 - L1^2*k2*u3 + L1*k2*vL^2 + L1*k2*wL^2 + 2*L*k1*u1*u2 - 2*L*k1*u1*u3 + L*k2*u1*u2 - 2*L1*k1*u1*u2 + 2*L*k1*u2*u3 - L*k2*u1*u3 + 2*L1*k1*u1*u3 - L1*k2*u1*u2 + L*k2*u2*u3 - 3*L1*k1*u2*u3 + L1*k2*u1*u3 - 3*L1*k2*u2*u3 + 2*k1*u1*u2*u3 + 2*k2*u1*u2*u3 + 2*L*L1*k1*u1 - 3*L*L1*k1*u2 + L*L1*k1*u3 - L*L1*k2*u2 + L*L1*k2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (4*(2*Ib2*dm + dm^2*l2^2 + 2*Ib2*Mb2 - dm^2*l2^2*cos(2*alfa + 2*teta2) + 2*Mb2*dm*l2^2)*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^2) - (4*vL*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*(L^2*k1 + L1^2*k1 + L1^2*k2 + k1*u2^2 + k2*u1^2 + k1*u3^2 + k2*u2^2 - 2*L*L1*k1 - 2*L*k1*u2 + 2*L*k1*u3 + 2*L1*k1*u2 - 2*L1*k2*u1 - 2*L1*k1*u3 + 2*L1*k2*u2 - 2*k2*u1*u2 - 2*k1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^2) + (2*vL*(2*L1*k2 - 2*k2*u1 + 2*k2*u2)*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2)))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2)) - (up2*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*(6*L1^2*k2*vL^2 - 3*L1^4*k2 - 3*L^2*L1^2*k1 - 3*L^2*L1^2*k2 - 3*L^2*k2*u1^2 - 3*L^2*k2*u2^2 - 3*L1^2*k1*u2^2 - 3*L1^2*k2*u1^2 - 3*L1^2*k1*u3^2 - 9*L1^2*k2*u2^2 - L1^4*k1 + 6*L1^2*k2*wL^2 + 6*k2*u1^2*vL^2 + 6*k2*u2^2*vL^2 + 6*k2*u1^2*wL^2 + 6*k2*u2^2*wL^2 + 3*L*L1^3*k1 + L^3*L1*k1 + 6*L*L1^3*k2 + 3*L*k2*u2^3 - L1*k1*u2^3 - 3*L1^3*k1*u2 + 6*L1^3*k2*u1 + L1*k1*u3^3 - 3*L1*k2*u2^3 + 3*L1^3*k1*u3 - 9*L1^3*k2*u2 + 3*L1^3*k2*u3 + 3*L*L1*k1*u2^2 + 6*L*L1*k2*u1^2 + 6*L*L1^2*k1*u2 - 12*L*L1^2*k2*u1 - 3*L^2*L1*k1*u2 + 6*L^2*L1*k2*u1 + 3*L*L1*k1*u3^2 + 12*L*L1*k2*u2^2 - 6*L*L1^2*k1*u3 + 15*L*L1^2*k2*u2 + 3*L^2*L1*k1*u3 - 6*L^2*L1*k2*u2 - 3*L*L1^2*k2*u3 - 6*L*k2*u1*u2^2 + 3*L*k2*u1^2*u2 + 6*L^2*k2*u1*u2 - 3*L*k2*u1^2*u3 + 6*L1*k2*u1*u2^2 - 3*L1*k2*u1^2*u2 + 12*L1^2*k2*u1*u2 - 3*L*k2*u2^2*u3 - 3*L1*k1*u2*u3^2 + 3*L1*k1*u2^2*u3 + 3*L1*k2*u1^2*u3 + 6*L1^2*k1*u2*u3 - 6*L1^2*k2*u1*u3 + 3*L1*k2*u2^2*u3 + 6*L1^2*k2*u2*u3 - 12*L1*k2*u1*vL^2 + 12*L1*k2*u2*vL^2 - 12*L1*k2*u1*wL^2 + 12*L1*k2*u2*wL^2 - 12*k2*u1*u2*vL^2 - 12*k2*u1*u2*wL^2 - 18*L*L1*k2*u1*u2 - 6*L*L1*k1*u2*u3 + 6*L*L1*k2*u1*u3 - 6*L*L1*k2*u2*u3 + 6*L*k2*u1*u2*u3 - 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^3) + (3*up2*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*(L^3*L1^2*k1 - L1^5*k2 - 3*L^2*L1^3*k1 - L1^5*k1 - L^2*L1^3*k2 + L^2*k2*u1^3 - L^2*k2*u2^3 - 4*L1^2*k1*u2^3 + L1^2*k2*u1^3 - 6*L1^3*k1*u2^2 - 3*L1^3*k2*u1^2 + L1^2*k1*u3^3 - 4*L1^2*k2*u2^3 - 3*L1^3*k1*u3^2 - 6*L1^3*k2*u2^2 - 2*L^3*k1*vL^2 + 2*L1^3*k1*vL^2 + 2*L1^3*k2*vL^2 - 2*L^3*k1*wL^2 + 2*L1^3*k1*wL^2 + 2*L1^3*k2*wL^2 + 2*k1*u2^3*vL^2 - 2*k2*u1^3*vL^2 - 2*k1*u3^3*vL^2 + 2*k2*u2^3*vL^2 + 2*k1*u2^3*wL^2 - 2*k2*u1^3*wL^2 - 2*k1*u3^3*wL^2 + 2*k2*u2^3*wL^2 + 3*L*L1^4*k1 + 2*L*L1^4*k2 + L1^4*k1*u1 + L*k2*u2^4 - L1*k1*u2^4 - 4*L1^4*k1*u2 + 3*L1^4*k2*u1 - L1*k2*u2^4 + 3*L1^4*k1*u3 - 4*L1^4*k2*u2 + L1^4*k2*u3 - 3*L*L1^3*k1*u1 - L^3*L1*k1*u1 + 3*L*L1*k1*u2^3 - 2*L*L1*k2*u1^3 + 9*L*L1^3*k1*u2 - 6*L*L1^3*k2*u1 + L^3*L1*k1*u2 + 5*L*L1*k2*u2^3 - 6*L*L1^3*k1*u3 + 7*L*L1^3*k2*u2 - L*L1^3*k2*u3 - 3*L*k2*u1*u2^3 - L*k2*u1^3*u2 + L1*k1*u1*u2^3 + 3*L1^3*k1*u1*u2 + L*k2*u1^3*u3 - L1*k1*u1*u3^3 + 3*L1*k2*u1*u2^3 + L1*k2*u1^3*u2 - 3*L1^3*k1*u1*u3 + 9*L1^3*k2*u1*u2 - L*k2*u2^3*u3 + L1*k1*u2*u3^3 + 3*L1*k1*u2^3*u3 - L1*k2*u1^3*u3 + 9*L1^3*k1*u2*u3 - 3*L1^3*k2*u1*u3 + L1*k2*u2^3*u3 + 3*L1^3*k2*u2*u3 + 3*L^2*L1^2*k1*u1 + 9*L*L1^2*k1*u2^2 + 6*L*L1^2*k2*u1^2 - 3*L^2*L1*k1*u2^2 - 3*L^2*L1*k2*u1^2 - 6*L^2*L1^2*k1*u2 + 3*L^2*L1^2*k2*u1 + 3*L*L1^2*k1*u3^2 + 9*L*L1^2*k2*u2^2 - 3*L^2*L1*k2*u2^2 + 3*L^2*L1^2*k1*u3 - 3*L^2*L1^2*k2*u2 - 6*L*L1^2*k1*vL^2 + 6*L^2*L1*k1*vL^2 - 6*L*L1^2*k1*wL^2 + 6*L^2*L1*k1*wL^2 + 3*L*k2*u1^2*u2^2 + 3*L^2*k2*u1*u2^2 - 3*L^2*k2*u1^2*u2 + 3*L1^2*k1*u1*u2^2 - 3*L1*k2*u1^2*u2^2 + 3*L1^2*k1*u1*u3^2 + 9*L1^2*k2*u1*u2^2 - 6*L1^2*k2*u1^2*u2 - 3*L1*k1*u2^2*u3^2 - 6*L1^2*k1*u2*u3^2 + 9*L1^2*k1*u2^2*u3 + 3*L1^2*k2*u1^2*u3 + 3*L1^2*k2*u2^2*u3 - 6*L*k1*u2^2*vL^2 + 6*L^2*k1*u2*vL^2 - 6*L*k1*u3^2*vL^2 + 6*L1*k1*u2^2*vL^2 + 6*L1*k2*u1^2*vL^2 - 6*L^2*k1*u3*vL^2 + 6*L1^2*k1*u2*vL^2 - 6*L1^2*k2*u1*vL^2 + 6*L1*k1*u3^2*vL^2 + 6*L1*k2*u2^2*vL^2 - 6*L1^2*k1*u3*vL^2 + 6*L1^2*k2*u2*vL^2 - 6*L*k1*u2^2*wL^2 + 6*L^2*k1*u2*wL^2 - 6*L*k1*u3^2*wL^2 + 6*L1*k1*u2^2*wL^2 + 6*L1*k2*u1^2*wL^2 - 6*L^2*k1*u3*wL^2 + 6*L1^2*k1*u2*wL^2 - 6*L1^2*k2*u1*wL^2 + 6*L1*k1*u3^2*wL^2 + 6*L1*k2*u2^2*wL^2 - 6*L1^2*k1*u3*wL^2 + 6*L1^2*k2*u2*wL^2 - 6*k2*u1*u2^2*vL^2 + 6*k2*u1^2*u2*vL^2 + 6*k1*u2*u3^2*vL^2 - 6*k1*u2^2*u3*vL^2 - 6*k2*u1*u2^2*wL^2 + 6*k2*u1^2*u2*wL^2 + 6*k1*u2*u3^2*wL^2 - 6*k1*u2^2*u3*wL^2 - 3*L*L1*k1*u1*u2^2 - 6*L*L1^2*k1*u1*u2 + 3*L^2*L1*k1*u1*u2 - 3*L*L1*k1*u1*u3^2 - 12*L*L1*k2*u1*u2^2 + 9*L*L1*k2*u1^2*u2 + 6*L*L1^2*k1*u1*u3 - 15*L*L1^2*k2*u1*u2 - 3*L^2*L1*k1*u1*u3 + 6*L^2*L1*k2*u1*u2 + 3*L*L1*k1*u2*u3^2 - 6*L*L1*k1*u2^2*u3 - 3*L*L1*k2*u1^2*u3 - 12*L*L1^2*k1*u2*u3 + 3*L*L1^2*k2*u1*u3 + 3*L^2*L1*k1*u2*u3 - 3*L*L1*k2*u2^2*u3 - 3*L*L1^2*k2*u2*u3 - 12*L*L1*k1*u2*vL^2 + 12*L*L1*k1*u3*vL^2 - 12*L*L1*k1*u2*wL^2 + 12*L*L1*k1*u3*wL^2 + 3*L*k2*u1*u2^2*u3 - 3*L*k2*u1^2*u2*u3 + 3*L1*k1*u1*u2*u3^2 - 3*L1*k1*u1*u2^2*u3 - 6*L1^2*k1*u1*u2*u3 - 3*L1*k2*u1*u2^2*u3 + 3*L1*k2*u1^2*u2*u3 - 6*L1^2*k2*u1*u2*u3 + 12*L*k1*u2*u3*vL^2 - 12*L1*k2*u1*u2*vL^2 - 12*L1*k1*u2*u3*vL^2 + 12*L*k1*u2*u3*wL^2 - 12*L1*k2*u1*u2*wL^2 - 12*L1*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2*u3 + 6*L*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^4*(L - L1 - u2 + u3)^3) + (3*k1*up1*(L1*u1 - L1*u2 - L1^2 + 2*vL^2 + 2*wL^2)*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2)))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^4) + (L1*k1*up1*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2)))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3) + (4*dm^2*l2^2*tetap2*(wL*cos(2*alfa + 2*teta2) - vL*sin(2*alfa + 2*teta2))*((L1^3*k1)/2 + k1*u2^3 + k2*u2^3 - k1*u1*u2^2 - k1*u1*u3^2 - k2*u1*u2^2 + k1*u2*u3^2 - 2*k1*u2^2*u3 - k2*u1*u3^2 + k2*u2*u3^2 - 2*k2*u2^2*u3 - k2*u1*vL^2 + k2*u2*vL^2 - k2*u1*wL^2 + k2*u2*wL^2 - L*L1^2*k1 + (L^2*L1*k1)/2 - L^2*k1*u1 - 2*L*k1*u2^2 + L^2*k1*u2 - L1^2*k1*u1 - L*k2*u2^2 + (5*L1*k1*u2^2)/2 + 2*L1^2*k1*u2 + (L1*k1*u3^2)/2 + 2*L1*k2*u2^2 - L1^2*k1*u3 + L1^2*k2*u2 + L1*k2*u3^2 - L1^2*k2*u3 + L1*k2*vL^2 + L1*k2*wL^2 + 2*L*k1*u1*u2 - 2*L*k1*u1*u3 + L*k2*u1*u2 - 2*L1*k1*u1*u2 + 2*L*k1*u2*u3 - L*k2*u1*u3 + 2*L1*k1*u1*u3 - L1*k2*u1*u2 + L*k2*u2*u3 - 3*L1*k1*u2*u3 + L1*k2*u1*u3 - 3*L1*k2*u2*u3 + 2*k1*u1*u2*u3 + 2*k2*u1*u2*u3 + 2*L*L1*k1*u1 - 3*L*L1*k1*u2 + L*L1*k1*u3 - L*L1*k2*u2 + L*L1*k2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (8*dm^2*l2^2*tetap2*(wL*cos(2*alfa + 2*teta2) - vL*sin(2*alfa + 2*teta2))*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^2), 0, wpL*((4*wL*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*(L^2*k1 + L1^2*k1 + L1^2*k2 + k1*u2^2 + k2*u1^2 + k1*u3^2 + k2*u2^2 - 2*L*L1*k1 - 2*L*k1*u2 + 2*L*k1*u3 + 2*L1*k1*u2 - 2*L1*k2*u1 - 2*L1*k1*u3 + 2*L1*k2*u2 - 2*k2*u1*u2 - 2*k1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3) - (4*wL*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*(L^2*k1 + L1^2*k1 + L1^2*k2 + k1*u2^2 + k2*u1^2 + k1*u3^2 + k2*u2^2 - 2*L*L1*k1 - 2*L*k1*u2 + 2*L*k1*u3 + 2*L1*k1*u2 - 2*L1*k2*u1 - 2*L1*k1*u3 + 2*L1*k2*u2 - 2*k2*u1*u2 - 2*k1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^2) + (2*wL*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*(2*L1*k1 - 2*L*k1 + 2*L1*k2 + 2*k1*u2 - 2*k2*u1 - 2*k1*u3 + 2*k2*u2))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (2*dm^2*l2^2*sin(2*alfa + 2*teta2)*((L1^3*k1)/2 + (L1^3*k2)/2 + 2*k1*u2^3 + 2*k2*u2^3 - 3*k1*u1*u2^2 + k1*u1^2*u2 - k1*u1*u3^2 - k1*u1^2*u3 - 3*k2*u1*u2^2 + k2*u1^2*u2 + k1*u2*u3^2 - 3*k1*u2^2*u3 - k2*u1*u3^2 - k2*u1^2*u3 + k2*u2*u3^2 - 3*k2*u2^2*u3 + k1*u2*vL^2 - k2*u1*vL^2 - k1*u3*vL^2 + k2*u2*vL^2 + k1*u2*wL^2 - k2*u1*wL^2 - k1*u3*wL^2 + k2*u2*wL^2 - L*L1^2*k1 + (L^2*L1*k1)/2 - (L*L1^2*k2)/2 - L*k1*u1^2 - L^2*k1*u1 - 3*L*k1*u2^2 - (L*k2*u1^2)/2 + L1*k1*u1^2 + L^2*k1*u2 - 2*L1^2*k1*u1 - (3*L*k2*u2^2)/2 + (9*L1*k1*u2^2)/2 + (L1*k2*u1^2)/2 + 3*L1^2*k1*u2 - L1^2*k2*u1 + (L1*k1*u3^2)/2 + (9*L1*k2*u2^2)/2 - L1^2*k1*u3 + 3*L1^2*k2*u2 + L1*k2*u3^2 - 2*L1^2*k2*u3 - L*k1*vL^2 + L1*k1*vL^2 + L1*k2*vL^2 - L*k1*wL^2 + L1*k1*wL^2 + L1*k2*wL^2 + 4*L*k1*u1*u2 - 2*L*k1*u1*u3 + 2*L*k2*u1*u2 - 5*L1*k1*u1*u2 + 2*L*k1*u2*u3 - L*k2*u1*u3 + 3*L1*k1*u1*u3 - 4*L1*k2*u1*u2 + L*k2*u2*u3 - 4*L1*k1*u2*u3 + 3*L1*k2*u1*u3 - 5*L1*k2*u2*u3 + 4*k1*u1*u2*u3 + 4*k2*u1*u2*u3 + 3*L*L1*k1*u1 - 4*L*L1*k1*u2 + L*L1*k2*u1 + L*L1*k1*u3 - 2*L*L1*k2*u2 + L*L1*k2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (4*dm^2*l2^2*sin(2*alfa + 2*teta2)*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3) + (4*dm^2*l2^2*sin(2*alfa + 2*teta2)*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^2)) + vpL*((2*(2*Ib2*dm + dm^2*l2^2 + 2*Ib2*Mb2 - dm^2*l2^2*cos(2*alfa + 2*teta2) + 2*Mb2*dm*l2^2)*((L1^3*k1)/2 + (L1^3*k2)/2 + 2*k1*u2^3 + 2*k2*u2^3 - 3*k1*u1*u2^2 + k1*u1^2*u2 - k1*u1*u3^2 - k1*u1^2*u3 - 3*k2*u1*u2^2 + k2*u1^2*u2 + k1*u2*u3^2 - 3*k1*u2^2*u3 - k2*u1*u3^2 - k2*u1^2*u3 + k2*u2*u3^2 - 3*k2*u2^2*u3 + k1*u2*vL^2 - k2*u1*vL^2 - k1*u3*vL^2 + k2*u2*vL^2 + k1*u2*wL^2 - k2*u1*wL^2 - k1*u3*wL^2 + k2*u2*wL^2 - L*L1^2*k1 + (L^2*L1*k1)/2 - (L*L1^2*k2)/2 - L*k1*u1^2 - L^2*k1*u1 - 3*L*k1*u2^2 - (L*k2*u1^2)/2 + L1*k1*u1^2 + L^2*k1*u2 - 2*L1^2*k1*u1 - (3*L*k2*u2^2)/2 + (9*L1*k1*u2^2)/2 + (L1*k2*u1^2)/2 + 3*L1^2*k1*u2 - L1^2*k2*u1 + (L1*k1*u3^2)/2 + (9*L1*k2*u2^2)/2 - L1^2*k1*u3 + 3*L1^2*k2*u2 + L1*k2*u3^2 - 2*L1^2*k2*u3 - L*k1*vL^2 + L1*k1*vL^2 + L1*k2*vL^2 - L*k1*wL^2 + L1*k1*wL^2 + L1*k2*wL^2 + 4*L*k1*u1*u2 - 2*L*k1*u1*u3 + 2*L*k2*u1*u2 - 5*L1*k1*u1*u2 + 2*L*k1*u2*u3 - L*k2*u1*u3 + 3*L1*k1*u1*u3 - 4*L1*k2*u1*u2 + L*k2*u2*u3 - 4*L1*k1*u2*u3 + 3*L1*k2*u1*u3 - 5*L1*k2*u2*u3 + 4*k1*u1*u2*u3 + 4*k2*u1*u2*u3 + 3*L*L1*k1*u1 - 4*L*L1*k1*u2 + L*L1*k2*u1 + L*L1*k1*u3 - 2*L*L1*k2*u2 + L*L1*k2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (4*(2*Ib2*dm + dm^2*l2^2 + 2*Ib2*Mb2 - dm^2*l2^2*cos(2*alfa + 2*teta2) + 2*Mb2*dm*l2^2)*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3) - (4*(2*Ib2*dm + dm^2*l2^2 + 2*Ib2*Mb2 - dm^2*l2^2*cos(2*alfa + 2*teta2) + 2*Mb2*dm*l2^2)*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^2) + (4*vL*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*(L^2*k1 + L1^2*k1 + L1^2*k2 + k1*u2^2 + k2*u1^2 + k1*u3^2 + k2*u2^2 - 2*L*L1*k1 - 2*L*k1*u2 + 2*L*k1*u3 + 2*L1*k1*u2 - 2*L1*k2*u1 - 2*L1*k1*u3 + 2*L1*k2*u2 - 2*k2*u1*u2 - 2*k1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3) - (4*vL*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*(L^2*k1 + L1^2*k1 + L1^2*k2 + k1*u2^2 + k2*u1^2 + k1*u3^2 + k2*u2^2 - 2*L*L1*k1 - 2*L*k1*u2 + 2*L*k1*u3 + 2*L1*k1*u2 - 2*L1*k2*u1 - 2*L1*k1*u3 + 2*L1*k2*u2 - 2*k2*u1*u2 - 2*k1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^2) + (2*vL*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*(2*L1*k1 - 2*L*k1 + 2*L1*k2 + 2*k1*u2 - 2*k2*u1 - 2*k1*u3 + 2*k2*u2))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2)) - (k2*up3*(L - L1)*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2)))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L - L1 - u2 + u3)^3) - (3*k2*up3*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*(L*u2 - L*u3 - L1*u2 + L1*u3 - L^2 - L1^2 + 2*vL^2 + 2*wL^2 + 2*L*L1))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L - L1 - u2 + u3)^4) + (3*up2*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*(L^3*L1^2*k1 - L1^5*k2 - 3*L^2*L1^3*k1 - L1^5*k1 - L^2*L1^3*k2 + L^2*k2*u1^3 - L^2*k2*u2^3 - 4*L1^2*k1*u2^3 + L1^2*k2*u1^3 - 6*L1^3*k1*u2^2 - 3*L1^3*k2*u1^2 + L1^2*k1*u3^3 - 4*L1^2*k2*u2^3 - 3*L1^3*k1*u3^2 - 6*L1^3*k2*u2^2 - 2*L^3*k1*vL^2 + 2*L1^3*k1*vL^2 + 2*L1^3*k2*vL^2 - 2*L^3*k1*wL^2 + 2*L1^3*k1*wL^2 + 2*L1^3*k2*wL^2 + 2*k1*u2^3*vL^2 - 2*k2*u1^3*vL^2 - 2*k1*u3^3*vL^2 + 2*k2*u2^3*vL^2 + 2*k1*u2^3*wL^2 - 2*k2*u1^3*wL^2 - 2*k1*u3^3*wL^2 + 2*k2*u2^3*wL^2 + 3*L*L1^4*k1 + 2*L*L1^4*k2 + L1^4*k1*u1 + L*k2*u2^4 - L1*k1*u2^4 - 4*L1^4*k1*u2 + 3*L1^4*k2*u1 - L1*k2*u2^4 + 3*L1^4*k1*u3 - 4*L1^4*k2*u2 + L1^4*k2*u3 - 3*L*L1^3*k1*u1 - L^3*L1*k1*u1 + 3*L*L1*k1*u2^3 - 2*L*L1*k2*u1^3 + 9*L*L1^3*k1*u2 - 6*L*L1^3*k2*u1 + L^3*L1*k1*u2 + 5*L*L1*k2*u2^3 - 6*L*L1^3*k1*u3 + 7*L*L1^3*k2*u2 - L*L1^3*k2*u3 - 3*L*k2*u1*u2^3 - L*k2*u1^3*u2 + L1*k1*u1*u2^3 + 3*L1^3*k1*u1*u2 + L*k2*u1^3*u3 - L1*k1*u1*u3^3 + 3*L1*k2*u1*u2^3 + L1*k2*u1^3*u2 - 3*L1^3*k1*u1*u3 + 9*L1^3*k2*u1*u2 - L*k2*u2^3*u3 + L1*k1*u2*u3^3 + 3*L1*k1*u2^3*u3 - L1*k2*u1^3*u3 + 9*L1^3*k1*u2*u3 - 3*L1^3*k2*u1*u3 + L1*k2*u2^3*u3 + 3*L1^3*k2*u2*u3 + 3*L^2*L1^2*k1*u1 + 9*L*L1^2*k1*u2^2 + 6*L*L1^2*k2*u1^2 - 3*L^2*L1*k1*u2^2 - 3*L^2*L1*k2*u1^2 - 6*L^2*L1^2*k1*u2 + 3*L^2*L1^2*k2*u1 + 3*L*L1^2*k1*u3^2 + 9*L*L1^2*k2*u2^2 - 3*L^2*L1*k2*u2^2 + 3*L^2*L1^2*k1*u3 - 3*L^2*L1^2*k2*u2 - 6*L*L1^2*k1*vL^2 + 6*L^2*L1*k1*vL^2 - 6*L*L1^2*k1*wL^2 + 6*L^2*L1*k1*wL^2 + 3*L*k2*u1^2*u2^2 + 3*L^2*k2*u1*u2^2 - 3*L^2*k2*u1^2*u2 + 3*L1^2*k1*u1*u2^2 - 3*L1*k2*u1^2*u2^2 + 3*L1^2*k1*u1*u3^2 + 9*L1^2*k2*u1*u2^2 - 6*L1^2*k2*u1^2*u2 - 3*L1*k1*u2^2*u3^2 - 6*L1^2*k1*u2*u3^2 + 9*L1^2*k1*u2^2*u3 + 3*L1^2*k2*u1^2*u3 + 3*L1^2*k2*u2^2*u3 - 6*L*k1*u2^2*vL^2 + 6*L^2*k1*u2*vL^2 - 6*L*k1*u3^2*vL^2 + 6*L1*k1*u2^2*vL^2 + 6*L1*k2*u1^2*vL^2 - 6*L^2*k1*u3*vL^2 + 6*L1^2*k1*u2*vL^2 - 6*L1^2*k2*u1*vL^2 + 6*L1*k1*u3^2*vL^2 + 6*L1*k2*u2^2*vL^2 - 6*L1^2*k1*u3*vL^2 + 6*L1^2*k2*u2*vL^2 - 6*L*k1*u2^2*wL^2 + 6*L^2*k1*u2*wL^2 - 6*L*k1*u3^2*wL^2 + 6*L1*k1*u2^2*wL^2 + 6*L1*k2*u1^2*wL^2 - 6*L^2*k1*u3*wL^2 + 6*L1^2*k1*u2*wL^2 - 6*L1^2*k2*u1*wL^2 + 6*L1*k1*u3^2*wL^2 + 6*L1*k2*u2^2*wL^2 - 6*L1^2*k1*u3*wL^2 + 6*L1^2*k2*u2*wL^2 - 6*k2*u1*u2^2*vL^2 + 6*k2*u1^2*u2*vL^2 + 6*k1*u2*u3^2*vL^2 - 6*k1*u2^2*u3*vL^2 - 6*k2*u1*u2^2*wL^2 + 6*k2*u1^2*u2*wL^2 + 6*k1*u2*u3^2*wL^2 - 6*k1*u2^2*u3*wL^2 - 3*L*L1*k1*u1*u2^2 - 6*L*L1^2*k1*u1*u2 + 3*L^2*L1*k1*u1*u2 - 3*L*L1*k1*u1*u3^2 - 12*L*L1*k2*u1*u2^2 + 9*L*L1*k2*u1^2*u2 + 6*L*L1^2*k1*u1*u3 - 15*L*L1^2*k2*u1*u2 - 3*L^2*L1*k1*u1*u3 + 6*L^2*L1*k2*u1*u2 + 3*L*L1*k1*u2*u3^2 - 6*L*L1*k1*u2^2*u3 - 3*L*L1*k2*u1^2*u3 - 12*L*L1^2*k1*u2*u3 + 3*L*L1^2*k2*u1*u3 + 3*L^2*L1*k1*u2*u3 - 3*L*L1*k2*u2^2*u3 - 3*L*L1^2*k2*u2*u3 - 12*L*L1*k1*u2*vL^2 + 12*L*L1*k1*u3*vL^2 - 12*L*L1*k1*u2*wL^2 + 12*L*L1*k1*u3*wL^2 + 3*L*k2*u1*u2^2*u3 - 3*L*k2*u1^2*u2*u3 + 3*L1*k1*u1*u2*u3^2 - 3*L1*k1*u1*u2^2*u3 - 6*L1^2*k1*u1*u2*u3 - 3*L1*k2*u1*u2^2*u3 + 3*L1*k2*u1^2*u2*u3 - 6*L1^2*k2*u1*u2*u3 + 12*L*k1*u2*u3*vL^2 - 12*L1*k2*u1*u2*vL^2 - 12*L1*k1*u2*u3*vL^2 + 12*L*k1*u2*u3*wL^2 - 12*L1*k2*u1*u2*wL^2 - 12*L1*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2*u3 + 6*L*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^4) - (3*up2*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*(L^3*L1^2*k1 - L1^5*k2 - 3*L^2*L1^3*k1 - L1^5*k1 - L^2*L1^3*k2 + L^2*k2*u1^3 - L^2*k2*u2^3 - 4*L1^2*k1*u2^3 + L1^2*k2*u1^3 - 6*L1^3*k1*u2^2 - 3*L1^3*k2*u1^2 + L1^2*k1*u3^3 - 4*L1^2*k2*u2^3 - 3*L1^3*k1*u3^2 - 6*L1^3*k2*u2^2 - 2*L^3*k1*vL^2 + 2*L1^3*k1*vL^2 + 2*L1^3*k2*vL^2 - 2*L^3*k1*wL^2 + 2*L1^3*k1*wL^2 + 2*L1^3*k2*wL^2 + 2*k1*u2^3*vL^2 - 2*k2*u1^3*vL^2 - 2*k1*u3^3*vL^2 + 2*k2*u2^3*vL^2 + 2*k1*u2^3*wL^2 - 2*k2*u1^3*wL^2 - 2*k1*u3^3*wL^2 + 2*k2*u2^3*wL^2 + 3*L*L1^4*k1 + 2*L*L1^4*k2 + L1^4*k1*u1 + L*k2*u2^4 - L1*k1*u2^4 - 4*L1^4*k1*u2 + 3*L1^4*k2*u1 - L1*k2*u2^4 + 3*L1^4*k1*u3 - 4*L1^4*k2*u2 + L1^4*k2*u3 - 3*L*L1^3*k1*u1 - L^3*L1*k1*u1 + 3*L*L1*k1*u2^3 - 2*L*L1*k2*u1^3 + 9*L*L1^3*k1*u2 - 6*L*L1^3*k2*u1 + L^3*L1*k1*u2 + 5*L*L1*k2*u2^3 - 6*L*L1^3*k1*u3 + 7*L*L1^3*k2*u2 - L*L1^3*k2*u3 - 3*L*k2*u1*u2^3 - L*k2*u1^3*u2 + L1*k1*u1*u2^3 + 3*L1^3*k1*u1*u2 + L*k2*u1^3*u3 - L1*k1*u1*u3^3 + 3*L1*k2*u1*u2^3 + L1*k2*u1^3*u2 - 3*L1^3*k1*u1*u3 + 9*L1^3*k2*u1*u2 - L*k2*u2^3*u3 + L1*k1*u2*u3^3 + 3*L1*k1*u2^3*u3 - L1*k2*u1^3*u3 + 9*L1^3*k1*u2*u3 - 3*L1^3*k2*u1*u3 + L1*k2*u2^3*u3 + 3*L1^3*k2*u2*u3 + 3*L^2*L1^2*k1*u1 + 9*L*L1^2*k1*u2^2 + 6*L*L1^2*k2*u1^2 - 3*L^2*L1*k1*u2^2 - 3*L^2*L1*k2*u1^2 - 6*L^2*L1^2*k1*u2 + 3*L^2*L1^2*k2*u1 + 3*L*L1^2*k1*u3^2 + 9*L*L1^2*k2*u2^2 - 3*L^2*L1*k2*u2^2 + 3*L^2*L1^2*k1*u3 - 3*L^2*L1^2*k2*u2 - 6*L*L1^2*k1*vL^2 + 6*L^2*L1*k1*vL^2 - 6*L*L1^2*k1*wL^2 + 6*L^2*L1*k1*wL^2 + 3*L*k2*u1^2*u2^2 + 3*L^2*k2*u1*u2^2 - 3*L^2*k2*u1^2*u2 + 3*L1^2*k1*u1*u2^2 - 3*L1*k2*u1^2*u2^2 + 3*L1^2*k1*u1*u3^2 + 9*L1^2*k2*u1*u2^2 - 6*L1^2*k2*u1^2*u2 - 3*L1*k1*u2^2*u3^2 - 6*L1^2*k1*u2*u3^2 + 9*L1^2*k1*u2^2*u3 + 3*L1^2*k2*u1^2*u3 + 3*L1^2*k2*u2^2*u3 - 6*L*k1*u2^2*vL^2 + 6*L^2*k1*u2*vL^2 - 6*L*k1*u3^2*vL^2 + 6*L1*k1*u2^2*vL^2 + 6*L1*k2*u1^2*vL^2 - 6*L^2*k1*u3*vL^2 + 6*L1^2*k1*u2*vL^2 - 6*L1^2*k2*u1*vL^2 + 6*L1*k1*u3^2*vL^2 + 6*L1*k2*u2^2*vL^2 - 6*L1^2*k1*u3*vL^2 + 6*L1^2*k2*u2*vL^2 - 6*L*k1*u2^2*wL^2 + 6*L^2*k1*u2*wL^2 - 6*L*k1*u3^2*wL^2 + 6*L1*k1*u2^2*wL^2 + 6*L1*k2*u1^2*wL^2 - 6*L^2*k1*u3*wL^2 + 6*L1^2*k1*u2*wL^2 - 6*L1^2*k2*u1*wL^2 + 6*L1*k1*u3^2*wL^2 + 6*L1*k2*u2^2*wL^2 - 6*L1^2*k1*u3*wL^2 + 6*L1^2*k2*u2*wL^2 - 6*k2*u1*u2^2*vL^2 + 6*k2*u1^2*u2*vL^2 + 6*k1*u2*u3^2*vL^2 - 6*k1*u2^2*u3*vL^2 - 6*k2*u1*u2^2*wL^2 + 6*k2*u1^2*u2*wL^2 + 6*k1*u2*u3^2*wL^2 - 6*k1*u2^2*u3*wL^2 - 3*L*L1*k1*u1*u2^2 - 6*L*L1^2*k1*u1*u2 + 3*L^2*L1*k1*u1*u2 - 3*L*L1*k1*u1*u3^2 - 12*L*L1*k2*u1*u2^2 + 9*L*L1*k2*u1^2*u2 + 6*L*L1^2*k1*u1*u3 - 15*L*L1^2*k2*u1*u2 - 3*L^2*L1*k1*u1*u3 + 6*L^2*L1*k2*u1*u2 + 3*L*L1*k1*u2*u3^2 - 6*L*L1*k1*u2^2*u3 - 3*L*L1*k2*u1^2*u3 - 12*L*L1^2*k1*u2*u3 + 3*L*L1^2*k2*u1*u3 + 3*L^2*L1*k1*u2*u3 - 3*L*L1*k2*u2^2*u3 - 3*L*L1^2*k2*u2*u3 - 12*L*L1*k1*u2*vL^2 + 12*L*L1*k1*u3*vL^2 - 12*L*L1*k1*u2*wL^2 + 12*L*L1*k1*u3*wL^2 + 3*L*k2*u1*u2^2*u3 - 3*L*k2*u1^2*u2*u3 + 3*L1*k1*u1*u2*u3^2 - 3*L1*k1*u1*u2^2*u3 - 6*L1^2*k1*u1*u2*u3 - 3*L1*k2*u1*u2^2*u3 + 3*L1*k2*u1^2*u2*u3 - 6*L1^2*k2*u1*u2*u3 + 12*L*k1*u2*u3*vL^2 - 12*L1*k2*u1*u2*vL^2 - 12*L1*k1*u2*u3*vL^2 + 12*L*k1*u2*u3*wL^2 - 12*L1*k2*u1*u2*wL^2 - 12*L1*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2*u3 + 6*L*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^4*(L - L1 - u2 + u3)^3) - (3*k1*up1*(L1*u1 - L1*u2 - L1^2 + 2*vL^2 + 2*wL^2)*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2)))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^4) + (up2*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*(6*L^2*k1*vL^2 - 4*L1^4*k2 - 6*L^2*L1^2*k1 - 3*L^2*L1^2*k2 - 3*L^2*k2*u1^2 - 3*L^2*k2*u2^2 - 12*L1^2*k1*u2^2 - 6*L1^2*k2*u1^2 - 6*L1^2*k1*u3^2 - 12*L1^2*k2*u2^2 - 4*L1^4*k1 + 6*L1^2*k1*vL^2 + 6*L1^2*k2*vL^2 + 6*L^2*k1*wL^2 + 6*L1^2*k1*wL^2 + 6*L1^2*k2*wL^2 + 6*k1*u2^2*vL^2 + 6*k2*u1^2*vL^2 + 6*k1*u3^2*vL^2 + 6*k2*u2^2*vL^2 + 6*k1*u2^2*wL^2 + 6*k2*u1^2*wL^2 + 6*k1*u3^2*wL^2 + 6*k2*u2^2*wL^2 + 9*L*L1^3*k1 + L^3*L1*k1 + 7*L*L1^3*k2 - L*k2*u1^3 + 3*L1^3*k1*u1 + 4*L*k2*u2^3 - 4*L1*k1*u2^3 + L1*k2*u1^3 - 12*L1^3*k1*u2 + 9*L1^3*k2*u1 + L1*k1*u3^3 - 4*L1*k2*u2^3 + 9*L1^3*k1*u3 - 12*L1^3*k2*u2 + 3*L1^3*k2*u3 - 6*L*L1^2*k1*u1 + 3*L^2*L1*k1*u1 + 9*L*L1*k1*u2^2 + 9*L*L1*k2*u1^2 + 18*L*L1^2*k1*u2 - 15*L*L1^2*k2*u1 - 6*L^2*L1*k1*u2 + 6*L^2*L1*k2*u1 + 3*L*L1*k1*u3^2 + 15*L*L1*k2*u2^2 - 12*L*L1^2*k1*u3 + 18*L*L1^2*k2*u2 + 3*L^2*L1*k1*u3 - 6*L^2*L1*k2*u2 - 3*L*L1^2*k2*u3 - 12*L*L1*k1*vL^2 - 12*L*L1*k1*wL^2 - 9*L*k2*u1*u2^2 + 6*L*k2*u1^2*u2 + 3*L1*k1*u1*u2^2 + 6*L^2*k2*u1*u2 + 6*L1^2*k1*u1*u2 - 3*L*k2*u1^2*u3 + 3*L1*k1*u1*u3^2 + 9*L1*k2*u1*u2^2 - 6*L1*k2*u1^2*u2 - 6*L1^2*k1*u1*u3 + 18*L1^2*k2*u1*u2 - 3*L*k2*u2^2*u3 - 6*L1*k1*u2*u3^2 + 9*L1*k1*u2^2*u3 + 3*L1*k2*u1^2*u3 + 18*L1^2*k1*u2*u3 - 6*L1^2*k2*u1*u3 + 3*L1*k2*u2^2*u3 + 6*L1^2*k2*u2*u3 - 12*L*k1*u2*vL^2 + 12*L*k1*u3*vL^2 + 12*L1*k1*u2*vL^2 - 12*L1*k2*u1*vL^2 - 12*L1*k1*u3*vL^2 + 12*L1*k2*u2*vL^2 - 12*L*k1*u2*wL^2 + 12*L*k1*u3*wL^2 + 12*L1*k1*u2*wL^2 - 12*L1*k2*u1*wL^2 - 12*L1*k1*u3*wL^2 + 12*L1*k2*u2*wL^2 - 12*k2*u1*u2*vL^2 - 12*k1*u2*u3*vL^2 - 12*k2*u1*u2*wL^2 - 12*k1*u2*u3*wL^2 - 6*L*L1*k1*u1*u2 + 6*L*L1*k1*u1*u3 - 24*L*L1*k2*u1*u2 - 12*L*L1*k1*u2*u3 + 6*L*L1*k2*u1*u3 - 6*L*L1*k2*u2*u3 + 6*L*k2*u1*u2*u3 - 6*L1*k1*u1*u2*u3 - 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^3) - (L1*k1*up1*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2)))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3) - (4*dm^2*l2^2*tetap2*(wL*cos(2*alfa + 2*teta2) - vL*sin(2*alfa + 2*teta2))*((L1^3*k1)/2 + (L1^3*k2)/2 + 2*k1*u2^3 + 2*k2*u2^3 - 3*k1*u1*u2^2 + k1*u1^2*u2 - k1*u1*u3^2 - k1*u1^2*u3 - 3*k2*u1*u2^2 + k2*u1^2*u2 + k1*u2*u3^2 - 3*k1*u2^2*u3 - k2*u1*u3^2 - k2*u1^2*u3 + k2*u2*u3^2 - 3*k2*u2^2*u3 + k1*u2*vL^2 - k2*u1*vL^2 - k1*u3*vL^2 + k2*u2*vL^2 + k1*u2*wL^2 - k2*u1*wL^2 - k1*u3*wL^2 + k2*u2*wL^2 - L*L1^2*k1 + (L^2*L1*k1)/2 - (L*L1^2*k2)/2 - L*k1*u1^2 - L^2*k1*u1 - 3*L*k1*u2^2 - (L*k2*u1^2)/2 + L1*k1*u1^2 + L^2*k1*u2 - 2*L1^2*k1*u1 - (3*L*k2*u2^2)/2 + (9*L1*k1*u2^2)/2 + (L1*k2*u1^2)/2 + 3*L1^2*k1*u2 - L1^2*k2*u1 + (L1*k1*u3^2)/2 + (9*L1*k2*u2^2)/2 - L1^2*k1*u3 + 3*L1^2*k2*u2 + L1*k2*u3^2 - 2*L1^2*k2*u3 - L*k1*vL^2 + L1*k1*vL^2 + L1*k2*vL^2 - L*k1*wL^2 + L1*k1*wL^2 + L1*k2*wL^2 + 4*L*k1*u1*u2 - 2*L*k1*u1*u3 + 2*L*k2*u1*u2 - 5*L1*k1*u1*u2 + 2*L*k1*u2*u3 - L*k2*u1*u3 + 3*L1*k1*u1*u3 - 4*L1*k2*u1*u2 + L*k2*u2*u3 - 4*L1*k1*u2*u3 + 3*L1*k2*u1*u3 - 5*L1*k2*u2*u3 + 4*k1*u1*u2*u3 + 4*k2*u1*u2*u3 + 3*L*L1*k1*u1 - 4*L*L1*k1*u2 + L*L1*k2*u1 + L*L1*k1*u3 - 2*L*L1*k2*u2 + L*L1*k2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (8*dm^2*l2^2*tetap2*(wL*cos(2*alfa + 2*teta2) - vL*sin(2*alfa + 2*teta2))*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3) + (8*dm^2*l2^2*tetap2*(wL*cos(2*alfa + 2*teta2) - vL*sin(2*alfa + 2*teta2))*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^2), wpL*((2*wL*(2*Ib2*dm + dm^2*l2^2 + 2*Ib2*Mb2 - dm^2*l2^2*cos(2*alfa + 2*teta2) + 2*Mb2*dm*l2^2)*(L^2*k1 + L1^2*k1 + L1^2*k2 + k1*u2^2 + k2*u1^2 + k1*u3^2 + k2*u2^2 - 2*L*L1*k1 - 2*L*k1*u2 + 2*L*k1*u3 + 2*L1*k1*u2 - 2*L1*k2*u1 - 2*L1*k1*u3 + 2*L1*k2*u2 - 2*k2*u1*u2 - 2*k1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (2*dm^2*l2^2*sin(2*alfa + 2*teta2)*(k1*u2^2*vL + k2*u1^2*vL + k1*u3^2*vL + k2*u2^2*vL + L^2*k1*vL + L1^2*k1*vL + L1^2*k2*vL - 2*L*k1*u2*vL + 2*L*k1*u3*vL + 2*L1*k1*u2*vL - 2*L1*k2*u1*vL - 2*L1*k1*u3*vL + 2*L1*k2*u2*vL - 2*k2*u1*u2*vL - 2*k1*u2*u3*vL - 2*L*L1*k1*vL))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2)) + vpL*((2*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*(L^2*k1 + L1^2*k1 + L1^2*k2 + k1*u2^2 + k2*u1^2 + k1*u3^2 + k2*u2^2 - 2*L*L1*k1 - 2*L*k1*u2 + 2*L*k1*u3 + 2*L1*k1*u2 - 2*L1*k2*u1 - 2*L1*k1*u3 + 2*L1*k2*u2 - 2*k2*u1*u2 - 2*k1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (2*(2*Ib2*dm + dm^2*l2^2 + 2*Ib2*Mb2 - dm^2*l2^2*cos(2*alfa + 2*teta2) + 2*Mb2*dm*l2^2)*(k1*u2^2*vL + k2*u1^2*vL + k1*u3^2*vL + k2*u2^2*vL + L^2*k1*vL + L1^2*k1*vL + L1^2*k2*vL - 2*L*k1*u2*vL + 2*L*k1*u3*vL + 2*L1*k1*u2*vL - 2*L1*k2*u1*vL - 2*L1*k1*u3*vL + 2*L1*k2*u2*vL - 2*k2*u1*u2*vL - 2*k1*u2*u3*vL - 2*L*L1*k1*vL))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (2*vL*(2*Ib2*dm + dm^2*l2^2 + 2*Ib2*Mb2 - dm^2*l2^2*cos(2*alfa + 2*teta2) + 2*Mb2*dm*l2^2)*(L^2*k1 + L1^2*k1 + L1^2*k2 + k1*u2^2 + k2*u1^2 + k1*u3^2 + k2*u2^2 - 2*L*L1*k1 - 2*L*k1*u2 + 2*L*k1*u3 + 2*L1*k1*u2 - 2*L1*k2*u1 - 2*L1*k1*u3 + 2*L1*k2*u2 - 2*k2*u1*u2 - 2*k1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2)) - (k2*up3*(2*Ib2*dm + dm^2*l2^2 + 2*Ib2*Mb2 - dm^2*l2^2*cos(2*alfa + 2*teta2) + 2*Mb2*dm*l2^2)*(L*u2 - L*u3 - L1*u2 + L1*u3 - L^2 - L1^2 + 2*vL^2 + 2*wL^2 + 2*L*L1))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L - L1 - u2 + u3)^3) + (up2*(2*Ib2*dm + dm^2*l2^2 + 2*Ib2*Mb2 - dm^2*l2^2*cos(2*alfa + 2*teta2) + 2*Mb2*dm*l2^2)*(L^3*L1^2*k1 - L1^5*k2 - 3*L^2*L1^3*k1 - L1^5*k1 - L^2*L1^3*k2 + L^2*k2*u1^3 - L^2*k2*u2^3 - 4*L1^2*k1*u2^3 + L1^2*k2*u1^3 - 6*L1^3*k1*u2^2 - 3*L1^3*k2*u1^2 + L1^2*k1*u3^3 - 4*L1^2*k2*u2^3 - 3*L1^3*k1*u3^2 - 6*L1^3*k2*u2^2 - 2*L^3*k1*vL^2 + 2*L1^3*k1*vL^2 + 2*L1^3*k2*vL^2 - 2*L^3*k1*wL^2 + 2*L1^3*k1*wL^2 + 2*L1^3*k2*wL^2 + 2*k1*u2^3*vL^2 - 2*k2*u1^3*vL^2 - 2*k1*u3^3*vL^2 + 2*k2*u2^3*vL^2 + 2*k1*u2^3*wL^2 - 2*k2*u1^3*wL^2 - 2*k1*u3^3*wL^2 + 2*k2*u2^3*wL^2 + 3*L*L1^4*k1 + 2*L*L1^4*k2 + L1^4*k1*u1 + L*k2*u2^4 - L1*k1*u2^4 - 4*L1^4*k1*u2 + 3*L1^4*k2*u1 - L1*k2*u2^4 + 3*L1^4*k1*u3 - 4*L1^4*k2*u2 + L1^4*k2*u3 - 3*L*L1^3*k1*u1 - L^3*L1*k1*u1 + 3*L*L1*k1*u2^3 - 2*L*L1*k2*u1^3 + 9*L*L1^3*k1*u2 - 6*L*L1^3*k2*u1 + L^3*L1*k1*u2 + 5*L*L1*k2*u2^3 - 6*L*L1^3*k1*u3 + 7*L*L1^3*k2*u2 - L*L1^3*k2*u3 - 3*L*k2*u1*u2^3 - L*k2*u1^3*u2 + L1*k1*u1*u2^3 + 3*L1^3*k1*u1*u2 + L*k2*u1^3*u3 - L1*k1*u1*u3^3 + 3*L1*k2*u1*u2^3 + L1*k2*u1^3*u2 - 3*L1^3*k1*u1*u3 + 9*L1^3*k2*u1*u2 - L*k2*u2^3*u3 + L1*k1*u2*u3^3 + 3*L1*k1*u2^3*u3 - L1*k2*u1^3*u3 + 9*L1^3*k1*u2*u3 - 3*L1^3*k2*u1*u3 + L1*k2*u2^3*u3 + 3*L1^3*k2*u2*u3 + 3*L^2*L1^2*k1*u1 + 9*L*L1^2*k1*u2^2 + 6*L*L1^2*k2*u1^2 - 3*L^2*L1*k1*u2^2 - 3*L^2*L1*k2*u1^2 - 6*L^2*L1^2*k1*u2 + 3*L^2*L1^2*k2*u1 + 3*L*L1^2*k1*u3^2 + 9*L*L1^2*k2*u2^2 - 3*L^2*L1*k2*u2^2 + 3*L^2*L1^2*k1*u3 - 3*L^2*L1^2*k2*u2 - 6*L*L1^2*k1*vL^2 + 6*L^2*L1*k1*vL^2 - 6*L*L1^2*k1*wL^2 + 6*L^2*L1*k1*wL^2 + 3*L*k2*u1^2*u2^2 + 3*L^2*k2*u1*u2^2 - 3*L^2*k2*u1^2*u2 + 3*L1^2*k1*u1*u2^2 - 3*L1*k2*u1^2*u2^2 + 3*L1^2*k1*u1*u3^2 + 9*L1^2*k2*u1*u2^2 - 6*L1^2*k2*u1^2*u2 - 3*L1*k1*u2^2*u3^2 - 6*L1^2*k1*u2*u3^2 + 9*L1^2*k1*u2^2*u3 + 3*L1^2*k2*u1^2*u3 + 3*L1^2*k2*u2^2*u3 - 6*L*k1*u2^2*vL^2 + 6*L^2*k1*u2*vL^2 - 6*L*k1*u3^2*vL^2 + 6*L1*k1*u2^2*vL^2 + 6*L1*k2*u1^2*vL^2 - 6*L^2*k1*u3*vL^2 + 6*L1^2*k1*u2*vL^2 - 6*L1^2*k2*u1*vL^2 + 6*L1*k1*u3^2*vL^2 + 6*L1*k2*u2^2*vL^2 - 6*L1^2*k1*u3*vL^2 + 6*L1^2*k2*u2*vL^2 - 6*L*k1*u2^2*wL^2 + 6*L^2*k1*u2*wL^2 - 6*L*k1*u3^2*wL^2 + 6*L1*k1*u2^2*wL^2 + 6*L1*k2*u1^2*wL^2 - 6*L^2*k1*u3*wL^2 + 6*L1^2*k1*u2*wL^2 - 6*L1^2*k2*u1*wL^2 + 6*L1*k1*u3^2*wL^2 + 6*L1*k2*u2^2*wL^2 - 6*L1^2*k1*u3*wL^2 + 6*L1^2*k2*u2*wL^2 - 6*k2*u1*u2^2*vL^2 + 6*k2*u1^2*u2*vL^2 + 6*k1*u2*u3^2*vL^2 - 6*k1*u2^2*u3*vL^2 - 6*k2*u1*u2^2*wL^2 + 6*k2*u1^2*u2*wL^2 + 6*k1*u2*u3^2*wL^2 - 6*k1*u2^2*u3*wL^2 - 3*L*L1*k1*u1*u2^2 - 6*L*L1^2*k1*u1*u2 + 3*L^2*L1*k1*u1*u2 - 3*L*L1*k1*u1*u3^2 - 12*L*L1*k2*u1*u2^2 + 9*L*L1*k2*u1^2*u2 + 6*L*L1^2*k1*u1*u3 - 15*L*L1^2*k2*u1*u2 - 3*L^2*L1*k1*u1*u3 + 6*L^2*L1*k2*u1*u2 + 3*L*L1*k1*u2*u3^2 - 6*L*L1*k1*u2^2*u3 - 3*L*L1*k2*u1^2*u3 - 12*L*L1^2*k1*u2*u3 + 3*L*L1^2*k2*u1*u3 + 3*L^2*L1*k1*u2*u3 - 3*L*L1*k2*u2^2*u3 - 3*L*L1^2*k2*u2*u3 - 12*L*L1*k1*u2*vL^2 + 12*L*L1*k1*u3*vL^2 - 12*L*L1*k1*u2*wL^2 + 12*L*L1*k1*u3*wL^2 + 3*L*k2*u1*u2^2*u3 - 3*L*k2*u1^2*u2*u3 + 3*L1*k1*u1*u2*u3^2 - 3*L1*k1*u1*u2^2*u3 - 6*L1^2*k1*u1*u2*u3 - 3*L1*k2*u1*u2^2*u3 + 3*L1*k2*u1^2*u2*u3 - 6*L1^2*k2*u1*u2*u3 + 12*L*k1*u2*u3*vL^2 - 12*L1*k2*u1*u2*vL^2 - 12*L1*k1*u2*u3*vL^2 + 12*L*k1*u2*u3*wL^2 - 12*L1*k2*u1*u2*wL^2 - 12*L1*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2*u3 + 6*L*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^3) + (k1*up1*(L1*u1 - L1*u2 - L1^2 + 2*vL^2 + 2*wL^2)*(2*Ib2*dm + dm^2*l2^2 + 2*Ib2*Mb2 - dm^2*l2^2*cos(2*alfa + 2*teta2) + 2*Mb2*dm*l2^2))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3) - (4*k2*up3*vL*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2)))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L - L1 - u2 + u3)^3) + (up2*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*(4*k1*u2^3*vL - 4*k2*u1^3*vL - 4*k1*u3^3*vL + 4*k2*u2^3*vL - 4*L^3*k1*vL + 4*L1^3*k1*vL + 4*L1^3*k2*vL - 12*L*L1^2*k1*vL + 12*L^2*L1*k1*vL - 12*L*k1*u2^2*vL + 12*L^2*k1*u2*vL - 12*L*k1*u3^2*vL + 12*L1*k1*u2^2*vL + 12*L1*k2*u1^2*vL - 12*L^2*k1*u3*vL + 12*L1^2*k1*u2*vL - 12*L1^2*k2*u1*vL + 12*L1*k1*u3^2*vL + 12*L1*k2*u2^2*vL - 12*L1^2*k1*u3*vL + 12*L1^2*k2*u2*vL - 12*k2*u1*u2^2*vL + 12*k2*u1^2*u2*vL + 12*k1*u2*u3^2*vL - 12*k1*u2^2*u3*vL - 24*L*L1*k1*u2*vL + 24*L*L1*k1*u3*vL + 24*L*k1*u2*u3*vL - 24*L1*k2*u1*u2*vL - 24*L1*k1*u2*u3*vL))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^3) + (4*k1*up1*vL*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2)))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3) - (4*dm^2*l2^2*tetap2*(wL*cos(2*alfa + 2*teta2) - vL*sin(2*alfa + 2*teta2))*(k1*u2^2*vL + k2*u1^2*vL + k1*u3^2*vL + k2*u2^2*vL + L^2*k1*vL + L1^2*k1*vL + L1^2*k2*vL - 2*L*k1*u2*vL + 2*L*k1*u3*vL + 2*L1*k1*u2*vL - 2*L1*k2*u1*vL - 2*L1*k1*u3*vL + 2*L1*k2*u2*vL - 2*k2*u1*u2*vL - 2*k1*u2*u3*vL - 2*L*L1*k1*vL))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (4*dm^2*l2^2*tetap2*sin(2*alfa + 2*teta2)*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), vpL*((2*(2*Ib2*dm + dm^2*l2^2 + 2*Ib2*Mb2 - dm^2*l2^2*cos(2*alfa + 2*teta2) + 2*Mb2*dm*l2^2)*(k1*u2^2*wL + k2*u1^2*wL + k1*u3^2*wL + k2*u2^2*wL + L^2*k1*wL + L1^2*k1*wL + L1^2*k2*wL - 2*L*k1*u2*wL + 2*L*k1*u3*wL + 2*L1*k1*u2*wL - 2*L1*k2*u1*wL - 2*L1*k1*u3*wL + 2*L1*k2*u2*wL - 2*k2*u1*u2*wL - 2*k1*u2*u3*wL - 2*L*L1*k1*wL))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (2*dm^2*l2^2*vL*sin(2*alfa + 2*teta2)*(L^2*k1 + L1^2*k1 + L1^2*k2 + k1*u2^2 + k2*u1^2 + k1*u3^2 + k2*u2^2 - 2*L*L1*k1 - 2*L*k1*u2 + 2*L*k1*u3 + 2*L1*k1*u2 - 2*L1*k2*u1 - 2*L1*k1*u3 + 2*L1*k2*u2 - 2*k2*u1*u2 - 2*k1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2)) - wpL*((2*dm^2*l2^2*sin(2*alfa + 2*teta2)*(k1*u2^2*wL + k2*u1^2*wL + k1*u3^2*wL + k2*u2^2*wL + L^2*k1*wL + L1^2*k1*wL + L1^2*k2*wL - 2*L*k1*u2*wL + 2*L*k1*u3*wL + 2*L1*k1*u2*wL - 2*L1*k2*u1*wL - 2*L1*k1*u3*wL + 2*L1*k2*u2*wL - 2*k2*u1*u2*wL - 2*k1*u2*u3*wL - 2*L*L1*k1*wL))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (2*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*(L^2*k1 + L1^2*k1 + L1^2*k2 + k1*u2^2 + k2*u1^2 + k1*u3^2 + k2*u2^2 - 2*L*L1*k1 - 2*L*k1*u2 + 2*L*k1*u3 + 2*L1*k1*u2 - 2*L1*k2*u1 - 2*L1*k1*u3 + 2*L1*k2*u2 - 2*k2*u1*u2 - 2*k1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (2*dm^2*l2^2*wL*sin(2*alfa + 2*teta2)*(L^2*k1 + L1^2*k1 + L1^2*k2 + k1*u2^2 + k2*u1^2 + k1*u3^2 + k2*u2^2 - 2*L*L1*k1 - 2*L*k1*u2 + 2*L*k1*u3 + 2*L1*k1*u2 - 2*L1*k2*u1 - 2*L1*k1*u3 + 2*L1*k2*u2 - 2*k2*u1*u2 - 2*k1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2)) - (4*k2*up3*wL*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2)))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L - L1 - u2 + u3)^3) + (up2*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*(4*k1*u2^3*wL - 4*k2*u1^3*wL - 4*k1*u3^3*wL + 4*k2*u2^3*wL - 4*L^3*k1*wL + 4*L1^3*k1*wL + 4*L1^3*k2*wL - 12*L*L1^2*k1*wL + 12*L^2*L1*k1*wL - 12*L*k1*u2^2*wL + 12*L^2*k1*u2*wL - 12*L*k1*u3^2*wL + 12*L1*k1*u2^2*wL + 12*L1*k2*u1^2*wL - 12*L^2*k1*u3*wL + 12*L1^2*k1*u2*wL - 12*L1^2*k2*u1*wL + 12*L1*k1*u3^2*wL + 12*L1*k2*u2^2*wL - 12*L1^2*k1*u3*wL + 12*L1^2*k2*u2*wL - 12*k2*u1*u2^2*wL + 12*k2*u1^2*u2*wL + 12*k1*u2*u3^2*wL - 12*k1*u2^2*u3*wL - 24*L*L1*k1*u2*wL + 24*L*L1*k1*u3*wL + 24*L*k1*u2*u3*wL - 24*L1*k2*u1*u2*wL - 24*L1*k1*u2*u3*wL))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^3) + (4*k1*up1*wL*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2)))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3) - (4*dm^2*l2^2*tetap2*(wL*cos(2*alfa + 2*teta2) - vL*sin(2*alfa + 2*teta2))*(k1*u2^2*wL + k2*u1^2*wL + k1*u3^2*wL + k2*u2^2*wL + L^2*k1*wL + L1^2*k1*wL + L1^2*k2*wL - 2*L*k1*u2*wL + 2*L*k1*u3*wL + 2*L1*k1*u2*wL - 2*L1*k2*u1*wL - 2*L1*k1*u3*wL + 2*L1*k2*u2*wL - 2*k2*u1*u2*wL - 2*k1*u2*u3*wL - 2*L*L1*k1*wL))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (4*dm^2*l2^2*tetap2*cos(2*alfa + 2*teta2)*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (dm^2*k2*l2^2*up3*sin(2*alfa + 2*teta2)*(L*u2 - L*u3 - L1*u2 + L1*u3 - L^2 - L1^2 + 2*vL^2 + 2*wL^2 + 2*L*L1))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L - L1 - u2 + u3)^3) - (dm^2*l2^2*up2*sin(2*alfa + 2*teta2)*(L^3*L1^2*k1 - L1^5*k2 - 3*L^2*L1^3*k1 - L1^5*k1 - L^2*L1^3*k2 + L^2*k2*u1^3 - L^2*k2*u2^3 - 4*L1^2*k1*u2^3 + L1^2*k2*u1^3 - 6*L1^3*k1*u2^2 - 3*L1^3*k2*u1^2 + L1^2*k1*u3^3 - 4*L1^2*k2*u2^3 - 3*L1^3*k1*u3^2 - 6*L1^3*k2*u2^2 - 2*L^3*k1*vL^2 + 2*L1^3*k1*vL^2 + 2*L1^3*k2*vL^2 - 2*L^3*k1*wL^2 + 2*L1^3*k1*wL^2 + 2*L1^3*k2*wL^2 + 2*k1*u2^3*vL^2 - 2*k2*u1^3*vL^2 - 2*k1*u3^3*vL^2 + 2*k2*u2^3*vL^2 + 2*k1*u2^3*wL^2 - 2*k2*u1^3*wL^2 - 2*k1*u3^3*wL^2 + 2*k2*u2^3*wL^2 + 3*L*L1^4*k1 + 2*L*L1^4*k2 + L1^4*k1*u1 + L*k2*u2^4 - L1*k1*u2^4 - 4*L1^4*k1*u2 + 3*L1^4*k2*u1 - L1*k2*u2^4 + 3*L1^4*k1*u3 - 4*L1^4*k2*u2 + L1^4*k2*u3 - 3*L*L1^3*k1*u1 - L^3*L1*k1*u1 + 3*L*L1*k1*u2^3 - 2*L*L1*k2*u1^3 + 9*L*L1^3*k1*u2 - 6*L*L1^3*k2*u1 + L^3*L1*k1*u2 + 5*L*L1*k2*u2^3 - 6*L*L1^3*k1*u3 + 7*L*L1^3*k2*u2 - L*L1^3*k2*u3 - 3*L*k2*u1*u2^3 - L*k2*u1^3*u2 + L1*k1*u1*u2^3 + 3*L1^3*k1*u1*u2 + L*k2*u1^3*u3 - L1*k1*u1*u3^3 + 3*L1*k2*u1*u2^3 + L1*k2*u1^3*u2 - 3*L1^3*k1*u1*u3 + 9*L1^3*k2*u1*u2 - L*k2*u2^3*u3 + L1*k1*u2*u3^3 + 3*L1*k1*u2^3*u3 - L1*k2*u1^3*u3 + 9*L1^3*k1*u2*u3 - 3*L1^3*k2*u1*u3 + L1*k2*u2^3*u3 + 3*L1^3*k2*u2*u3 + 3*L^2*L1^2*k1*u1 + 9*L*L1^2*k1*u2^2 + 6*L*L1^2*k2*u1^2 - 3*L^2*L1*k1*u2^2 - 3*L^2*L1*k2*u1^2 - 6*L^2*L1^2*k1*u2 + 3*L^2*L1^2*k2*u1 + 3*L*L1^2*k1*u3^2 + 9*L*L1^2*k2*u2^2 - 3*L^2*L1*k2*u2^2 + 3*L^2*L1^2*k1*u3 - 3*L^2*L1^2*k2*u2 - 6*L*L1^2*k1*vL^2 + 6*L^2*L1*k1*vL^2 - 6*L*L1^2*k1*wL^2 + 6*L^2*L1*k1*wL^2 + 3*L*k2*u1^2*u2^2 + 3*L^2*k2*u1*u2^2 - 3*L^2*k2*u1^2*u2 + 3*L1^2*k1*u1*u2^2 - 3*L1*k2*u1^2*u2^2 + 3*L1^2*k1*u1*u3^2 + 9*L1^2*k2*u1*u2^2 - 6*L1^2*k2*u1^2*u2 - 3*L1*k1*u2^2*u3^2 - 6*L1^2*k1*u2*u3^2 + 9*L1^2*k1*u2^2*u3 + 3*L1^2*k2*u1^2*u3 + 3*L1^2*k2*u2^2*u3 - 6*L*k1*u2^2*vL^2 + 6*L^2*k1*u2*vL^2 - 6*L*k1*u3^2*vL^2 + 6*L1*k1*u2^2*vL^2 + 6*L1*k2*u1^2*vL^2 - 6*L^2*k1*u3*vL^2 + 6*L1^2*k1*u2*vL^2 - 6*L1^2*k2*u1*vL^2 + 6*L1*k1*u3^2*vL^2 + 6*L1*k2*u2^2*vL^2 - 6*L1^2*k1*u3*vL^2 + 6*L1^2*k2*u2*vL^2 - 6*L*k1*u2^2*wL^2 + 6*L^2*k1*u2*wL^2 - 6*L*k1*u3^2*wL^2 + 6*L1*k1*u2^2*wL^2 + 6*L1*k2*u1^2*wL^2 - 6*L^2*k1*u3*wL^2 + 6*L1^2*k1*u2*wL^2 - 6*L1^2*k2*u1*wL^2 + 6*L1*k1*u3^2*wL^2 + 6*L1*k2*u2^2*wL^2 - 6*L1^2*k1*u3*wL^2 + 6*L1^2*k2*u2*wL^2 - 6*k2*u1*u2^2*vL^2 + 6*k2*u1^2*u2*vL^2 + 6*k1*u2*u3^2*vL^2 - 6*k1*u2^2*u3*vL^2 - 6*k2*u1*u2^2*wL^2 + 6*k2*u1^2*u2*wL^2 + 6*k1*u2*u3^2*wL^2 - 6*k1*u2^2*u3*wL^2 - 3*L*L1*k1*u1*u2^2 - 6*L*L1^2*k1*u1*u2 + 3*L^2*L1*k1*u1*u2 - 3*L*L1*k1*u1*u3^2 - 12*L*L1*k2*u1*u2^2 + 9*L*L1*k2*u1^2*u2 + 6*L*L1^2*k1*u1*u3 - 15*L*L1^2*k2*u1*u2 - 3*L^2*L1*k1*u1*u3 + 6*L^2*L1*k2*u1*u2 + 3*L*L1*k1*u2*u3^2 - 6*L*L1*k1*u2^2*u3 - 3*L*L1*k2*u1^2*u3 - 12*L*L1^2*k1*u2*u3 + 3*L*L1^2*k2*u1*u3 + 3*L^2*L1*k1*u2*u3 - 3*L*L1*k2*u2^2*u3 - 3*L*L1^2*k2*u2*u3 - 12*L*L1*k1*u2*vL^2 + 12*L*L1*k1*u3*vL^2 - 12*L*L1*k1*u2*wL^2 + 12*L*L1*k1*u3*wL^2 + 3*L*k2*u1*u2^2*u3 - 3*L*k2*u1^2*u2*u3 + 3*L1*k1*u1*u2*u3^2 - 3*L1*k1*u1*u2^2*u3 - 6*L1^2*k1*u1*u2*u3 - 3*L1*k2*u1*u2^2*u3 + 3*L1*k2*u1^2*u2*u3 - 6*L1^2*k2*u1*u2*u3 + 12*L*k1*u2*u3*vL^2 - 12*L1*k2*u1*u2*vL^2 - 12*L1*k1*u2*u3*vL^2 + 12*L*k1*u2*u3*wL^2 - 12*L1*k2*u1*u2*wL^2 - 12*L1*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2*u3 + 6*L*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^3) - (dm^2*k1*l2^2*up1*sin(2*alfa + 2*teta2)*(L1*u1 - L1*u2 - L1^2 + 2*vL^2 + 2*wL^2))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3), (k2*up3*(2*dm^2*l2^2*wL*cos(2*alfa + 2*teta2) - 2*dm^2*l2^2*vL*sin(2*alfa + 2*teta2))*(L*u2 - L*u3 - L1*u2 + L1*u3 - L^2 - L1^2 + 2*vL^2 + 2*wL^2 + 2*L*L1))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L - L1 - u2 + u3)^3) - vpL*((2*vL*(2*dm^2*l2^2*wL*cos(2*alfa + 2*teta2) - 2*dm^2*l2^2*vL*sin(2*alfa + 2*teta2))*(L^2*k1 + L1^2*k1 + L1^2*k2 + k1*u2^2 + k2*u1^2 + k1*u3^2 + k2*u2^2 - 2*L*L1*k1 - 2*L*k1*u2 + 2*L*k1*u3 + 2*L1*k1*u2 - 2*L1*k2*u1 - 2*L1*k1*u3 + 2*L1*k2*u2 - 2*k2*u1*u2 - 2*k1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (4*dm^2*l2^2*sin(2*alfa + 2*teta2)*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2)) - wpL*((2*wL*(2*dm^2*l2^2*wL*cos(2*alfa + 2*teta2) - 2*dm^2*l2^2*vL*sin(2*alfa + 2*teta2))*(L^2*k1 + L1^2*k1 + L1^2*k2 + k1*u2^2 + k2*u1^2 + k1*u3^2 + k2*u2^2 - 2*L*L1*k1 - 2*L*k1*u2 + 2*L*k1*u3 + 2*L1*k1*u2 - 2*L1*k2*u1 - 2*L1*k1*u3 + 2*L1*k2*u2 - 2*k2*u1*u2 - 2*k1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (4*dm^2*l2^2*cos(2*alfa + 2*teta2)*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2)) - (up2*(2*dm^2*l2^2*wL*cos(2*alfa + 2*teta2) - 2*dm^2*l2^2*vL*sin(2*alfa + 2*teta2))*(L^3*L1^2*k1 - L1^5*k2 - 3*L^2*L1^3*k1 - L1^5*k1 - L^2*L1^3*k2 + L^2*k2*u1^3 - L^2*k2*u2^3 - 4*L1^2*k1*u2^3 + L1^2*k2*u1^3 - 6*L1^3*k1*u2^2 - 3*L1^3*k2*u1^2 + L1^2*k1*u3^3 - 4*L1^2*k2*u2^3 - 3*L1^3*k1*u3^2 - 6*L1^3*k2*u2^2 - 2*L^3*k1*vL^2 + 2*L1^3*k1*vL^2 + 2*L1^3*k2*vL^2 - 2*L^3*k1*wL^2 + 2*L1^3*k1*wL^2 + 2*L1^3*k2*wL^2 + 2*k1*u2^3*vL^2 - 2*k2*u1^3*vL^2 - 2*k1*u3^3*vL^2 + 2*k2*u2^3*vL^2 + 2*k1*u2^3*wL^2 - 2*k2*u1^3*wL^2 - 2*k1*u3^3*wL^2 + 2*k2*u2^3*wL^2 + 3*L*L1^4*k1 + 2*L*L1^4*k2 + L1^4*k1*u1 + L*k2*u2^4 - L1*k1*u2^4 - 4*L1^4*k1*u2 + 3*L1^4*k2*u1 - L1*k2*u2^4 + 3*L1^4*k1*u3 - 4*L1^4*k2*u2 + L1^4*k2*u3 - 3*L*L1^3*k1*u1 - L^3*L1*k1*u1 + 3*L*L1*k1*u2^3 - 2*L*L1*k2*u1^3 + 9*L*L1^3*k1*u2 - 6*L*L1^3*k2*u1 + L^3*L1*k1*u2 + 5*L*L1*k2*u2^3 - 6*L*L1^3*k1*u3 + 7*L*L1^3*k2*u2 - L*L1^3*k2*u3 - 3*L*k2*u1*u2^3 - L*k2*u1^3*u2 + L1*k1*u1*u2^3 + 3*L1^3*k1*u1*u2 + L*k2*u1^3*u3 - L1*k1*u1*u3^3 + 3*L1*k2*u1*u2^3 + L1*k2*u1^3*u2 - 3*L1^3*k1*u1*u3 + 9*L1^3*k2*u1*u2 - L*k2*u2^3*u3 + L1*k1*u2*u3^3 + 3*L1*k1*u2^3*u3 - L1*k2*u1^3*u3 + 9*L1^3*k1*u2*u3 - 3*L1^3*k2*u1*u3 + L1*k2*u2^3*u3 + 3*L1^3*k2*u2*u3 + 3*L^2*L1^2*k1*u1 + 9*L*L1^2*k1*u2^2 + 6*L*L1^2*k2*u1^2 - 3*L^2*L1*k1*u2^2 - 3*L^2*L1*k2*u1^2 - 6*L^2*L1^2*k1*u2 + 3*L^2*L1^2*k2*u1 + 3*L*L1^2*k1*u3^2 + 9*L*L1^2*k2*u2^2 - 3*L^2*L1*k2*u2^2 + 3*L^2*L1^2*k1*u3 - 3*L^2*L1^2*k2*u2 - 6*L*L1^2*k1*vL^2 + 6*L^2*L1*k1*vL^2 - 6*L*L1^2*k1*wL^2 + 6*L^2*L1*k1*wL^2 + 3*L*k2*u1^2*u2^2 + 3*L^2*k2*u1*u2^2 - 3*L^2*k2*u1^2*u2 + 3*L1^2*k1*u1*u2^2 - 3*L1*k2*u1^2*u2^2 + 3*L1^2*k1*u1*u3^2 + 9*L1^2*k2*u1*u2^2 - 6*L1^2*k2*u1^2*u2 - 3*L1*k1*u2^2*u3^2 - 6*L1^2*k1*u2*u3^2 + 9*L1^2*k1*u2^2*u3 + 3*L1^2*k2*u1^2*u3 + 3*L1^2*k2*u2^2*u3 - 6*L*k1*u2^2*vL^2 + 6*L^2*k1*u2*vL^2 - 6*L*k1*u3^2*vL^2 + 6*L1*k1*u2^2*vL^2 + 6*L1*k2*u1^2*vL^2 - 6*L^2*k1*u3*vL^2 + 6*L1^2*k1*u2*vL^2 - 6*L1^2*k2*u1*vL^2 + 6*L1*k1*u3^2*vL^2 + 6*L1*k2*u2^2*vL^2 - 6*L1^2*k1*u3*vL^2 + 6*L1^2*k2*u2*vL^2 - 6*L*k1*u2^2*wL^2 + 6*L^2*k1*u2*wL^2 - 6*L*k1*u3^2*wL^2 + 6*L1*k1*u2^2*wL^2 + 6*L1*k2*u1^2*wL^2 - 6*L^2*k1*u3*wL^2 + 6*L1^2*k1*u2*wL^2 - 6*L1^2*k2*u1*wL^2 + 6*L1*k1*u3^2*wL^2 + 6*L1*k2*u2^2*wL^2 - 6*L1^2*k1*u3*wL^2 + 6*L1^2*k2*u2*wL^2 - 6*k2*u1*u2^2*vL^2 + 6*k2*u1^2*u2*vL^2 + 6*k1*u2*u3^2*vL^2 - 6*k1*u2^2*u3*vL^2 - 6*k2*u1*u2^2*wL^2 + 6*k2*u1^2*u2*wL^2 + 6*k1*u2*u3^2*wL^2 - 6*k1*u2^2*u3*wL^2 - 3*L*L1*k1*u1*u2^2 - 6*L*L1^2*k1*u1*u2 + 3*L^2*L1*k1*u1*u2 - 3*L*L1*k1*u1*u3^2 - 12*L*L1*k2*u1*u2^2 + 9*L*L1*k2*u1^2*u2 + 6*L*L1^2*k1*u1*u3 - 15*L*L1^2*k2*u1*u2 - 3*L^2*L1*k1*u1*u3 + 6*L^2*L1*k2*u1*u2 + 3*L*L1*k1*u2*u3^2 - 6*L*L1*k1*u2^2*u3 - 3*L*L1*k2*u1^2*u3 - 12*L*L1^2*k1*u2*u3 + 3*L*L1^2*k2*u1*u3 + 3*L^2*L1*k1*u2*u3 - 3*L*L1*k2*u2^2*u3 - 3*L*L1^2*k2*u2*u3 - 12*L*L1*k1*u2*vL^2 + 12*L*L1*k1*u3*vL^2 - 12*L*L1*k1*u2*wL^2 + 12*L*L1*k1*u3*wL^2 + 3*L*k2*u1*u2^2*u3 - 3*L*k2*u1^2*u2*u3 + 3*L1*k1*u1*u2*u3^2 - 3*L1*k1*u1*u2^2*u3 - 6*L1^2*k1*u1*u2*u3 - 3*L1*k2*u1*u2^2*u3 + 3*L1*k2*u1^2*u2*u3 - 6*L1^2*k2*u1*u2*u3 + 12*L*k1*u2*u3*vL^2 - 12*L1*k2*u1*u2*vL^2 - 12*L1*k1*u2*u3*vL^2 + 12*L*k1*u2*u3*wL^2 - 12*L1*k2*u1*u2*wL^2 - 12*L1*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2*u3 + 6*L*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^3) - (k1*up1*(2*dm^2*l2^2*wL*cos(2*alfa + 2*teta2) - 2*dm^2*l2^2*vL*sin(2*alfa + 2*teta2))*(L1*u1 - L1*u2 - L1^2 + 2*vL^2 + 2*wL^2))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3) + (4*dm^2*l2^2*tetap2*(2*vL*cos(2*alfa + 2*teta2) + 2*wL*sin(2*alfa + 2*teta2))*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), vpL*((2*(2*Ib2*dm + dm^2*l2^2 + 2*Ib2*Mb2 - dm^2*l2^2*cos(2*alfa + 2*teta2) + 2*Mb2*dm*l2^2)*(2*k1*u1*u2^2 - k1*u2^3 - k2*u2^3 - (L1^3*k2)/2 - k1*u1^2*u2 + k1*u1^2*u3 + 2*k2*u1*u2^2 - k2*u1^2*u2 + k1*u2^2*u3 + k2*u1^2*u3 + k2*u2^2*u3 - k1*u2*vL^2 + k1*u3*vL^2 - k1*u2*wL^2 + k1*u3*wL^2 + (L*L1^2*k2)/2 + L*k1*u1^2 + L*k1*u2^2 + (L*k2*u1^2)/2 - L1*k1*u1^2 + L1^2*k1*u1 + (L*k2*u2^2)/2 - 2*L1*k1*u2^2 - (L1*k2*u1^2)/2 - L1^2*k1*u2 + L1^2*k2*u1 - (5*L1*k2*u2^2)/2 - 2*L1^2*k2*u2 + L1^2*k2*u3 + L*k1*vL^2 - L1*k1*vL^2 + L*k1*wL^2 - L1*k1*wL^2 - 2*L*k1*u1*u2 - L*k2*u1*u2 + 3*L1*k1*u1*u2 - L1*k1*u1*u3 + 3*L1*k2*u1*u2 + L1*k1*u2*u3 - 2*L1*k2*u1*u3 + 2*L1*k2*u2*u3 - 2*k1*u1*u2*u3 - 2*k2*u1*u2*u3 - L*L1*k1*u1 + L*L1*k1*u2 - L*L1*k2*u1 + L*L1*k2*u2))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (4*(2*Ib2*dm + dm^2*l2^2 + 2*Ib2*Mb2 - dm^2*l2^2*cos(2*alfa + 2*teta2) + 2*Mb2*dm*l2^2)*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3) - (4*vL*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*(L^2*k1 + L1^2*k1 + L1^2*k2 + k1*u2^2 + k2*u1^2 + k1*u3^2 + k2*u2^2 - 2*L*L1*k1 - 2*L*k1*u2 + 2*L*k1*u3 + 2*L1*k1*u2 - 2*L1*k2*u1 - 2*L1*k1*u3 + 2*L1*k2*u2 - 2*k2*u1*u2 - 2*k1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3) + (2*vL*(2*L*k1 - 2*L1*k1 - 2*k1*u2 + 2*k1*u3)*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2)))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2)) - wpL*((4*wL*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*(L^2*k1 + L1^2*k1 + L1^2*k2 + k1*u2^2 + k2*u1^2 + k1*u3^2 + k2*u2^2 - 2*L*L1*k1 - 2*L*k1*u2 + 2*L*k1*u3 + 2*L1*k1*u2 - 2*L1*k2*u1 - 2*L1*k1*u3 + 2*L1*k2*u2 - 2*k2*u1*u2 - 2*k1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3) - (2*wL*(2*L*k1 - 2*L1*k1 - 2*k1*u2 + 2*k1*u3)*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2)))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (2*dm^2*l2^2*sin(2*alfa + 2*teta2)*(2*k1*u1*u2^2 - k1*u2^3 - k2*u2^3 - (L1^3*k2)/2 - k1*u1^2*u2 + k1*u1^2*u3 + 2*k2*u1*u2^2 - k2*u1^2*u2 + k1*u2^2*u3 + k2*u1^2*u3 + k2*u2^2*u3 - k1*u2*vL^2 + k1*u3*vL^2 - k1*u2*wL^2 + k1*u3*wL^2 + (L*L1^2*k2)/2 + L*k1*u1^2 + L*k1*u2^2 + (L*k2*u1^2)/2 - L1*k1*u1^2 + L1^2*k1*u1 + (L*k2*u2^2)/2 - 2*L1*k1*u2^2 - (L1*k2*u1^2)/2 - L1^2*k1*u2 + L1^2*k2*u1 - (5*L1*k2*u2^2)/2 - 2*L1^2*k2*u2 + L1^2*k2*u3 + L*k1*vL^2 - L1*k1*vL^2 + L*k1*wL^2 - L1*k1*wL^2 - 2*L*k1*u1*u2 - L*k2*u1*u2 + 3*L1*k1*u1*u2 - L1*k1*u1*u3 + 3*L1*k2*u1*u2 + L1*k1*u2*u3 - 2*L1*k2*u1*u3 + 2*L1*k2*u2*u3 - 2*k1*u1*u2*u3 - 2*k2*u1*u2*u3 - L*L1*k1*u1 + L*L1*k1*u2 - L*L1*k2*u1 + L*L1*k2*u2))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (4*dm^2*l2^2*sin(2*alfa + 2*teta2)*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3)) + (k2*up3*(L - L1)*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2)))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L - L1 - u2 + u3)^3) + (3*k2*up3*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*(L*u2 - L*u3 - L1*u2 + L1*u3 - L^2 - L1^2 + 2*vL^2 + 2*wL^2 + 2*L*L1))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L - L1 - u2 + u3)^4) - (3*up2*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*(L^3*L1^2*k1 - L1^5*k2 - 3*L^2*L1^3*k1 - L1^5*k1 - L^2*L1^3*k2 + L^2*k2*u1^3 - L^2*k2*u2^3 - 4*L1^2*k1*u2^3 + L1^2*k2*u1^3 - 6*L1^3*k1*u2^2 - 3*L1^3*k2*u1^2 + L1^2*k1*u3^3 - 4*L1^2*k2*u2^3 - 3*L1^3*k1*u3^2 - 6*L1^3*k2*u2^2 - 2*L^3*k1*vL^2 + 2*L1^3*k1*vL^2 + 2*L1^3*k2*vL^2 - 2*L^3*k1*wL^2 + 2*L1^3*k1*wL^2 + 2*L1^3*k2*wL^2 + 2*k1*u2^3*vL^2 - 2*k2*u1^3*vL^2 - 2*k1*u3^3*vL^2 + 2*k2*u2^3*vL^2 + 2*k1*u2^3*wL^2 - 2*k2*u1^3*wL^2 - 2*k1*u3^3*wL^2 + 2*k2*u2^3*wL^2 + 3*L*L1^4*k1 + 2*L*L1^4*k2 + L1^4*k1*u1 + L*k2*u2^4 - L1*k1*u2^4 - 4*L1^4*k1*u2 + 3*L1^4*k2*u1 - L1*k2*u2^4 + 3*L1^4*k1*u3 - 4*L1^4*k2*u2 + L1^4*k2*u3 - 3*L*L1^3*k1*u1 - L^3*L1*k1*u1 + 3*L*L1*k1*u2^3 - 2*L*L1*k2*u1^3 + 9*L*L1^3*k1*u2 - 6*L*L1^3*k2*u1 + L^3*L1*k1*u2 + 5*L*L1*k2*u2^3 - 6*L*L1^3*k1*u3 + 7*L*L1^3*k2*u2 - L*L1^3*k2*u3 - 3*L*k2*u1*u2^3 - L*k2*u1^3*u2 + L1*k1*u1*u2^3 + 3*L1^3*k1*u1*u2 + L*k2*u1^3*u3 - L1*k1*u1*u3^3 + 3*L1*k2*u1*u2^3 + L1*k2*u1^3*u2 - 3*L1^3*k1*u1*u3 + 9*L1^3*k2*u1*u2 - L*k2*u2^3*u3 + L1*k1*u2*u3^3 + 3*L1*k1*u2^3*u3 - L1*k2*u1^3*u3 + 9*L1^3*k1*u2*u3 - 3*L1^3*k2*u1*u3 + L1*k2*u2^3*u3 + 3*L1^3*k2*u2*u3 + 3*L^2*L1^2*k1*u1 + 9*L*L1^2*k1*u2^2 + 6*L*L1^2*k2*u1^2 - 3*L^2*L1*k1*u2^2 - 3*L^2*L1*k2*u1^2 - 6*L^2*L1^2*k1*u2 + 3*L^2*L1^2*k2*u1 + 3*L*L1^2*k1*u3^2 + 9*L*L1^2*k2*u2^2 - 3*L^2*L1*k2*u2^2 + 3*L^2*L1^2*k1*u3 - 3*L^2*L1^2*k2*u2 - 6*L*L1^2*k1*vL^2 + 6*L^2*L1*k1*vL^2 - 6*L*L1^2*k1*wL^2 + 6*L^2*L1*k1*wL^2 + 3*L*k2*u1^2*u2^2 + 3*L^2*k2*u1*u2^2 - 3*L^2*k2*u1^2*u2 + 3*L1^2*k1*u1*u2^2 - 3*L1*k2*u1^2*u2^2 + 3*L1^2*k1*u1*u3^2 + 9*L1^2*k2*u1*u2^2 - 6*L1^2*k2*u1^2*u2 - 3*L1*k1*u2^2*u3^2 - 6*L1^2*k1*u2*u3^2 + 9*L1^2*k1*u2^2*u3 + 3*L1^2*k2*u1^2*u3 + 3*L1^2*k2*u2^2*u3 - 6*L*k1*u2^2*vL^2 + 6*L^2*k1*u2*vL^2 - 6*L*k1*u3^2*vL^2 + 6*L1*k1*u2^2*vL^2 + 6*L1*k2*u1^2*vL^2 - 6*L^2*k1*u3*vL^2 + 6*L1^2*k1*u2*vL^2 - 6*L1^2*k2*u1*vL^2 + 6*L1*k1*u3^2*vL^2 + 6*L1*k2*u2^2*vL^2 - 6*L1^2*k1*u3*vL^2 + 6*L1^2*k2*u2*vL^2 - 6*L*k1*u2^2*wL^2 + 6*L^2*k1*u2*wL^2 - 6*L*k1*u3^2*wL^2 + 6*L1*k1*u2^2*wL^2 + 6*L1*k2*u1^2*wL^2 - 6*L^2*k1*u3*wL^2 + 6*L1^2*k1*u2*wL^2 - 6*L1^2*k2*u1*wL^2 + 6*L1*k1*u3^2*wL^2 + 6*L1*k2*u2^2*wL^2 - 6*L1^2*k1*u3*wL^2 + 6*L1^2*k2*u2*wL^2 - 6*k2*u1*u2^2*vL^2 + 6*k2*u1^2*u2*vL^2 + 6*k1*u2*u3^2*vL^2 - 6*k1*u2^2*u3*vL^2 - 6*k2*u1*u2^2*wL^2 + 6*k2*u1^2*u2*wL^2 + 6*k1*u2*u3^2*wL^2 - 6*k1*u2^2*u3*wL^2 - 3*L*L1*k1*u1*u2^2 - 6*L*L1^2*k1*u1*u2 + 3*L^2*L1*k1*u1*u2 - 3*L*L1*k1*u1*u3^2 - 12*L*L1*k2*u1*u2^2 + 9*L*L1*k2*u1^2*u2 + 6*L*L1^2*k1*u1*u3 - 15*L*L1^2*k2*u1*u2 - 3*L^2*L1*k1*u1*u3 + 6*L^2*L1*k2*u1*u2 + 3*L*L1*k1*u2*u3^2 - 6*L*L1*k1*u2^2*u3 - 3*L*L1*k2*u1^2*u3 - 12*L*L1^2*k1*u2*u3 + 3*L*L1^2*k2*u1*u3 + 3*L^2*L1*k1*u2*u3 - 3*L*L1*k2*u2^2*u3 - 3*L*L1^2*k2*u2*u3 - 12*L*L1*k1*u2*vL^2 + 12*L*L1*k1*u3*vL^2 - 12*L*L1*k1*u2*wL^2 + 12*L*L1*k1*u3*wL^2 + 3*L*k2*u1*u2^2*u3 - 3*L*k2*u1^2*u2*u3 + 3*L1*k1*u1*u2*u3^2 - 3*L1*k1*u1*u2^2*u3 - 6*L1^2*k1*u1*u2*u3 - 3*L1*k2*u1*u2^2*u3 + 3*L1*k2*u1^2*u2*u3 - 6*L1^2*k2*u1*u2*u3 + 12*L*k1*u2*u3*vL^2 - 12*L1*k2*u1*u2*vL^2 - 12*L1*k1*u2*u3*vL^2 + 12*L*k1*u2*u3*wL^2 - 12*L1*k2*u1*u2*wL^2 - 12*L1*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2*u3 + 6*L*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^4) - (up2*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*(6*L^2*k1*vL^2 - L1^4*k2 - 3*L^2*L1^2*k1 - 9*L1^2*k1*u2^2 - 3*L1^2*k2*u1^2 - 3*L1^2*k1*u3^2 - 3*L1^2*k2*u2^2 - 3*L1^4*k1 + 6*L1^2*k1*vL^2 + 6*L^2*k1*wL^2 + 6*L1^2*k1*wL^2 + 6*k1*u2^2*vL^2 + 6*k1*u3^2*vL^2 + 6*k1*u2^2*wL^2 + 6*k1*u3^2*wL^2 + 6*L*L1^3*k1 + L*L1^3*k2 - L*k2*u1^3 + 3*L1^3*k1*u1 + L*k2*u2^3 - 3*L1*k1*u2^3 + L1*k2*u1^3 - 9*L1^3*k1*u2 + 3*L1^3*k2*u1 - L1*k2*u2^3 + 6*L1^3*k1*u3 - 3*L1^3*k2*u2 - 6*L*L1^2*k1*u1 + 3*L^2*L1*k1*u1 + 6*L*L1*k1*u2^2 + 3*L*L1*k2*u1^2 + 12*L*L1^2*k1*u2 - 3*L*L1^2*k2*u1 - 3*L^2*L1*k1*u2 + 3*L*L1*k2*u2^2 - 6*L*L1^2*k1*u3 + 3*L*L1^2*k2*u2 - 12*L*L1*k1*vL^2 - 12*L*L1*k1*wL^2 - 3*L*k2*u1*u2^2 + 3*L*k2*u1^2*u2 + 3*L1*k1*u1*u2^2 + 6*L1^2*k1*u1*u2 + 3*L1*k1*u1*u3^2 + 3*L1*k2*u1*u2^2 - 3*L1*k2*u1^2*u2 - 6*L1^2*k1*u1*u3 + 6*L1^2*k2*u1*u2 - 3*L1*k1*u2*u3^2 + 6*L1*k1*u2^2*u3 + 12*L1^2*k1*u2*u3 - 12*L*k1*u2*vL^2 + 12*L*k1*u3*vL^2 + 12*L1*k1*u2*vL^2 - 12*L1*k1*u3*vL^2 - 12*L*k1*u2*wL^2 + 12*L*k1*u3*wL^2 + 12*L1*k1*u2*wL^2 - 12*L1*k1*u3*wL^2 - 12*k1*u2*u3*vL^2 - 12*k1*u2*u3*wL^2 - 6*L*L1*k1*u1*u2 + 6*L*L1*k1*u1*u3 - 6*L*L1*k2*u1*u2 - 6*L*L1*k1*u2*u3 - 6*L1*k1*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^3) - (4*dm^2*l2^2*tetap2*(wL*cos(2*alfa + 2*teta2) - vL*sin(2*alfa + 2*teta2))*(2*k1*u1*u2^2 - k1*u2^3 - k2*u2^3 - (L1^3*k2)/2 - k1*u1^2*u2 + k1*u1^2*u3 + 2*k2*u1*u2^2 - k2*u1^2*u2 + k1*u2^2*u3 + k2*u1^2*u3 + k2*u2^2*u3 - k1*u2*vL^2 + k1*u3*vL^2 - k1*u2*wL^2 + k1*u3*wL^2 + (L*L1^2*k2)/2 + L*k1*u1^2 + L*k1*u2^2 + (L*k2*u1^2)/2 - L1*k1*u1^2 + L1^2*k1*u1 + (L*k2*u2^2)/2 - 2*L1*k1*u2^2 - (L1*k2*u1^2)/2 - L1^2*k1*u2 + L1^2*k2*u1 - (5*L1*k2*u2^2)/2 - 2*L1^2*k2*u2 + L1^2*k2*u3 + L*k1*vL^2 - L1*k1*vL^2 + L*k1*wL^2 - L1*k1*wL^2 - 2*L*k1*u1*u2 - L*k2*u1*u2 + 3*L1*k1*u1*u2 - L1*k1*u1*u3 + 3*L1*k2*u1*u2 + L1*k1*u2*u3 - 2*L1*k2*u1*u3 + 2*L1*k2*u2*u3 - 2*k1*u1*u2*u3 - 2*k2*u1*u2*u3 - L*L1*k1*u1 + L*L1*k1*u2 - L*L1*k2*u1 + L*L1*k2*u2))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (8*dm^2*l2^2*tetap2*(wL*cos(2*alfa + 2*teta2) - vL*sin(2*alfa + 2*teta2))*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3), 0, (k1*(L1*u1 - L1*u2 - L1^2 + 2*vL^2 + 2*wL^2)*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2)))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3), 0, ((dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*(L^3*L1^2*k1 - L1^5*k2 - 3*L^2*L1^3*k1 - L1^5*k1 - L^2*L1^3*k2 + L^2*k2*u1^3 - L^2*k2*u2^3 - 4*L1^2*k1*u2^3 + L1^2*k2*u1^3 - 6*L1^3*k1*u2^2 - 3*L1^3*k2*u1^2 + L1^2*k1*u3^3 - 4*L1^2*k2*u2^3 - 3*L1^3*k1*u3^2 - 6*L1^3*k2*u2^2 - 2*L^3*k1*vL^2 + 2*L1^3*k1*vL^2 + 2*L1^3*k2*vL^2 - 2*L^3*k1*wL^2 + 2*L1^3*k1*wL^2 + 2*L1^3*k2*wL^2 + 2*k1*u2^3*vL^2 - 2*k2*u1^3*vL^2 - 2*k1*u3^3*vL^2 + 2*k2*u2^3*vL^2 + 2*k1*u2^3*wL^2 - 2*k2*u1^3*wL^2 - 2*k1*u3^3*wL^2 + 2*k2*u2^3*wL^2 + 3*L*L1^4*k1 + 2*L*L1^4*k2 + L1^4*k1*u1 + L*k2*u2^4 - L1*k1*u2^4 - 4*L1^4*k1*u2 + 3*L1^4*k2*u1 - L1*k2*u2^4 + 3*L1^4*k1*u3 - 4*L1^4*k2*u2 + L1^4*k2*u3 - 3*L*L1^3*k1*u1 - L^3*L1*k1*u1 + 3*L*L1*k1*u2^3 - 2*L*L1*k2*u1^3 + 9*L*L1^3*k1*u2 - 6*L*L1^3*k2*u1 + L^3*L1*k1*u2 + 5*L*L1*k2*u2^3 - 6*L*L1^3*k1*u3 + 7*L*L1^3*k2*u2 - L*L1^3*k2*u3 - 3*L*k2*u1*u2^3 - L*k2*u1^3*u2 + L1*k1*u1*u2^3 + 3*L1^3*k1*u1*u2 + L*k2*u1^3*u3 - L1*k1*u1*u3^3 + 3*L1*k2*u1*u2^3 + L1*k2*u1^3*u2 - 3*L1^3*k1*u1*u3 + 9*L1^3*k2*u1*u2 - L*k2*u2^3*u3 + L1*k1*u2*u3^3 + 3*L1*k1*u2^3*u3 - L1*k2*u1^3*u3 + 9*L1^3*k1*u2*u3 - 3*L1^3*k2*u1*u3 + L1*k2*u2^3*u3 + 3*L1^3*k2*u2*u3 + 3*L^2*L1^2*k1*u1 + 9*L*L1^2*k1*u2^2 + 6*L*L1^2*k2*u1^2 - 3*L^2*L1*k1*u2^2 - 3*L^2*L1*k2*u1^2 - 6*L^2*L1^2*k1*u2 + 3*L^2*L1^2*k2*u1 + 3*L*L1^2*k1*u3^2 + 9*L*L1^2*k2*u2^2 - 3*L^2*L1*k2*u2^2 + 3*L^2*L1^2*k1*u3 - 3*L^2*L1^2*k2*u2 - 6*L*L1^2*k1*vL^2 + 6*L^2*L1*k1*vL^2 - 6*L*L1^2*k1*wL^2 + 6*L^2*L1*k1*wL^2 + 3*L*k2*u1^2*u2^2 + 3*L^2*k2*u1*u2^2 - 3*L^2*k2*u1^2*u2 + 3*L1^2*k1*u1*u2^2 - 3*L1*k2*u1^2*u2^2 + 3*L1^2*k1*u1*u3^2 + 9*L1^2*k2*u1*u2^2 - 6*L1^2*k2*u1^2*u2 - 3*L1*k1*u2^2*u3^2 - 6*L1^2*k1*u2*u3^2 + 9*L1^2*k1*u2^2*u3 + 3*L1^2*k2*u1^2*u3 + 3*L1^2*k2*u2^2*u3 - 6*L*k1*u2^2*vL^2 + 6*L^2*k1*u2*vL^2 - 6*L*k1*u3^2*vL^2 + 6*L1*k1*u2^2*vL^2 + 6*L1*k2*u1^2*vL^2 - 6*L^2*k1*u3*vL^2 + 6*L1^2*k1*u2*vL^2 - 6*L1^2*k2*u1*vL^2 + 6*L1*k1*u3^2*vL^2 + 6*L1*k2*u2^2*vL^2 - 6*L1^2*k1*u3*vL^2 + 6*L1^2*k2*u2*vL^2 - 6*L*k1*u2^2*wL^2 + 6*L^2*k1*u2*wL^2 - 6*L*k1*u3^2*wL^2 + 6*L1*k1*u2^2*wL^2 + 6*L1*k2*u1^2*wL^2 - 6*L^2*k1*u3*wL^2 + 6*L1^2*k1*u2*wL^2 - 6*L1^2*k2*u1*wL^2 + 6*L1*k1*u3^2*wL^2 + 6*L1*k2*u2^2*wL^2 - 6*L1^2*k1*u3*wL^2 + 6*L1^2*k2*u2*wL^2 - 6*k2*u1*u2^2*vL^2 + 6*k2*u1^2*u2*vL^2 + 6*k1*u2*u3^2*vL^2 - 6*k1*u2^2*u3*vL^2 - 6*k2*u1*u2^2*wL^2 + 6*k2*u1^2*u2*wL^2 + 6*k1*u2*u3^2*wL^2 - 6*k1*u2^2*u3*wL^2 - 3*L*L1*k1*u1*u2^2 - 6*L*L1^2*k1*u1*u2 + 3*L^2*L1*k1*u1*u2 - 3*L*L1*k1*u1*u3^2 - 12*L*L1*k2*u1*u2^2 + 9*L*L1*k2*u1^2*u2 + 6*L*L1^2*k1*u1*u3 - 15*L*L1^2*k2*u1*u2 - 3*L^2*L1*k1*u1*u3 + 6*L^2*L1*k2*u1*u2 + 3*L*L1*k1*u2*u3^2 - 6*L*L1*k1*u2^2*u3 - 3*L*L1*k2*u1^2*u3 - 12*L*L1^2*k1*u2*u3 + 3*L*L1^2*k2*u1*u3 + 3*L^2*L1*k1*u2*u3 - 3*L*L1*k2*u2^2*u3 - 3*L*L1^2*k2*u2*u3 - 12*L*L1*k1*u2*vL^2 + 12*L*L1*k1*u3*vL^2 - 12*L*L1*k1*u2*wL^2 + 12*L*L1*k1*u3*wL^2 + 3*L*k2*u1*u2^2*u3 - 3*L*k2*u1^2*u2*u3 + 3*L1*k1*u1*u2*u3^2 - 3*L1*k1*u1*u2^2*u3 - 6*L1^2*k1*u1*u2*u3 - 3*L1*k2*u1*u2^2*u3 + 3*L1*k2*u1^2*u2*u3 - 6*L1^2*k2*u1*u2*u3 + 12*L*k1*u2*u3*vL^2 - 12*L1*k2*u1*u2*vL^2 - 12*L1*k1*u2*u3*vL^2 + 12*L*k1*u2*u3*wL^2 - 12*L1*k2*u1*u2*wL^2 - 12*L1*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2*u3 + 6*L*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^3), (2*(2*Ib2*dm + dm^2*l2^2 + 2*Ib2*Mb2 - dm^2*l2^2*cos(2*alfa + 2*teta2) + 2*Mb2*dm*l2^2)*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (2*vL*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*(L^2*k1 + L1^2*k1 + L1^2*k2 + k1*u2^2 + k2*u1^2 + k1*u3^2 + k2*u2^2 - 2*L*L1*k1 - 2*L*k1*u2 + 2*L*k1*u3 + 2*L1*k1*u2 - 2*L1*k2*u1 - 2*L1*k1*u3 + 2*L1*k2*u2 - 2*k2*u1*u2 - 2*k1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), (2*wL*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*(L^2*k1 + L1^2*k1 + L1^2*k2 + k1*u2^2 + k2*u1^2 + k1*u3^2 + k2*u2^2 - 2*L*L1*k1 - 2*L*k1*u2 + 2*L*k1*u3 + 2*L1*k1*u2 - 2*L1*k2*u1 - 2*L1*k1*u3 + 2*L1*k2*u2 - 2*k2*u1*u2 - 2*k1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (2*dm^2*l2^2*sin(2*alfa + 2*teta2)*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), -(4*dm^2*l2^2*(wL*cos(2*alfa + 2*teta2) - vL*sin(2*alfa + 2*teta2))*((k1*u2^4)/2 + (k2*u2^4)/2 - k1*u1*u2^3 - k2*u1*u2^3 - k1*u2^3*u3 - k2*u2^3*u3 + (L^2*k1*u1^2)/2 + (L^2*k1*u2^2)/2 + (L1^2*k1*u1^2)/2 + (3*L1^2*k1*u2^2)/2 + (3*L1^2*k2*u2^2)/2 + (L1^2*k2*u3^2)/2 + (L^2*k1*vL^2)/2 + (L1^2*k1*vL^2)/2 + (L1^2*k2*vL^2)/2 + (L^2*k1*wL^2)/2 + (L1^2*k1*wL^2)/2 + (L1^2*k2*wL^2)/2 + (k1*u1^2*u2^2)/2 + (k1*u1^2*u3^2)/2 + (k2*u1^2*u2^2)/2 + (k1*u2^2*u3^2)/2 + (k2*u1^2*u3^2)/2 + (k2*u2^2*u3^2)/2 + (k1*u2^2*vL^2)/2 + (k2*u1^2*vL^2)/2 + (k1*u3^2*vL^2)/2 + (k2*u2^2*vL^2)/2 + (k1*u2^2*wL^2)/2 + (k2*u1^2*wL^2)/2 + (k1*u3^2*wL^2)/2 + (k2*u2^2*wL^2)/2 - L*k1*u2^3 - (L1^3*k1*u1)/2 - (L*k2*u2^3)/2 + (3*L1*k1*u2^3)/2 + (L1^3*k1*u2)/2 + (3*L1*k2*u2^3)/2 + (L1^3*k2*u2)/2 - (L1^3*k2*u3)/2 - L*L1*k1*u1^2 + L*L1^2*k1*u1 - (L^2*L1*k1*u1)/2 - 2*L*L1*k1*u2^2 - L*L1^2*k1*u2 + (L^2*L1*k1*u2)/2 - L*L1*k2*u2^2 - (L*L1^2*k2*u2)/2 + (L*L1^2*k2*u3)/2 - L*L1*k1*vL^2 - L*L1*k1*wL^2 + 2*L*k1*u1*u2^2 - L*k1*u1^2*u2 - L^2*k1*u1*u2 + L*k1*u1^2*u3 + L*k2*u1*u2^2 - (L*k2*u1^2*u2)/2 - (5*L1*k1*u1*u2^2)/2 + L1*k1*u1^2*u2 - 2*L1^2*k1*u1*u2 + L*k1*u2^2*u3 + (L*k2*u1^2*u3)/2 - (L1*k1*u1*u3^2)/2 - L1*k1*u1^2*u3 - 2*L1*k2*u1*u2^2 + (L1*k2*u1^2*u2)/2 + L1^2*k1*u1*u3 - L1^2*k2*u1*u2 + (L*k2*u2^2*u3)/2 + (L1*k1*u2*u3^2)/2 - 2*L1*k1*u2^2*u3 - L1*k2*u1*u3^2 - (L1*k2*u1^2*u3)/2 - L1^2*k1*u2*u3 + L1^2*k2*u1*u3 + L1*k2*u2*u3^2 - (5*L1*k2*u2^2*u3)/2 - 2*L1^2*k2*u2*u3 - L*k1*u2*vL^2 + L*k1*u3*vL^2 + L1*k1*u2*vL^2 - L1*k2*u1*vL^2 - L1*k1*u3*vL^2 + L1*k2*u2*vL^2 - L*k1*u2*wL^2 + L*k1*u3*wL^2 + L1*k1*u2*wL^2 - L1*k2*u1*wL^2 - L1*k1*u3*wL^2 + L1*k2*u2*wL^2 - k1*u1*u2*u3^2 + 2*k1*u1*u2^2*u3 - k1*u1^2*u2*u3 - k2*u1*u2*u3^2 + 2*k2*u1*u2^2*u3 - k2*u1^2*u2*u3 - k2*u1*u2*vL^2 - k1*u2*u3*vL^2 - k2*u1*u2*wL^2 - k1*u2*u3*wL^2 + 3*L*L1*k1*u1*u2 - L*L1*k1*u1*u3 + L*L1*k2*u1*u2 + L*L1*k1*u2*u3 - L*L1*k2*u1*u3 + L*L1*k2*u2*u3 - 2*L*k1*u1*u2*u3 - L*k2*u1*u2*u3 + 3*L1*k1*u1*u2*u3 + 3*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), -(k2*(dm^2*l2^2*vL + 2*Ib2*Mb2*vL + 2*Ib2*dm*vL + 2*Mb2*dm*l2^2*vL - dm^2*l2^2*vL*cos(2*alfa + 2*teta2) - dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*(L*u2 - L*u3 - L1*u2 + L1*u3 - L^2 - L1^2 + 2*vL^2 + 2*wL^2 + 2*L*L1))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L - L1 - u2 + u3)^3), 0];
ddgamaVAiMFuZTAZdZTA = simplify(ddgamaVAiMFudZTAZdZT*A);
%{
diary ('ddgamaVAiMFuZTAZdZTA.txt');
ddgamaVAiMFuZTAZdZTA % your symbolic variable
diary off
%}
ddgamaVAiMFudZTAZdZTiMG = simplify(ddgamaVAiMFudZTAZdZT*iMGz);
%{
diary ('ddgamaVAiMFudZTAZdZTiMG.txt');
ddgamaVAiMFudZTAZdZTiMG % your symbolic variable
diary off
%}
ddgamaVAiMFudZTAZdZTiMFu = simplify(ddgamaVAiMFudZTAZdZT*iMFuz);
%{
diary ('ddgamaVAiMFudZTAZdZTiMFu.txt');
ddgamaVAiMFudZTAZdZTiMFu % your symbolic variable
diary off
%}
ddgamaVAiMFudZTAZdZTBb = simplify(ddgamaVAiMFudZTAZdZT*Bb);
%{
diary ('ddgamaVAiMFudZTAZdZTBb.txt');
ddgamaVAiMFudZTAZdZTBb % your symbolic variable
diary off
%}
disp('ping_04')
ddgamaVAiMGdZTiMFudZT = [(8*dm^2*l2^2*tetap2*cos(alfa + teta2)*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^2) - (4*dm^2*l2^2*tetap2*cos(alfa + teta2)*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(L1^3*k1 + 2*k1*u2^3 + 2*k2*u2^3 - 2*k1*u1*u2^2 - 2*k1*u1*u3^2 - 2*k2*u1*u2^2 + 2*k1*u2*u3^2 - 4*k1*u2^2*u3 - 2*k2*u1*u3^2 + 2*k2*u2*u3^2 - 4*k2*u2^2*u3 - 2*k2*u1*vL^2 + 2*k2*u2*vL^2 - 2*k2*u1*wL^2 + 2*k2*u2*wL^2 - 2*L*L1^2*k1 + L^2*L1*k1 - 2*L^2*k1*u1 - 4*L*k1*u2^2 + 2*L^2*k1*u2 - 2*L1^2*k1*u1 - 2*L*k2*u2^2 + 5*L1*k1*u2^2 + 4*L1^2*k1*u2 + L1*k1*u3^2 + 4*L1*k2*u2^2 - 2*L1^2*k1*u3 + 2*L1^2*k2*u2 + 2*L1*k2*u3^2 - 2*L1^2*k2*u3 + 2*L1*k2*vL^2 + 2*L1*k2*wL^2 + 4*L*k1*u1*u2 - 4*L*k1*u1*u3 + 2*L*k2*u1*u2 - 4*L1*k1*u1*u2 + 4*L*k1*u2*u3 - 2*L*k2*u1*u3 + 4*L1*k1*u1*u3 - 2*L1*k2*u1*u2 + 2*L*k2*u2*u3 - 6*L1*k1*u2*u3 + 2*L1*k2*u1*u3 - 6*L1*k2*u2*u3 + 4*k1*u1*u2*u3 + 4*k2*u1*u2*u3 + 4*L*L1*k1*u1 - 6*L*L1*k1*u2 + 2*L*L1*k1*u3 - 2*L*L1*k2*u2 + 2*L*L1*k2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), 0, (4*dm^2*l2^2*tetap2*cos(alfa + teta2)*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(L1^3*k1 + L1^3*k2 + 4*k1*u2^3 + 4*k2*u2^3 - 6*k1*u1*u2^2 + 2*k1*u1^2*u2 - 2*k1*u1*u3^2 - 2*k1*u1^2*u3 - 6*k2*u1*u2^2 + 2*k2*u1^2*u2 + 2*k1*u2*u3^2 - 6*k1*u2^2*u3 - 2*k2*u1*u3^2 - 2*k2*u1^2*u3 + 2*k2*u2*u3^2 - 6*k2*u2^2*u3 + 2*k1*u2*vL^2 - 2*k2*u1*vL^2 - 2*k1*u3*vL^2 + 2*k2*u2*vL^2 + 2*k1*u2*wL^2 - 2*k2*u1*wL^2 - 2*k1*u3*wL^2 + 2*k2*u2*wL^2 - 2*L*L1^2*k1 + L^2*L1*k1 - L*L1^2*k2 - 2*L*k1*u1^2 - 2*L^2*k1*u1 - 6*L*k1*u2^2 - L*k2*u1^2 + 2*L1*k1*u1^2 + 2*L^2*k1*u2 - 4*L1^2*k1*u1 - 3*L*k2*u2^2 + 9*L1*k1*u2^2 + L1*k2*u1^2 + 6*L1^2*k1*u2 - 2*L1^2*k2*u1 + L1*k1*u3^2 + 9*L1*k2*u2^2 - 2*L1^2*k1*u3 + 6*L1^2*k2*u2 + 2*L1*k2*u3^2 - 4*L1^2*k2*u3 - 2*L*k1*vL^2 + 2*L1*k1*vL^2 + 2*L1*k2*vL^2 - 2*L*k1*wL^2 + 2*L1*k1*wL^2 + 2*L1*k2*wL^2 + 8*L*k1*u1*u2 - 4*L*k1*u1*u3 + 4*L*k2*u1*u2 - 10*L1*k1*u1*u2 + 4*L*k1*u2*u3 - 2*L*k2*u1*u3 + 6*L1*k1*u1*u3 - 8*L1*k2*u1*u2 + 2*L*k2*u2*u3 - 8*L1*k1*u2*u3 + 6*L1*k2*u1*u3 - 10*L1*k2*u2*u3 + 8*k1*u1*u2*u3 + 8*k2*u1*u2*u3 + 6*L*L1*k1*u1 - 8*L*L1*k1*u2 + 2*L*L1*k2*u1 + 2*L*L1*k1*u3 - 4*L*L1*k2*u2 + 2*L*L1*k2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (8*dm^2*l2^2*tetap2*cos(alfa + teta2)*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3) - (8*dm^2*l2^2*tetap2*cos(alfa + teta2)*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^2), (4*dm^2*l2^2*tetap2*cos(alfa + teta2)*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(2*k1*u2^2*vL + 2*k2*u1^2*vL + 2*k1*u3^2*vL + 2*k2*u2^2*vL + 2*L^2*k1*vL + 2*L1^2*k1*vL + 2*L1^2*k2*vL - 4*L*k1*u2*vL + 4*L*k1*u3*vL + 4*L1*k1*u2*vL - 4*L1*k2*u1*vL - 4*L1*k1*u3*vL + 4*L1*k2*u2*vL - 4*k2*u1*u2*vL - 4*k1*u2*u3*vL - 4*L*L1*k1*vL))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (4*dm^2*l2^2*tetap2*cos(alfa + teta2)*sin(alfa + teta2)*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), (4*dm^2*l2^2*tetap2*cos(alfa + teta2)^2*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (4*dm^2*l2^2*tetap2*cos(alfa + teta2)*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(2*k1*u2^2*wL + 2*k2*u1^2*wL + 2*k1*u3^2*wL + 2*k2*u2^2*wL + 2*L^2*k1*wL + 2*L1^2*k1*wL + 2*L1^2*k2*wL - 4*L*k1*u2*wL + 4*L*k1*u3*wL + 4*L1*k1*u2*wL - 4*L1*k2*u1*wL - 4*L1*k1*u3*wL + 4*L1*k2*u2*wL - 4*k2*u1*u2*wL - 4*k1*u2*u3*wL - 4*L*L1*k1*wL))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), - (4*dm^2*l2^2*tetap2*cos(alfa + teta2)*(vL*cos(alfa + teta2) + wL*sin(alfa + teta2))*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (4*dm^2*l2^2*tetap2*sin(alfa + teta2)*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), (4*dm^2*l2^2*tetap2*cos(alfa + teta2)*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(4*k1*u1*u2^2 - 2*k1*u2^3 - 2*k2*u2^3 - L1^3*k2 - 2*k1*u1^2*u2 + 2*k1*u1^2*u3 + 4*k2*u1*u2^2 - 2*k2*u1^2*u2 + 2*k1*u2^2*u3 + 2*k2*u1^2*u3 + 2*k2*u2^2*u3 - 2*k1*u2*vL^2 + 2*k1*u3*vL^2 - 2*k1*u2*wL^2 + 2*k1*u3*wL^2 + L*L1^2*k2 + 2*L*k1*u1^2 + 2*L*k1*u2^2 + L*k2*u1^2 - 2*L1*k1*u1^2 + 2*L1^2*k1*u1 + L*k2*u2^2 - 4*L1*k1*u2^2 - L1*k2*u1^2 - 2*L1^2*k1*u2 + 2*L1^2*k2*u1 - 5*L1*k2*u2^2 - 4*L1^2*k2*u2 + 2*L1^2*k2*u3 + 2*L*k1*vL^2 - 2*L1*k1*vL^2 + 2*L*k1*wL^2 - 2*L1*k1*wL^2 - 4*L*k1*u1*u2 - 2*L*k2*u1*u2 + 6*L1*k1*u1*u2 - 2*L1*k1*u1*u3 + 6*L1*k2*u1*u2 + 2*L1*k1*u2*u3 - 4*L1*k2*u1*u3 + 4*L1*k2*u2*u3 - 4*k1*u1*u2*u3 - 4*k2*u1*u2*u3 - 2*L*L1*k1*u1 + 2*L*L1*k1*u2 - 2*L*L1*k2*u1 + 2*L*L1*k2*u2))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (8*dm^2*l2^2*tetap2*cos(alfa + teta2)*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3), 0, 0, 0, 0, 0, 0, (4*dm^2*l2^2*cos(alfa + teta2)*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), 0, 0];
ddgamaVAiMGdZTiMFudZTA = simplify(ddgamaVAiMGdZTiMFudZT*A);
%{
diary ('ddgamaVAiMGdZTiMFudZTA.txt');
ddgamaVAiMGdZTiMFudZTA % your symbolic variable
diary off
%}
ddgamaVAiMGdZTiMFudZTiMG = simplify(ddgamaVAiMGdZTiMFudZT*iMGz);
%{
diary ('ddgamaVAiMGdZTiMFudZTiMG.txt');
ddgamaVAiMGdZTiMFudZTiMG % your symbolic variable
diary off
%}
ddgamaVAiMGdZTiMFudZTiMFu = simplify(ddgamaVAiMGdZTiMFudZT*iMFuz);
%{
diary ('ddgamaVAiMGdZTiMFudZTiMFu.txt');
ddgamaVAiMGdZTiMFudZTiMFu % your symbolic variable
diary off
%}
ddgamaVAiMGdZTiMFudZTBb = simplify(ddgamaVAiMGdZTiMFudZT*Bb);
%{
diary ('ddgamaVAiMGdZTiMFudZTBb.txt');
ddgamaVAiMGdZTiMFudZTBb % your symbolic variable
diary off
%}
disp('ping_05')
ddgamaVA2dtZdZT = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
ddgamaVA2dtZdZTA = simplify(ddgamaVA2dtZdZT*A);
%{
diary ('ddgamaVA2dtZdZTA.txt');
ddgamaVA2dtZdZTA % your symbolic variable
diary off
%}
ddgamaVA2dtZdZTiMG = simplify(ddgamaVA2dtZdZT*iMGz);
%{
diary ('ddgamaVA2dtZdZTiMG.txt');
ddgamaVA2dtZdZTiMG % your symbolic variable
diary off
%}
ddgamaVA2dtZdZTiMFu = simplify(ddgamaVA2dtZdZT*iMFuz);
%{
diary ('ddgamaVA2dtZdZTiMFu.txt');
ddgamaVA2dtZdZTiMFu % your symbolic variable
diary off
%}
ddgamaVA2dtZdZTBb = simplify(ddgamaVA2dtZdZT*Bb);
%{
diary ('ddgamaVA2dtZdZTBb.txt');
ddgamaVA2dtZdZTBb % your symbolic variable
diary off
%}
disp('ping_06')
dgamaWA3dt = simplify(diff(gamaWA3,t));
%{
diary ('dgamaWA3dt.txt');
dgamaWA3dt % your symbolic variable
diary off
%}
gamaWA4 = simplify(gamaWA3*A);
%{
diary ('gamaWA4.txt');
gamaWA4 % your symbolic variable
diary off
%}
gamaWA3Gz = simplify(gamaWA3*iMGz);
%{
diary ('gamaWA3Gz.txt');
gamaWA3Gz % your symbolic variable
diary off
%}
gamaWA3Fuz = simplify(gamaWA3*iMFuz);
%{
diary ('gamaWA3Fuz.txt');
gamaWA3Fuz % your symbolic variable
diary off
%}
gamaWA3Bb = simplify(gamaWA3*Bb);
%{
diary ('gamaWA3Bb.txt');
gamaWA3Bb % your symbolic variable
diary off
%}
disp('ping_07')
ddgamaWAiMGdZTAZdZT = [0, -(2*K1*dm*l2*tetap2*sin(alfa + teta2))/(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2), 0, 0, 0, (dm*l2*tetap2^3*sin(alfa + teta2))/(Mb2 + dm) + (2*dm*l2*tetap2*sin(alfa + teta2)*(K1 + K2))/(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2) + (2*dm*l2*teta2*tetap2*cos(alfa + teta2)*(K1 + K2))/(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2) - (2*K1*dm*l2*teta1*tetap2*cos(alfa + teta2))/(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2) - (2*K2*dm*l2*teta3*tetap2*cos(alfa + teta2))/(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2), 0, -(2*K2*dm*l2*tetap2*sin(alfa + teta2))/(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2), 0, 0, 0, 0, 0, (2*dm*l2*teta2*sin(alfa + teta2)*(K1 + K2))/(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2) - (2*K1*dm*l2*teta1*sin(alfa + teta2))/(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2) - (2*K2*dm*l2*teta3*sin(alfa + teta2))/(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2) - (3*dm*l2*tetap2^2*cos(alfa + teta2))/(Mb2 + dm), 0, 0];
ddgamaWAiMGdZTAZdZTA = simplify(ddgamaWAiMGdZTAZdZT*A);
%{
diary ('ddgamaWAiMGdZTAZdZTA.txt');
ddgamaWAiMGdZTAZdZTA % your symbolic variable
diary off
%}
ddgamaWAiMGdZTAZdZTiMG = simplify(ddgamaWAiMGdZTAZdZT*iMGz);
%{
diary ('ddgamaWAiMGdZTAZdZTiMG.txt');
ddgamaWAiMGdZTAZdZTiMG % your symbolic variable
diary off
%}
ddgamaWAiMGdZTAZdZTiMFu = simplify(ddgamaWAiMGdZTAZdZT*iMFuz);
%{
diary ('ddgamaWAiMGdZTAZdZTiMFu.txt');
ddgamaWAiMGdZTAZdZTiMFu % your symbolic variable
diary off
%}
ddgamaWAiMGdZTAZdZTBb = simplify(ddgamaWAiMGdZTAZdZT*Bb);
%{
diary ('ddgamaWAiMGdZTAZdZTBb.txt');
ddgamaWAiMGdZTAZdZTBb % your symbolic variable
diary off
%}
disp('ping_08')
ddgamaWAiMFudZTAZdZT = [vpL*((8*vL*(wL*dm^2*l2^2*cos(alfa + teta2)^2 - (vL*sin(2*alfa + 2*teta2)*dm^2*l2^2)/2 + Mb2*wL*dm*l2^2 + Ib2*wL*dm + Ib2*Mb2*wL)*(L^2*k1 + L1^2*k1 + L1^2*k2 + k1*u2^2 + k2*u1^2 + k1*u3^2 + k2*u2^2 - 2*L*L1*k1 - 2*L*k1*u2 + 2*L*k1*u3 + 2*L1*k1*u2 - 2*L1*k2*u1 - 2*L1*k1*u3 + 2*L1*k2*u2 - 2*k2*u1*u2 - 2*k1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^2) - (4*vL*(2*L1*k2 - 2*k2*u1 + 2*k2*u2)*(wL*dm^2*l2^2*cos(alfa + teta2)^2 - (vL*sin(2*alfa + 2*teta2)*dm^2*l2^2)/2 + Mb2*wL*dm*l2^2 + Ib2*wL*dm + Ib2*Mb2*wL))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (dm^2*l2^2*sin(2*alfa + 2*teta2)*(L1^3*k1 + 2*k1*u2^3 + 2*k2*u2^3 - 2*k1*u1*u2^2 - 2*k1*u1*u3^2 - 2*k2*u1*u2^2 + 2*k1*u2*u3^2 - 4*k1*u2^2*u3 - 2*k2*u1*u3^2 + 2*k2*u2*u3^2 - 4*k2*u2^2*u3 - 2*k2*u1*vL^2 + 2*k2*u2*vL^2 - 2*k2*u1*wL^2 + 2*k2*u2*wL^2 - 2*L*L1^2*k1 + L^2*L1*k1 - 2*L^2*k1*u1 - 4*L*k1*u2^2 + 2*L^2*k1*u2 - 2*L1^2*k1*u1 - 2*L*k2*u2^2 + 5*L1*k1*u2^2 + 4*L1^2*k1*u2 + L1*k1*u3^2 + 4*L1*k2*u2^2 - 2*L1^2*k1*u3 + 2*L1^2*k2*u2 + 2*L1*k2*u3^2 - 2*L1^2*k2*u3 + 2*L1*k2*vL^2 + 2*L1*k2*wL^2 + 4*L*k1*u1*u2 - 4*L*k1*u1*u3 + 2*L*k2*u1*u2 - 4*L1*k1*u1*u2 + 4*L*k1*u2*u3 - 2*L*k2*u1*u3 + 4*L1*k1*u1*u3 - 2*L1*k2*u1*u2 + 2*L*k2*u2*u3 - 6*L1*k1*u2*u3 + 2*L1*k2*u1*u3 - 6*L1*k2*u2*u3 + 4*k1*u1*u2*u3 + 4*k2*u1*u2*u3 + 4*L*L1*k1*u1 - 6*L*L1*k1*u2 + 2*L*L1*k1*u3 - 2*L*L1*k2*u2 + 2*L*L1*k2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (2*dm^2*l2^2*sin(2*alfa + 2*teta2)*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^2)) + wpL*((4*(dm^2*l2^2*cos(alfa + teta2)^2 + Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^2) - (2*(dm^2*l2^2*cos(alfa + teta2)^2 + Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1^3*k1 + 2*k1*u2^3 + 2*k2*u2^3 - 2*k1*u1*u2^2 - 2*k1*u1*u3^2 - 2*k2*u1*u2^2 + 2*k1*u2*u3^2 - 4*k1*u2^2*u3 - 2*k2*u1*u3^2 + 2*k2*u2*u3^2 - 4*k2*u2^2*u3 - 2*k2*u1*vL^2 + 2*k2*u2*vL^2 - 2*k2*u1*wL^2 + 2*k2*u2*wL^2 - 2*L*L1^2*k1 + L^2*L1*k1 - 2*L^2*k1*u1 - 4*L*k1*u2^2 + 2*L^2*k1*u2 - 2*L1^2*k1*u1 - 2*L*k2*u2^2 + 5*L1*k1*u2^2 + 4*L1^2*k1*u2 + L1*k1*u3^2 + 4*L1*k2*u2^2 - 2*L1^2*k1*u3 + 2*L1^2*k2*u2 + 2*L1*k2*u3^2 - 2*L1^2*k2*u3 + 2*L1*k2*vL^2 + 2*L1*k2*wL^2 + 4*L*k1*u1*u2 - 4*L*k1*u1*u3 + 2*L*k2*u1*u2 - 4*L1*k1*u1*u2 + 4*L*k1*u2*u3 - 2*L*k2*u1*u3 + 4*L1*k1*u1*u3 - 2*L1*k2*u1*u2 + 2*L*k2*u2*u3 - 6*L1*k1*u2*u3 + 2*L1*k2*u1*u3 - 6*L1*k2*u2*u3 + 4*k1*u1*u2*u3 + 4*k2*u1*u2*u3 + 4*L*L1*k1*u1 - 6*L*L1*k1*u2 + 2*L*L1*k1*u3 - 2*L*L1*k2*u2 + 2*L*L1*k2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (8*wL*(wL*dm^2*l2^2*cos(alfa + teta2)^2 - (vL*sin(2*alfa + 2*teta2)*dm^2*l2^2)/2 + Mb2*wL*dm*l2^2 + Ib2*wL*dm + Ib2*Mb2*wL)*(L^2*k1 + L1^2*k1 + L1^2*k2 + k1*u2^2 + k2*u1^2 + k1*u3^2 + k2*u2^2 - 2*L*L1*k1 - 2*L*k1*u2 + 2*L*k1*u3 + 2*L1*k1*u2 - 2*L1*k2*u1 - 2*L1*k1*u3 + 2*L1*k2*u2 - 2*k2*u1*u2 - 2*k1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^2) - (4*wL*(2*L1*k2 - 2*k2*u1 + 2*k2*u2)*(wL*dm^2*l2^2*cos(alfa + teta2)^2 - (vL*sin(2*alfa + 2*teta2)*dm^2*l2^2)/2 + Mb2*wL*dm*l2^2 + Ib2*wL*dm + Ib2*Mb2*wL))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2)) + (3*k1*up1*(L1*u1 - L1*u2 - L1^2 + 2*vL^2 + 2*wL^2)*(dm^2*l2^2*wL + 2*Ib2*Mb2*wL + 2*Ib2*dm*wL + 2*Mb2*dm*l2^2*wL + dm^2*l2^2*wL*cos(2*alfa + 2*teta2) - dm^2*l2^2*vL*sin(2*alfa + 2*teta2)))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^4) - (up2*(2*wL*dm^2*l2^2*cos(alfa + teta2)^2 - vL*sin(2*alfa + 2*teta2)*dm^2*l2^2 + 2*Mb2*wL*dm*l2^2 + 2*Ib2*wL*dm + 2*Ib2*Mb2*wL)*(6*L1^2*k2*vL^2 - 3*L1^4*k2 - 3*L^2*L1^2*k1 - 3*L^2*L1^2*k2 - 3*L^2*k2*u1^2 - 3*L^2*k2*u2^2 - 3*L1^2*k1*u2^2 - 3*L1^2*k2*u1^2 - 3*L1^2*k1*u3^2 - 9*L1^2*k2*u2^2 - L1^4*k1 + 6*L1^2*k2*wL^2 + 6*k2*u1^2*vL^2 + 6*k2*u2^2*vL^2 + 6*k2*u1^2*wL^2 + 6*k2*u2^2*wL^2 + 3*L*L1^3*k1 + L^3*L1*k1 + 6*L*L1^3*k2 + 3*L*k2*u2^3 - L1*k1*u2^3 - 3*L1^3*k1*u2 + 6*L1^3*k2*u1 + L1*k1*u3^3 - 3*L1*k2*u2^3 + 3*L1^3*k1*u3 - 9*L1^3*k2*u2 + 3*L1^3*k2*u3 + 3*L*L1*k1*u2^2 + 6*L*L1*k2*u1^2 + 6*L*L1^2*k1*u2 - 12*L*L1^2*k2*u1 - 3*L^2*L1*k1*u2 + 6*L^2*L1*k2*u1 + 3*L*L1*k1*u3^2 + 12*L*L1*k2*u2^2 - 6*L*L1^2*k1*u3 + 15*L*L1^2*k2*u2 + 3*L^2*L1*k1*u3 - 6*L^2*L1*k2*u2 - 3*L*L1^2*k2*u3 - 6*L*k2*u1*u2^2 + 3*L*k2*u1^2*u2 + 6*L^2*k2*u1*u2 - 3*L*k2*u1^2*u3 + 6*L1*k2*u1*u2^2 - 3*L1*k2*u1^2*u2 + 12*L1^2*k2*u1*u2 - 3*L*k2*u2^2*u3 - 3*L1*k1*u2*u3^2 + 3*L1*k1*u2^2*u3 + 3*L1*k2*u1^2*u3 + 6*L1^2*k1*u2*u3 - 6*L1^2*k2*u1*u3 + 3*L1*k2*u2^2*u3 + 6*L1^2*k2*u2*u3 - 12*L1*k2*u1*vL^2 + 12*L1*k2*u2*vL^2 - 12*L1*k2*u1*wL^2 + 12*L1*k2*u2*wL^2 - 12*k2*u1*u2*vL^2 - 12*k2*u1*u2*wL^2 - 18*L*L1*k2*u1*u2 - 6*L*L1*k1*u2*u3 + 6*L*L1*k2*u1*u3 - 6*L*L1*k2*u2*u3 + 6*L*k2*u1*u2*u3 - 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^3) + (3*up2*(2*wL*dm^2*l2^2*cos(alfa + teta2)^2 - vL*sin(2*alfa + 2*teta2)*dm^2*l2^2 + 2*Mb2*wL*dm*l2^2 + 2*Ib2*wL*dm + 2*Ib2*Mb2*wL)*(L^3*L1^2*k1 - L1^5*k2 - 3*L^2*L1^3*k1 - L1^5*k1 - L^2*L1^3*k2 + L^2*k2*u1^3 - L^2*k2*u2^3 - 4*L1^2*k1*u2^3 + L1^2*k2*u1^3 - 6*L1^3*k1*u2^2 - 3*L1^3*k2*u1^2 + L1^2*k1*u3^3 - 4*L1^2*k2*u2^3 - 3*L1^3*k1*u3^2 - 6*L1^3*k2*u2^2 - 2*L^3*k1*vL^2 + 2*L1^3*k1*vL^2 + 2*L1^3*k2*vL^2 - 2*L^3*k1*wL^2 + 2*L1^3*k1*wL^2 + 2*L1^3*k2*wL^2 + 2*k1*u2^3*vL^2 - 2*k2*u1^3*vL^2 - 2*k1*u3^3*vL^2 + 2*k2*u2^3*vL^2 + 2*k1*u2^3*wL^2 - 2*k2*u1^3*wL^2 - 2*k1*u3^3*wL^2 + 2*k2*u2^3*wL^2 + 3*L*L1^4*k1 + 2*L*L1^4*k2 + L1^4*k1*u1 + L*k2*u2^4 - L1*k1*u2^4 - 4*L1^4*k1*u2 + 3*L1^4*k2*u1 - L1*k2*u2^4 + 3*L1^4*k1*u3 - 4*L1^4*k2*u2 + L1^4*k2*u3 - 3*L*L1^3*k1*u1 - L^3*L1*k1*u1 + 3*L*L1*k1*u2^3 - 2*L*L1*k2*u1^3 + 9*L*L1^3*k1*u2 - 6*L*L1^3*k2*u1 + L^3*L1*k1*u2 + 5*L*L1*k2*u2^3 - 6*L*L1^3*k1*u3 + 7*L*L1^3*k2*u2 - L*L1^3*k2*u3 - 3*L*k2*u1*u2^3 - L*k2*u1^3*u2 + L1*k1*u1*u2^3 + 3*L1^3*k1*u1*u2 + L*k2*u1^3*u3 - L1*k1*u1*u3^3 + 3*L1*k2*u1*u2^3 + L1*k2*u1^3*u2 - 3*L1^3*k1*u1*u3 + 9*L1^3*k2*u1*u2 - L*k2*u2^3*u3 + L1*k1*u2*u3^3 + 3*L1*k1*u2^3*u3 - L1*k2*u1^3*u3 + 9*L1^3*k1*u2*u3 - 3*L1^3*k2*u1*u3 + L1*k2*u2^3*u3 + 3*L1^3*k2*u2*u3 + 3*L^2*L1^2*k1*u1 + 9*L*L1^2*k1*u2^2 + 6*L*L1^2*k2*u1^2 - 3*L^2*L1*k1*u2^2 - 3*L^2*L1*k2*u1^2 - 6*L^2*L1^2*k1*u2 + 3*L^2*L1^2*k2*u1 + 3*L*L1^2*k1*u3^2 + 9*L*L1^2*k2*u2^2 - 3*L^2*L1*k2*u2^2 + 3*L^2*L1^2*k1*u3 - 3*L^2*L1^2*k2*u2 - 6*L*L1^2*k1*vL^2 + 6*L^2*L1*k1*vL^2 - 6*L*L1^2*k1*wL^2 + 6*L^2*L1*k1*wL^2 + 3*L*k2*u1^2*u2^2 + 3*L^2*k2*u1*u2^2 - 3*L^2*k2*u1^2*u2 + 3*L1^2*k1*u1*u2^2 - 3*L1*k2*u1^2*u2^2 + 3*L1^2*k1*u1*u3^2 + 9*L1^2*k2*u1*u2^2 - 6*L1^2*k2*u1^2*u2 - 3*L1*k1*u2^2*u3^2 - 6*L1^2*k1*u2*u3^2 + 9*L1^2*k1*u2^2*u3 + 3*L1^2*k2*u1^2*u3 + 3*L1^2*k2*u2^2*u3 - 6*L*k1*u2^2*vL^2 + 6*L^2*k1*u2*vL^2 - 6*L*k1*u3^2*vL^2 + 6*L1*k1*u2^2*vL^2 + 6*L1*k2*u1^2*vL^2 - 6*L^2*k1*u3*vL^2 + 6*L1^2*k1*u2*vL^2 - 6*L1^2*k2*u1*vL^2 + 6*L1*k1*u3^2*vL^2 + 6*L1*k2*u2^2*vL^2 - 6*L1^2*k1*u3*vL^2 + 6*L1^2*k2*u2*vL^2 - 6*L*k1*u2^2*wL^2 + 6*L^2*k1*u2*wL^2 - 6*L*k1*u3^2*wL^2 + 6*L1*k1*u2^2*wL^2 + 6*L1*k2*u1^2*wL^2 - 6*L^2*k1*u3*wL^2 + 6*L1^2*k1*u2*wL^2 - 6*L1^2*k2*u1*wL^2 + 6*L1*k1*u3^2*wL^2 + 6*L1*k2*u2^2*wL^2 - 6*L1^2*k1*u3*wL^2 + 6*L1^2*k2*u2*wL^2 - 6*k2*u1*u2^2*vL^2 + 6*k2*u1^2*u2*vL^2 + 6*k1*u2*u3^2*vL^2 - 6*k1*u2^2*u3*vL^2 - 6*k2*u1*u2^2*wL^2 + 6*k2*u1^2*u2*wL^2 + 6*k1*u2*u3^2*wL^2 - 6*k1*u2^2*u3*wL^2 - 3*L*L1*k1*u1*u2^2 - 6*L*L1^2*k1*u1*u2 + 3*L^2*L1*k1*u1*u2 - 3*L*L1*k1*u1*u3^2 - 12*L*L1*k2*u1*u2^2 + 9*L*L1*k2*u1^2*u2 + 6*L*L1^2*k1*u1*u3 - 15*L*L1^2*k2*u1*u2 - 3*L^2*L1*k1*u1*u3 + 6*L^2*L1*k2*u1*u2 + 3*L*L1*k1*u2*u3^2 - 6*L*L1*k1*u2^2*u3 - 3*L*L1*k2*u1^2*u3 - 12*L*L1^2*k1*u2*u3 + 3*L*L1^2*k2*u1*u3 + 3*L^2*L1*k1*u2*u3 - 3*L*L1*k2*u2^2*u3 - 3*L*L1^2*k2*u2*u3 - 12*L*L1*k1*u2*vL^2 + 12*L*L1*k1*u3*vL^2 - 12*L*L1*k1*u2*wL^2 + 12*L*L1*k1*u3*wL^2 + 3*L*k2*u1*u2^2*u3 - 3*L*k2*u1^2*u2*u3 + 3*L1*k1*u1*u2*u3^2 - 3*L1*k1*u1*u2^2*u3 - 6*L1^2*k1*u1*u2*u3 - 3*L1*k2*u1*u2^2*u3 + 3*L1*k2*u1^2*u2*u3 - 6*L1^2*k2*u1*u2*u3 + 12*L*k1*u2*u3*vL^2 - 12*L1*k2*u1*u2*vL^2 - 12*L1*k1*u2*u3*vL^2 + 12*L*k1*u2*u3*wL^2 - 12*L1*k2*u1*u2*wL^2 - 12*L1*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2*u3 + 6*L*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^4*(L - L1 - u2 + u3)^3) + (L1*k1*up1*(dm^2*l2^2*wL + 2*Ib2*Mb2*wL + 2*Ib2*dm*wL + 2*Mb2*dm*l2^2*wL + dm^2*l2^2*wL*cos(2*alfa + 2*teta2) - dm^2*l2^2*vL*sin(2*alfa + 2*teta2)))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3) + (2*dm^2*l2^2*tetap2*(vL*cos(2*alfa + 2*teta2) + wL*sin(2*alfa + 2*teta2))*(L1^3*k1 + 2*k1*u2^3 + 2*k2*u2^3 - 2*k1*u1*u2^2 - 2*k1*u1*u3^2 - 2*k2*u1*u2^2 + 2*k1*u2*u3^2 - 4*k1*u2^2*u3 - 2*k2*u1*u3^2 + 2*k2*u2*u3^2 - 4*k2*u2^2*u3 - 2*k2*u1*vL^2 + 2*k2*u2*vL^2 - 2*k2*u1*wL^2 + 2*k2*u2*wL^2 - 2*L*L1^2*k1 + L^2*L1*k1 - 2*L^2*k1*u1 - 4*L*k1*u2^2 + 2*L^2*k1*u2 - 2*L1^2*k1*u1 - 2*L*k2*u2^2 + 5*L1*k1*u2^2 + 4*L1^2*k1*u2 + L1*k1*u3^2 + 4*L1*k2*u2^2 - 2*L1^2*k1*u3 + 2*L1^2*k2*u2 + 2*L1*k2*u3^2 - 2*L1^2*k2*u3 + 2*L1*k2*vL^2 + 2*L1*k2*wL^2 + 4*L*k1*u1*u2 - 4*L*k1*u1*u3 + 2*L*k2*u1*u2 - 4*L1*k1*u1*u2 + 4*L*k1*u2*u3 - 2*L*k2*u1*u3 + 4*L1*k1*u1*u3 - 2*L1*k2*u1*u2 + 2*L*k2*u2*u3 - 6*L1*k1*u2*u3 + 2*L1*k2*u1*u3 - 6*L1*k2*u2*u3 + 4*k1*u1*u2*u3 + 4*k2*u1*u2*u3 + 4*L*L1*k1*u1 - 6*L*L1*k1*u2 + 2*L*L1*k1*u3 - 2*L*L1*k2*u2 + 2*L*L1*k2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (4*dm^2*l2^2*tetap2*(vL*cos(2*alfa + 2*teta2) + wL*sin(2*alfa + 2*teta2))*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^2), 0, vpL*((8*vL*(wL*dm^2*l2^2*cos(alfa + teta2)^2 - (vL*sin(2*alfa + 2*teta2)*dm^2*l2^2)/2 + Mb2*wL*dm*l2^2 + Ib2*wL*dm + Ib2*Mb2*wL)*(L^2*k1 + L1^2*k1 + L1^2*k2 + k1*u2^2 + k2*u1^2 + k1*u3^2 + k2*u2^2 - 2*L*L1*k1 - 2*L*k1*u2 + 2*L*k1*u3 + 2*L1*k1*u2 - 2*L1*k2*u1 - 2*L1*k1*u3 + 2*L1*k2*u2 - 2*k2*u1*u2 - 2*k1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3) - (8*vL*(wL*dm^2*l2^2*cos(alfa + teta2)^2 - (vL*sin(2*alfa + 2*teta2)*dm^2*l2^2)/2 + Mb2*wL*dm*l2^2 + Ib2*wL*dm + Ib2*Mb2*wL)*(L^2*k1 + L1^2*k1 + L1^2*k2 + k1*u2^2 + k2*u1^2 + k1*u3^2 + k2*u2^2 - 2*L*L1*k1 - 2*L*k1*u2 + 2*L*k1*u3 + 2*L1*k1*u2 - 2*L1*k2*u1 - 2*L1*k1*u3 + 2*L1*k2*u2 - 2*k2*u1*u2 - 2*k1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^2) + (4*vL*(wL*dm^2*l2^2*cos(alfa + teta2)^2 - (vL*sin(2*alfa + 2*teta2)*dm^2*l2^2)/2 + Mb2*wL*dm*l2^2 + Ib2*wL*dm + Ib2*Mb2*wL)*(2*L1*k1 - 2*L*k1 + 2*L1*k2 + 2*k1*u2 - 2*k2*u1 - 2*k1*u3 + 2*k2*u2))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (dm^2*l2^2*sin(2*alfa + 2*teta2)*(L1^3*k1 + L1^3*k2 + 4*k1*u2^3 + 4*k2*u2^3 - 6*k1*u1*u2^2 + 2*k1*u1^2*u2 - 2*k1*u1*u3^2 - 2*k1*u1^2*u3 - 6*k2*u1*u2^2 + 2*k2*u1^2*u2 + 2*k1*u2*u3^2 - 6*k1*u2^2*u3 - 2*k2*u1*u3^2 - 2*k2*u1^2*u3 + 2*k2*u2*u3^2 - 6*k2*u2^2*u3 + 2*k1*u2*vL^2 - 2*k2*u1*vL^2 - 2*k1*u3*vL^2 + 2*k2*u2*vL^2 + 2*k1*u2*wL^2 - 2*k2*u1*wL^2 - 2*k1*u3*wL^2 + 2*k2*u2*wL^2 - 2*L*L1^2*k1 + L^2*L1*k1 - L*L1^2*k2 - 2*L*k1*u1^2 - 2*L^2*k1*u1 - 6*L*k1*u2^2 - L*k2*u1^2 + 2*L1*k1*u1^2 + 2*L^2*k1*u2 - 4*L1^2*k1*u1 - 3*L*k2*u2^2 + 9*L1*k1*u2^2 + L1*k2*u1^2 + 6*L1^2*k1*u2 - 2*L1^2*k2*u1 + L1*k1*u3^2 + 9*L1*k2*u2^2 - 2*L1^2*k1*u3 + 6*L1^2*k2*u2 + 2*L1*k2*u3^2 - 4*L1^2*k2*u3 - 2*L*k1*vL^2 + 2*L1*k1*vL^2 + 2*L1*k2*vL^2 - 2*L*k1*wL^2 + 2*L1*k1*wL^2 + 2*L1*k2*wL^2 + 8*L*k1*u1*u2 - 4*L*k1*u1*u3 + 4*L*k2*u1*u2 - 10*L1*k1*u1*u2 + 4*L*k1*u2*u3 - 2*L*k2*u1*u3 + 6*L1*k1*u1*u3 - 8*L1*k2*u1*u2 + 2*L*k2*u2*u3 - 8*L1*k1*u2*u3 + 6*L1*k2*u1*u3 - 10*L1*k2*u2*u3 + 8*k1*u1*u2*u3 + 8*k2*u1*u2*u3 + 6*L*L1*k1*u1 - 8*L*L1*k1*u2 + 2*L*L1*k2*u1 + 2*L*L1*k1*u3 - 4*L*L1*k2*u2 + 2*L*L1*k2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (2*dm^2*l2^2*sin(2*alfa + 2*teta2)*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3) + (2*dm^2*l2^2*sin(2*alfa + 2*teta2)*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^2)) + wpL*((4*(dm^2*l2^2*cos(alfa + teta2)^2 + Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3) - (4*(dm^2*l2^2*cos(alfa + teta2)^2 + Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^2) + (2*(dm^2*l2^2*cos(alfa + teta2)^2 + Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1^3*k1 + L1^3*k2 + 4*k1*u2^3 + 4*k2*u2^3 - 6*k1*u1*u2^2 + 2*k1*u1^2*u2 - 2*k1*u1*u3^2 - 2*k1*u1^2*u3 - 6*k2*u1*u2^2 + 2*k2*u1^2*u2 + 2*k1*u2*u3^2 - 6*k1*u2^2*u3 - 2*k2*u1*u3^2 - 2*k2*u1^2*u3 + 2*k2*u2*u3^2 - 6*k2*u2^2*u3 + 2*k1*u2*vL^2 - 2*k2*u1*vL^2 - 2*k1*u3*vL^2 + 2*k2*u2*vL^2 + 2*k1*u2*wL^2 - 2*k2*u1*wL^2 - 2*k1*u3*wL^2 + 2*k2*u2*wL^2 - 2*L*L1^2*k1 + L^2*L1*k1 - L*L1^2*k2 - 2*L*k1*u1^2 - 2*L^2*k1*u1 - 6*L*k1*u2^2 - L*k2*u1^2 + 2*L1*k1*u1^2 + 2*L^2*k1*u2 - 4*L1^2*k1*u1 - 3*L*k2*u2^2 + 9*L1*k1*u2^2 + L1*k2*u1^2 + 6*L1^2*k1*u2 - 2*L1^2*k2*u1 + L1*k1*u3^2 + 9*L1*k2*u2^2 - 2*L1^2*k1*u3 + 6*L1^2*k2*u2 + 2*L1*k2*u3^2 - 4*L1^2*k2*u3 - 2*L*k1*vL^2 + 2*L1*k1*vL^2 + 2*L1*k2*vL^2 - 2*L*k1*wL^2 + 2*L1*k1*wL^2 + 2*L1*k2*wL^2 + 8*L*k1*u1*u2 - 4*L*k1*u1*u3 + 4*L*k2*u1*u2 - 10*L1*k1*u1*u2 + 4*L*k1*u2*u3 - 2*L*k2*u1*u3 + 6*L1*k1*u1*u3 - 8*L1*k2*u1*u2 + 2*L*k2*u2*u3 - 8*L1*k1*u2*u3 + 6*L1*k2*u1*u3 - 10*L1*k2*u2*u3 + 8*k1*u1*u2*u3 + 8*k2*u1*u2*u3 + 6*L*L1*k1*u1 - 8*L*L1*k1*u2 + 2*L*L1*k2*u1 + 2*L*L1*k1*u3 - 4*L*L1*k2*u2 + 2*L*L1*k2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (8*wL*(wL*dm^2*l2^2*cos(alfa + teta2)^2 - (vL*sin(2*alfa + 2*teta2)*dm^2*l2^2)/2 + Mb2*wL*dm*l2^2 + Ib2*wL*dm + Ib2*Mb2*wL)*(L^2*k1 + L1^2*k1 + L1^2*k2 + k1*u2^2 + k2*u1^2 + k1*u3^2 + k2*u2^2 - 2*L*L1*k1 - 2*L*k1*u2 + 2*L*k1*u3 + 2*L1*k1*u2 - 2*L1*k2*u1 - 2*L1*k1*u3 + 2*L1*k2*u2 - 2*k2*u1*u2 - 2*k1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3) - (8*wL*(wL*dm^2*l2^2*cos(alfa + teta2)^2 - (vL*sin(2*alfa + 2*teta2)*dm^2*l2^2)/2 + Mb2*wL*dm*l2^2 + Ib2*wL*dm + Ib2*Mb2*wL)*(L^2*k1 + L1^2*k1 + L1^2*k2 + k1*u2^2 + k2*u1^2 + k1*u3^2 + k2*u2^2 - 2*L*L1*k1 - 2*L*k1*u2 + 2*L*k1*u3 + 2*L1*k1*u2 - 2*L1*k2*u1 - 2*L1*k1*u3 + 2*L1*k2*u2 - 2*k2*u1*u2 - 2*k1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^2) + (4*wL*(wL*dm^2*l2^2*cos(alfa + teta2)^2 - (vL*sin(2*alfa + 2*teta2)*dm^2*l2^2)/2 + Mb2*wL*dm*l2^2 + Ib2*wL*dm + Ib2*Mb2*wL)*(2*L1*k1 - 2*L*k1 + 2*L1*k2 + 2*k1*u2 - 2*k2*u1 - 2*k1*u3 + 2*k2*u2))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2)) - (3*k1*up1*(L1*u1 - L1*u2 - L1^2 + 2*vL^2 + 2*wL^2)*(dm^2*l2^2*wL + 2*Ib2*Mb2*wL + 2*Ib2*dm*wL + 2*Mb2*dm*l2^2*wL + dm^2*l2^2*wL*cos(2*alfa + 2*teta2) - dm^2*l2^2*vL*sin(2*alfa + 2*teta2)))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^4) - (k2*up3*(L - L1)*(2*wL*dm^2*l2^2*cos(alfa + teta2)^2 - vL*sin(2*alfa + 2*teta2)*dm^2*l2^2 + 2*Mb2*wL*dm*l2^2 + 2*Ib2*wL*dm + 2*Ib2*Mb2*wL))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L - L1 - u2 + u3)^3) - (3*k2*up3*(2*wL*dm^2*l2^2*cos(alfa + teta2)^2 - vL*sin(2*alfa + 2*teta2)*dm^2*l2^2 + 2*Mb2*wL*dm*l2^2 + 2*Ib2*wL*dm + 2*Ib2*Mb2*wL)*(L*u2 - L*u3 - L1*u2 + L1*u3 - L^2 - L1^2 + 2*vL^2 + 2*wL^2 + 2*L*L1))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L - L1 - u2 + u3)^4) + (3*up2*(2*wL*dm^2*l2^2*cos(alfa + teta2)^2 - vL*sin(2*alfa + 2*teta2)*dm^2*l2^2 + 2*Mb2*wL*dm*l2^2 + 2*Ib2*wL*dm + 2*Ib2*Mb2*wL)*(L^3*L1^2*k1 - L1^5*k2 - 3*L^2*L1^3*k1 - L1^5*k1 - L^2*L1^3*k2 + L^2*k2*u1^3 - L^2*k2*u2^3 - 4*L1^2*k1*u2^3 + L1^2*k2*u1^3 - 6*L1^3*k1*u2^2 - 3*L1^3*k2*u1^2 + L1^2*k1*u3^3 - 4*L1^2*k2*u2^3 - 3*L1^3*k1*u3^2 - 6*L1^3*k2*u2^2 - 2*L^3*k1*vL^2 + 2*L1^3*k1*vL^2 + 2*L1^3*k2*vL^2 - 2*L^3*k1*wL^2 + 2*L1^3*k1*wL^2 + 2*L1^3*k2*wL^2 + 2*k1*u2^3*vL^2 - 2*k2*u1^3*vL^2 - 2*k1*u3^3*vL^2 + 2*k2*u2^3*vL^2 + 2*k1*u2^3*wL^2 - 2*k2*u1^3*wL^2 - 2*k1*u3^3*wL^2 + 2*k2*u2^3*wL^2 + 3*L*L1^4*k1 + 2*L*L1^4*k2 + L1^4*k1*u1 + L*k2*u2^4 - L1*k1*u2^4 - 4*L1^4*k1*u2 + 3*L1^4*k2*u1 - L1*k2*u2^4 + 3*L1^4*k1*u3 - 4*L1^4*k2*u2 + L1^4*k2*u3 - 3*L*L1^3*k1*u1 - L^3*L1*k1*u1 + 3*L*L1*k1*u2^3 - 2*L*L1*k2*u1^3 + 9*L*L1^3*k1*u2 - 6*L*L1^3*k2*u1 + L^3*L1*k1*u2 + 5*L*L1*k2*u2^3 - 6*L*L1^3*k1*u3 + 7*L*L1^3*k2*u2 - L*L1^3*k2*u3 - 3*L*k2*u1*u2^3 - L*k2*u1^3*u2 + L1*k1*u1*u2^3 + 3*L1^3*k1*u1*u2 + L*k2*u1^3*u3 - L1*k1*u1*u3^3 + 3*L1*k2*u1*u2^3 + L1*k2*u1^3*u2 - 3*L1^3*k1*u1*u3 + 9*L1^3*k2*u1*u2 - L*k2*u2^3*u3 + L1*k1*u2*u3^3 + 3*L1*k1*u2^3*u3 - L1*k2*u1^3*u3 + 9*L1^3*k1*u2*u3 - 3*L1^3*k2*u1*u3 + L1*k2*u2^3*u3 + 3*L1^3*k2*u2*u3 + 3*L^2*L1^2*k1*u1 + 9*L*L1^2*k1*u2^2 + 6*L*L1^2*k2*u1^2 - 3*L^2*L1*k1*u2^2 - 3*L^2*L1*k2*u1^2 - 6*L^2*L1^2*k1*u2 + 3*L^2*L1^2*k2*u1 + 3*L*L1^2*k1*u3^2 + 9*L*L1^2*k2*u2^2 - 3*L^2*L1*k2*u2^2 + 3*L^2*L1^2*k1*u3 - 3*L^2*L1^2*k2*u2 - 6*L*L1^2*k1*vL^2 + 6*L^2*L1*k1*vL^2 - 6*L*L1^2*k1*wL^2 + 6*L^2*L1*k1*wL^2 + 3*L*k2*u1^2*u2^2 + 3*L^2*k2*u1*u2^2 - 3*L^2*k2*u1^2*u2 + 3*L1^2*k1*u1*u2^2 - 3*L1*k2*u1^2*u2^2 + 3*L1^2*k1*u1*u3^2 + 9*L1^2*k2*u1*u2^2 - 6*L1^2*k2*u1^2*u2 - 3*L1*k1*u2^2*u3^2 - 6*L1^2*k1*u2*u3^2 + 9*L1^2*k1*u2^2*u3 + 3*L1^2*k2*u1^2*u3 + 3*L1^2*k2*u2^2*u3 - 6*L*k1*u2^2*vL^2 + 6*L^2*k1*u2*vL^2 - 6*L*k1*u3^2*vL^2 + 6*L1*k1*u2^2*vL^2 + 6*L1*k2*u1^2*vL^2 - 6*L^2*k1*u3*vL^2 + 6*L1^2*k1*u2*vL^2 - 6*L1^2*k2*u1*vL^2 + 6*L1*k1*u3^2*vL^2 + 6*L1*k2*u2^2*vL^2 - 6*L1^2*k1*u3*vL^2 + 6*L1^2*k2*u2*vL^2 - 6*L*k1*u2^2*wL^2 + 6*L^2*k1*u2*wL^2 - 6*L*k1*u3^2*wL^2 + 6*L1*k1*u2^2*wL^2 + 6*L1*k2*u1^2*wL^2 - 6*L^2*k1*u3*wL^2 + 6*L1^2*k1*u2*wL^2 - 6*L1^2*k2*u1*wL^2 + 6*L1*k1*u3^2*wL^2 + 6*L1*k2*u2^2*wL^2 - 6*L1^2*k1*u3*wL^2 + 6*L1^2*k2*u2*wL^2 - 6*k2*u1*u2^2*vL^2 + 6*k2*u1^2*u2*vL^2 + 6*k1*u2*u3^2*vL^2 - 6*k1*u2^2*u3*vL^2 - 6*k2*u1*u2^2*wL^2 + 6*k2*u1^2*u2*wL^2 + 6*k1*u2*u3^2*wL^2 - 6*k1*u2^2*u3*wL^2 - 3*L*L1*k1*u1*u2^2 - 6*L*L1^2*k1*u1*u2 + 3*L^2*L1*k1*u1*u2 - 3*L*L1*k1*u1*u3^2 - 12*L*L1*k2*u1*u2^2 + 9*L*L1*k2*u1^2*u2 + 6*L*L1^2*k1*u1*u3 - 15*L*L1^2*k2*u1*u2 - 3*L^2*L1*k1*u1*u3 + 6*L^2*L1*k2*u1*u2 + 3*L*L1*k1*u2*u3^2 - 6*L*L1*k1*u2^2*u3 - 3*L*L1*k2*u1^2*u3 - 12*L*L1^2*k1*u2*u3 + 3*L*L1^2*k2*u1*u3 + 3*L^2*L1*k1*u2*u3 - 3*L*L1*k2*u2^2*u3 - 3*L*L1^2*k2*u2*u3 - 12*L*L1*k1*u2*vL^2 + 12*L*L1*k1*u3*vL^2 - 12*L*L1*k1*u2*wL^2 + 12*L*L1*k1*u3*wL^2 + 3*L*k2*u1*u2^2*u3 - 3*L*k2*u1^2*u2*u3 + 3*L1*k1*u1*u2*u3^2 - 3*L1*k1*u1*u2^2*u3 - 6*L1^2*k1*u1*u2*u3 - 3*L1*k2*u1*u2^2*u3 + 3*L1*k2*u1^2*u2*u3 - 6*L1^2*k2*u1*u2*u3 + 12*L*k1*u2*u3*vL^2 - 12*L1*k2*u1*u2*vL^2 - 12*L1*k1*u2*u3*vL^2 + 12*L*k1*u2*u3*wL^2 - 12*L1*k2*u1*u2*wL^2 - 12*L1*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2*u3 + 6*L*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^4) - (3*up2*(2*wL*dm^2*l2^2*cos(alfa + teta2)^2 - vL*sin(2*alfa + 2*teta2)*dm^2*l2^2 + 2*Mb2*wL*dm*l2^2 + 2*Ib2*wL*dm + 2*Ib2*Mb2*wL)*(L^3*L1^2*k1 - L1^5*k2 - 3*L^2*L1^3*k1 - L1^5*k1 - L^2*L1^3*k2 + L^2*k2*u1^3 - L^2*k2*u2^3 - 4*L1^2*k1*u2^3 + L1^2*k2*u1^3 - 6*L1^3*k1*u2^2 - 3*L1^3*k2*u1^2 + L1^2*k1*u3^3 - 4*L1^2*k2*u2^3 - 3*L1^3*k1*u3^2 - 6*L1^3*k2*u2^2 - 2*L^3*k1*vL^2 + 2*L1^3*k1*vL^2 + 2*L1^3*k2*vL^2 - 2*L^3*k1*wL^2 + 2*L1^3*k1*wL^2 + 2*L1^3*k2*wL^2 + 2*k1*u2^3*vL^2 - 2*k2*u1^3*vL^2 - 2*k1*u3^3*vL^2 + 2*k2*u2^3*vL^2 + 2*k1*u2^3*wL^2 - 2*k2*u1^3*wL^2 - 2*k1*u3^3*wL^2 + 2*k2*u2^3*wL^2 + 3*L*L1^4*k1 + 2*L*L1^4*k2 + L1^4*k1*u1 + L*k2*u2^4 - L1*k1*u2^4 - 4*L1^4*k1*u2 + 3*L1^4*k2*u1 - L1*k2*u2^4 + 3*L1^4*k1*u3 - 4*L1^4*k2*u2 + L1^4*k2*u3 - 3*L*L1^3*k1*u1 - L^3*L1*k1*u1 + 3*L*L1*k1*u2^3 - 2*L*L1*k2*u1^3 + 9*L*L1^3*k1*u2 - 6*L*L1^3*k2*u1 + L^3*L1*k1*u2 + 5*L*L1*k2*u2^3 - 6*L*L1^3*k1*u3 + 7*L*L1^3*k2*u2 - L*L1^3*k2*u3 - 3*L*k2*u1*u2^3 - L*k2*u1^3*u2 + L1*k1*u1*u2^3 + 3*L1^3*k1*u1*u2 + L*k2*u1^3*u3 - L1*k1*u1*u3^3 + 3*L1*k2*u1*u2^3 + L1*k2*u1^3*u2 - 3*L1^3*k1*u1*u3 + 9*L1^3*k2*u1*u2 - L*k2*u2^3*u3 + L1*k1*u2*u3^3 + 3*L1*k1*u2^3*u3 - L1*k2*u1^3*u3 + 9*L1^3*k1*u2*u3 - 3*L1^3*k2*u1*u3 + L1*k2*u2^3*u3 + 3*L1^3*k2*u2*u3 + 3*L^2*L1^2*k1*u1 + 9*L*L1^2*k1*u2^2 + 6*L*L1^2*k2*u1^2 - 3*L^2*L1*k1*u2^2 - 3*L^2*L1*k2*u1^2 - 6*L^2*L1^2*k1*u2 + 3*L^2*L1^2*k2*u1 + 3*L*L1^2*k1*u3^2 + 9*L*L1^2*k2*u2^2 - 3*L^2*L1*k2*u2^2 + 3*L^2*L1^2*k1*u3 - 3*L^2*L1^2*k2*u2 - 6*L*L1^2*k1*vL^2 + 6*L^2*L1*k1*vL^2 - 6*L*L1^2*k1*wL^2 + 6*L^2*L1*k1*wL^2 + 3*L*k2*u1^2*u2^2 + 3*L^2*k2*u1*u2^2 - 3*L^2*k2*u1^2*u2 + 3*L1^2*k1*u1*u2^2 - 3*L1*k2*u1^2*u2^2 + 3*L1^2*k1*u1*u3^2 + 9*L1^2*k2*u1*u2^2 - 6*L1^2*k2*u1^2*u2 - 3*L1*k1*u2^2*u3^2 - 6*L1^2*k1*u2*u3^2 + 9*L1^2*k1*u2^2*u3 + 3*L1^2*k2*u1^2*u3 + 3*L1^2*k2*u2^2*u3 - 6*L*k1*u2^2*vL^2 + 6*L^2*k1*u2*vL^2 - 6*L*k1*u3^2*vL^2 + 6*L1*k1*u2^2*vL^2 + 6*L1*k2*u1^2*vL^2 - 6*L^2*k1*u3*vL^2 + 6*L1^2*k1*u2*vL^2 - 6*L1^2*k2*u1*vL^2 + 6*L1*k1*u3^2*vL^2 + 6*L1*k2*u2^2*vL^2 - 6*L1^2*k1*u3*vL^2 + 6*L1^2*k2*u2*vL^2 - 6*L*k1*u2^2*wL^2 + 6*L^2*k1*u2*wL^2 - 6*L*k1*u3^2*wL^2 + 6*L1*k1*u2^2*wL^2 + 6*L1*k2*u1^2*wL^2 - 6*L^2*k1*u3*wL^2 + 6*L1^2*k1*u2*wL^2 - 6*L1^2*k2*u1*wL^2 + 6*L1*k1*u3^2*wL^2 + 6*L1*k2*u2^2*wL^2 - 6*L1^2*k1*u3*wL^2 + 6*L1^2*k2*u2*wL^2 - 6*k2*u1*u2^2*vL^2 + 6*k2*u1^2*u2*vL^2 + 6*k1*u2*u3^2*vL^2 - 6*k1*u2^2*u3*vL^2 - 6*k2*u1*u2^2*wL^2 + 6*k2*u1^2*u2*wL^2 + 6*k1*u2*u3^2*wL^2 - 6*k1*u2^2*u3*wL^2 - 3*L*L1*k1*u1*u2^2 - 6*L*L1^2*k1*u1*u2 + 3*L^2*L1*k1*u1*u2 - 3*L*L1*k1*u1*u3^2 - 12*L*L1*k2*u1*u2^2 + 9*L*L1*k2*u1^2*u2 + 6*L*L1^2*k1*u1*u3 - 15*L*L1^2*k2*u1*u2 - 3*L^2*L1*k1*u1*u3 + 6*L^2*L1*k2*u1*u2 + 3*L*L1*k1*u2*u3^2 - 6*L*L1*k1*u2^2*u3 - 3*L*L1*k2*u1^2*u3 - 12*L*L1^2*k1*u2*u3 + 3*L*L1^2*k2*u1*u3 + 3*L^2*L1*k1*u2*u3 - 3*L*L1*k2*u2^2*u3 - 3*L*L1^2*k2*u2*u3 - 12*L*L1*k1*u2*vL^2 + 12*L*L1*k1*u3*vL^2 - 12*L*L1*k1*u2*wL^2 + 12*L*L1*k1*u3*wL^2 + 3*L*k2*u1*u2^2*u3 - 3*L*k2*u1^2*u2*u3 + 3*L1*k1*u1*u2*u3^2 - 3*L1*k1*u1*u2^2*u3 - 6*L1^2*k1*u1*u2*u3 - 3*L1*k2*u1*u2^2*u3 + 3*L1*k2*u1^2*u2*u3 - 6*L1^2*k2*u1*u2*u3 + 12*L*k1*u2*u3*vL^2 - 12*L1*k2*u1*u2*vL^2 - 12*L1*k1*u2*u3*vL^2 + 12*L*k1*u2*u3*wL^2 - 12*L1*k2*u1*u2*wL^2 - 12*L1*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2*u3 + 6*L*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^4*(L - L1 - u2 + u3)^3) - (L1*k1*up1*(dm^2*l2^2*wL + 2*Ib2*Mb2*wL + 2*Ib2*dm*wL + 2*Mb2*dm*l2^2*wL + dm^2*l2^2*wL*cos(2*alfa + 2*teta2) - dm^2*l2^2*vL*sin(2*alfa + 2*teta2)))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3) + (up2*(2*wL*dm^2*l2^2*cos(alfa + teta2)^2 - vL*sin(2*alfa + 2*teta2)*dm^2*l2^2 + 2*Mb2*wL*dm*l2^2 + 2*Ib2*wL*dm + 2*Ib2*Mb2*wL)*(6*L^2*k1*vL^2 - 4*L1^4*k2 - 6*L^2*L1^2*k1 - 3*L^2*L1^2*k2 - 3*L^2*k2*u1^2 - 3*L^2*k2*u2^2 - 12*L1^2*k1*u2^2 - 6*L1^2*k2*u1^2 - 6*L1^2*k1*u3^2 - 12*L1^2*k2*u2^2 - 4*L1^4*k1 + 6*L1^2*k1*vL^2 + 6*L1^2*k2*vL^2 + 6*L^2*k1*wL^2 + 6*L1^2*k1*wL^2 + 6*L1^2*k2*wL^2 + 6*k1*u2^2*vL^2 + 6*k2*u1^2*vL^2 + 6*k1*u3^2*vL^2 + 6*k2*u2^2*vL^2 + 6*k1*u2^2*wL^2 + 6*k2*u1^2*wL^2 + 6*k1*u3^2*wL^2 + 6*k2*u2^2*wL^2 + 9*L*L1^3*k1 + L^3*L1*k1 + 7*L*L1^3*k2 - L*k2*u1^3 + 3*L1^3*k1*u1 + 4*L*k2*u2^3 - 4*L1*k1*u2^3 + L1*k2*u1^3 - 12*L1^3*k1*u2 + 9*L1^3*k2*u1 + L1*k1*u3^3 - 4*L1*k2*u2^3 + 9*L1^3*k1*u3 - 12*L1^3*k2*u2 + 3*L1^3*k2*u3 - 6*L*L1^2*k1*u1 + 3*L^2*L1*k1*u1 + 9*L*L1*k1*u2^2 + 9*L*L1*k2*u1^2 + 18*L*L1^2*k1*u2 - 15*L*L1^2*k2*u1 - 6*L^2*L1*k1*u2 + 6*L^2*L1*k2*u1 + 3*L*L1*k1*u3^2 + 15*L*L1*k2*u2^2 - 12*L*L1^2*k1*u3 + 18*L*L1^2*k2*u2 + 3*L^2*L1*k1*u3 - 6*L^2*L1*k2*u2 - 3*L*L1^2*k2*u3 - 12*L*L1*k1*vL^2 - 12*L*L1*k1*wL^2 - 9*L*k2*u1*u2^2 + 6*L*k2*u1^2*u2 + 3*L1*k1*u1*u2^2 + 6*L^2*k2*u1*u2 + 6*L1^2*k1*u1*u2 - 3*L*k2*u1^2*u3 + 3*L1*k1*u1*u3^2 + 9*L1*k2*u1*u2^2 - 6*L1*k2*u1^2*u2 - 6*L1^2*k1*u1*u3 + 18*L1^2*k2*u1*u2 - 3*L*k2*u2^2*u3 - 6*L1*k1*u2*u3^2 + 9*L1*k1*u2^2*u3 + 3*L1*k2*u1^2*u3 + 18*L1^2*k1*u2*u3 - 6*L1^2*k2*u1*u3 + 3*L1*k2*u2^2*u3 + 6*L1^2*k2*u2*u3 - 12*L*k1*u2*vL^2 + 12*L*k1*u3*vL^2 + 12*L1*k1*u2*vL^2 - 12*L1*k2*u1*vL^2 - 12*L1*k1*u3*vL^2 + 12*L1*k2*u2*vL^2 - 12*L*k1*u2*wL^2 + 12*L*k1*u3*wL^2 + 12*L1*k1*u2*wL^2 - 12*L1*k2*u1*wL^2 - 12*L1*k1*u3*wL^2 + 12*L1*k2*u2*wL^2 - 12*k2*u1*u2*vL^2 - 12*k1*u2*u3*vL^2 - 12*k2*u1*u2*wL^2 - 12*k1*u2*u3*wL^2 - 6*L*L1*k1*u1*u2 + 6*L*L1*k1*u1*u3 - 24*L*L1*k2*u1*u2 - 12*L*L1*k1*u2*u3 + 6*L*L1*k2*u1*u3 - 6*L*L1*k2*u2*u3 + 6*L*k2*u1*u2*u3 - 6*L1*k1*u1*u2*u3 - 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^3) - (2*dm^2*l2^2*tetap2*(vL*cos(2*alfa + 2*teta2) + wL*sin(2*alfa + 2*teta2))*(L1^3*k1 + L1^3*k2 + 4*k1*u2^3 + 4*k2*u2^3 - 6*k1*u1*u2^2 + 2*k1*u1^2*u2 - 2*k1*u1*u3^2 - 2*k1*u1^2*u3 - 6*k2*u1*u2^2 + 2*k2*u1^2*u2 + 2*k1*u2*u3^2 - 6*k1*u2^2*u3 - 2*k2*u1*u3^2 - 2*k2*u1^2*u3 + 2*k2*u2*u3^2 - 6*k2*u2^2*u3 + 2*k1*u2*vL^2 - 2*k2*u1*vL^2 - 2*k1*u3*vL^2 + 2*k2*u2*vL^2 + 2*k1*u2*wL^2 - 2*k2*u1*wL^2 - 2*k1*u3*wL^2 + 2*k2*u2*wL^2 - 2*L*L1^2*k1 + L^2*L1*k1 - L*L1^2*k2 - 2*L*k1*u1^2 - 2*L^2*k1*u1 - 6*L*k1*u2^2 - L*k2*u1^2 + 2*L1*k1*u1^2 + 2*L^2*k1*u2 - 4*L1^2*k1*u1 - 3*L*k2*u2^2 + 9*L1*k1*u2^2 + L1*k2*u1^2 + 6*L1^2*k1*u2 - 2*L1^2*k2*u1 + L1*k1*u3^2 + 9*L1*k2*u2^2 - 2*L1^2*k1*u3 + 6*L1^2*k2*u2 + 2*L1*k2*u3^2 - 4*L1^2*k2*u3 - 2*L*k1*vL^2 + 2*L1*k1*vL^2 + 2*L1*k2*vL^2 - 2*L*k1*wL^2 + 2*L1*k1*wL^2 + 2*L1*k2*wL^2 + 8*L*k1*u1*u2 - 4*L*k1*u1*u3 + 4*L*k2*u1*u2 - 10*L1*k1*u1*u2 + 4*L*k1*u2*u3 - 2*L*k2*u1*u3 + 6*L1*k1*u1*u3 - 8*L1*k2*u1*u2 + 2*L*k2*u2*u3 - 8*L1*k1*u2*u3 + 6*L1*k2*u1*u3 - 10*L1*k2*u2*u3 + 8*k1*u1*u2*u3 + 8*k2*u1*u2*u3 + 6*L*L1*k1*u1 - 8*L*L1*k1*u2 + 2*L*L1*k2*u1 + 2*L*L1*k1*u3 - 4*L*L1*k2*u2 + 2*L*L1*k2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (4*dm^2*l2^2*tetap2*(vL*cos(2*alfa + 2*teta2) + wL*sin(2*alfa + 2*teta2))*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3) + (4*dm^2*l2^2*tetap2*(vL*cos(2*alfa + 2*teta2) + wL*sin(2*alfa + 2*teta2))*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^2), wpL*((2*(dm^2*l2^2*cos(alfa + teta2)^2 + Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(2*k1*u2^2*vL + 2*k2*u1^2*vL + 2*k1*u3^2*vL + 2*k2*u2^2*vL + 2*L^2*k1*vL + 2*L1^2*k1*vL + 2*L1^2*k2*vL - 4*L*k1*u2*vL + 4*L*k1*u3*vL + 4*L1*k1*u2*vL - 4*L1*k2*u1*vL - 4*L1*k1*u3*vL + 4*L1*k2*u2*vL - 4*k2*u1*u2*vL - 4*k1*u2*u3*vL - 4*L*L1*k1*vL))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (2*dm^2*l2^2*wL*sin(2*alfa + 2*teta2)*(L^2*k1 + L1^2*k1 + L1^2*k2 + k1*u2^2 + k2*u1^2 + k1*u3^2 + k2*u2^2 - 2*L*L1*k1 - 2*L*k1*u2 + 2*L*k1*u3 + 2*L1*k1*u2 - 2*L1*k2*u1 - 2*L1*k1*u3 + 2*L1*k2*u2 - 2*k2*u1*u2 - 2*k1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2)) - vpL*((dm^2*l2^2*sin(2*alfa + 2*teta2)*(2*k1*u2^2*vL + 2*k2*u1^2*vL + 2*k1*u3^2*vL + 2*k2*u2^2*vL + 2*L^2*k1*vL + 2*L1^2*k1*vL + 2*L1^2*k2*vL - 4*L*k1*u2*vL + 4*L*k1*u3*vL + 4*L1*k1*u2*vL - 4*L1*k2*u1*vL - 4*L1*k1*u3*vL + 4*L1*k2*u2*vL - 4*k2*u1*u2*vL - 4*k1*u2*u3*vL - 4*L*L1*k1*vL))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (4*(Ib2*Mb2*wL + Ib2*dm*wL + Mb2*dm*l2^2*wL + dm^2*l2^2*wL*cos(alfa + teta2)^2 - (dm^2*l2^2*vL*sin(2*alfa + 2*teta2))/2)*(L^2*k1 + L1^2*k1 + L1^2*k2 + k1*u2^2 + k2*u1^2 + k1*u3^2 + k2*u2^2 - 2*L*L1*k1 - 2*L*k1*u2 + 2*L*k1*u3 + 2*L1*k1*u2 - 2*L1*k2*u1 - 2*L1*k1*u3 + 2*L1*k2*u2 - 2*k2*u1*u2 - 2*k1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (2*dm^2*l2^2*vL*sin(2*alfa + 2*teta2)*(L^2*k1 + L1^2*k1 + L1^2*k2 + k1*u2^2 + k2*u1^2 + k1*u3^2 + k2*u2^2 - 2*L*L1*k1 - 2*L*k1*u2 + 2*L*k1*u3 + 2*L1*k1*u2 - 2*L1*k2*u1 - 2*L1*k1*u3 + 2*L1*k2*u2 - 2*k2*u1*u2 - 2*k1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2)) - (4*k2*up3*vL*(2*Ib2*Mb2*wL + 2*Ib2*dm*wL + 2*Mb2*dm*l2^2*wL + 2*dm^2*l2^2*wL*cos(alfa + teta2)^2 - dm^2*l2^2*vL*sin(2*alfa + 2*teta2)))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L - L1 - u2 + u3)^3) + (up2*(2*Ib2*Mb2*wL + 2*Ib2*dm*wL + 2*Mb2*dm*l2^2*wL + 2*dm^2*l2^2*wL*cos(alfa + teta2)^2 - dm^2*l2^2*vL*sin(2*alfa + 2*teta2))*(4*k1*u2^3*vL - 4*k2*u1^3*vL - 4*k1*u3^3*vL + 4*k2*u2^3*vL - 4*L^3*k1*vL + 4*L1^3*k1*vL + 4*L1^3*k2*vL - 12*L*L1^2*k1*vL + 12*L^2*L1*k1*vL - 12*L*k1*u2^2*vL + 12*L^2*k1*u2*vL - 12*L*k1*u3^2*vL + 12*L1*k1*u2^2*vL + 12*L1*k2*u1^2*vL - 12*L^2*k1*u3*vL + 12*L1^2*k1*u2*vL - 12*L1^2*k2*u1*vL + 12*L1*k1*u3^2*vL + 12*L1*k2*u2^2*vL - 12*L1^2*k1*u3*vL + 12*L1^2*k2*u2*vL - 12*k2*u1*u2^2*vL + 12*k2*u1^2*u2*vL + 12*k1*u2*u3^2*vL - 12*k1*u2^2*u3*vL - 24*L*L1*k1*u2*vL + 24*L*L1*k1*u3*vL + 24*L*k1*u2*u3*vL - 24*L1*k2*u1*u2*vL - 24*L1*k1*u2*u3*vL))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^3) + (4*k1*up1*vL*(dm^2*l2^2*wL + 2*Ib2*Mb2*wL + 2*Ib2*dm*wL + 2*Mb2*dm*l2^2*wL + dm^2*l2^2*wL*cos(2*alfa + 2*teta2) - dm^2*l2^2*vL*sin(2*alfa + 2*teta2)))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3) - (2*dm^2*l2^2*tetap2*(vL*cos(2*alfa + 2*teta2) + wL*sin(2*alfa + 2*teta2))*(2*k1*u2^2*vL + 2*k2*u1^2*vL + 2*k1*u3^2*vL + 2*k2*u2^2*vL + 2*L^2*k1*vL + 2*L1^2*k1*vL + 2*L1^2*k2*vL - 4*L*k1*u2*vL + 4*L*k1*u3*vL + 4*L1*k1*u2*vL - 4*L1*k2*u1*vL - 4*L1*k1*u3*vL + 4*L1*k2*u2*vL - 4*k2*u1*u2*vL - 4*k1*u2*u3*vL - 4*L*L1*k1*vL))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (2*dm^2*l2^2*tetap2*cos(2*alfa + 2*teta2)*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (dm^2*k2*l2^2*up3*sin(2*alfa + 2*teta2)*(L*u2 - L*u3 - L1*u2 + L1*u3 - L^2 - L1^2 + 2*vL^2 + 2*wL^2 + 2*L*L1))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L - L1 - u2 + u3)^3) - (dm^2*l2^2*up2*sin(2*alfa + 2*teta2)*(L^3*L1^2*k1 - L1^5*k2 - 3*L^2*L1^3*k1 - L1^5*k1 - L^2*L1^3*k2 + L^2*k2*u1^3 - L^2*k2*u2^3 - 4*L1^2*k1*u2^3 + L1^2*k2*u1^3 - 6*L1^3*k1*u2^2 - 3*L1^3*k2*u1^2 + L1^2*k1*u3^3 - 4*L1^2*k2*u2^3 - 3*L1^3*k1*u3^2 - 6*L1^3*k2*u2^2 - 2*L^3*k1*vL^2 + 2*L1^3*k1*vL^2 + 2*L1^3*k2*vL^2 - 2*L^3*k1*wL^2 + 2*L1^3*k1*wL^2 + 2*L1^3*k2*wL^2 + 2*k1*u2^3*vL^2 - 2*k2*u1^3*vL^2 - 2*k1*u3^3*vL^2 + 2*k2*u2^3*vL^2 + 2*k1*u2^3*wL^2 - 2*k2*u1^3*wL^2 - 2*k1*u3^3*wL^2 + 2*k2*u2^3*wL^2 + 3*L*L1^4*k1 + 2*L*L1^4*k2 + L1^4*k1*u1 + L*k2*u2^4 - L1*k1*u2^4 - 4*L1^4*k1*u2 + 3*L1^4*k2*u1 - L1*k2*u2^4 + 3*L1^4*k1*u3 - 4*L1^4*k2*u2 + L1^4*k2*u3 - 3*L*L1^3*k1*u1 - L^3*L1*k1*u1 + 3*L*L1*k1*u2^3 - 2*L*L1*k2*u1^3 + 9*L*L1^3*k1*u2 - 6*L*L1^3*k2*u1 + L^3*L1*k1*u2 + 5*L*L1*k2*u2^3 - 6*L*L1^3*k1*u3 + 7*L*L1^3*k2*u2 - L*L1^3*k2*u3 - 3*L*k2*u1*u2^3 - L*k2*u1^3*u2 + L1*k1*u1*u2^3 + 3*L1^3*k1*u1*u2 + L*k2*u1^3*u3 - L1*k1*u1*u3^3 + 3*L1*k2*u1*u2^3 + L1*k2*u1^3*u2 - 3*L1^3*k1*u1*u3 + 9*L1^3*k2*u1*u2 - L*k2*u2^3*u3 + L1*k1*u2*u3^3 + 3*L1*k1*u2^3*u3 - L1*k2*u1^3*u3 + 9*L1^3*k1*u2*u3 - 3*L1^3*k2*u1*u3 + L1*k2*u2^3*u3 + 3*L1^3*k2*u2*u3 + 3*L^2*L1^2*k1*u1 + 9*L*L1^2*k1*u2^2 + 6*L*L1^2*k2*u1^2 - 3*L^2*L1*k1*u2^2 - 3*L^2*L1*k2*u1^2 - 6*L^2*L1^2*k1*u2 + 3*L^2*L1^2*k2*u1 + 3*L*L1^2*k1*u3^2 + 9*L*L1^2*k2*u2^2 - 3*L^2*L1*k2*u2^2 + 3*L^2*L1^2*k1*u3 - 3*L^2*L1^2*k2*u2 - 6*L*L1^2*k1*vL^2 + 6*L^2*L1*k1*vL^2 - 6*L*L1^2*k1*wL^2 + 6*L^2*L1*k1*wL^2 + 3*L*k2*u1^2*u2^2 + 3*L^2*k2*u1*u2^2 - 3*L^2*k2*u1^2*u2 + 3*L1^2*k1*u1*u2^2 - 3*L1*k2*u1^2*u2^2 + 3*L1^2*k1*u1*u3^2 + 9*L1^2*k2*u1*u2^2 - 6*L1^2*k2*u1^2*u2 - 3*L1*k1*u2^2*u3^2 - 6*L1^2*k1*u2*u3^2 + 9*L1^2*k1*u2^2*u3 + 3*L1^2*k2*u1^2*u3 + 3*L1^2*k2*u2^2*u3 - 6*L*k1*u2^2*vL^2 + 6*L^2*k1*u2*vL^2 - 6*L*k1*u3^2*vL^2 + 6*L1*k1*u2^2*vL^2 + 6*L1*k2*u1^2*vL^2 - 6*L^2*k1*u3*vL^2 + 6*L1^2*k1*u2*vL^2 - 6*L1^2*k2*u1*vL^2 + 6*L1*k1*u3^2*vL^2 + 6*L1*k2*u2^2*vL^2 - 6*L1^2*k1*u3*vL^2 + 6*L1^2*k2*u2*vL^2 - 6*L*k1*u2^2*wL^2 + 6*L^2*k1*u2*wL^2 - 6*L*k1*u3^2*wL^2 + 6*L1*k1*u2^2*wL^2 + 6*L1*k2*u1^2*wL^2 - 6*L^2*k1*u3*wL^2 + 6*L1^2*k1*u2*wL^2 - 6*L1^2*k2*u1*wL^2 + 6*L1*k1*u3^2*wL^2 + 6*L1*k2*u2^2*wL^2 - 6*L1^2*k1*u3*wL^2 + 6*L1^2*k2*u2*wL^2 - 6*k2*u1*u2^2*vL^2 + 6*k2*u1^2*u2*vL^2 + 6*k1*u2*u3^2*vL^2 - 6*k1*u2^2*u3*vL^2 - 6*k2*u1*u2^2*wL^2 + 6*k2*u1^2*u2*wL^2 + 6*k1*u2*u3^2*wL^2 - 6*k1*u2^2*u3*wL^2 - 3*L*L1*k1*u1*u2^2 - 6*L*L1^2*k1*u1*u2 + 3*L^2*L1*k1*u1*u2 - 3*L*L1*k1*u1*u3^2 - 12*L*L1*k2*u1*u2^2 + 9*L*L1*k2*u1^2*u2 + 6*L*L1^2*k1*u1*u3 - 15*L*L1^2*k2*u1*u2 - 3*L^2*L1*k1*u1*u3 + 6*L^2*L1*k2*u1*u2 + 3*L*L1*k1*u2*u3^2 - 6*L*L1*k1*u2^2*u3 - 3*L*L1*k2*u1^2*u3 - 12*L*L1^2*k1*u2*u3 + 3*L*L1^2*k2*u1*u3 + 3*L^2*L1*k1*u2*u3 - 3*L*L1*k2*u2^2*u3 - 3*L*L1^2*k2*u2*u3 - 12*L*L1*k1*u2*vL^2 + 12*L*L1*k1*u3*vL^2 - 12*L*L1*k1*u2*wL^2 + 12*L*L1*k1*u3*wL^2 + 3*L*k2*u1*u2^2*u3 - 3*L*k2*u1^2*u2*u3 + 3*L1*k1*u1*u2*u3^2 - 3*L1*k1*u1*u2^2*u3 - 6*L1^2*k1*u1*u2*u3 - 3*L1*k2*u1*u2^2*u3 + 3*L1*k2*u1^2*u2*u3 - 6*L1^2*k2*u1*u2*u3 + 12*L*k1*u2*u3*vL^2 - 12*L1*k2*u1*u2*vL^2 - 12*L1*k1*u2*u3*vL^2 + 12*L*k1*u2*u3*wL^2 - 12*L1*k2*u1*u2*wL^2 - 12*L1*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2*u3 + 6*L*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^3) - (dm^2*k1*l2^2*up1*sin(2*alfa + 2*teta2)*(L1*u1 - L1*u2 - L1^2 + 2*vL^2 + 2*wL^2))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3), vpL*((4*vL*(dm^2*l2^2*cos(alfa + teta2)^2 + Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L^2*k1 + L1^2*k1 + L1^2*k2 + k1*u2^2 + k2*u1^2 + k1*u3^2 + k2*u2^2 - 2*L*L1*k1 - 2*L*k1*u2 + 2*L*k1*u3 + 2*L1*k1*u2 - 2*L1*k2*u1 - 2*L1*k1*u3 + 2*L1*k2*u2 - 2*k2*u1*u2 - 2*k1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (dm^2*l2^2*sin(2*alfa + 2*teta2)*(2*k1*u2^2*wL + 2*k2*u1^2*wL + 2*k1*u3^2*wL + 2*k2*u2^2*wL + 2*L^2*k1*wL + 2*L1^2*k1*wL + 2*L1^2*k2*wL - 4*L*k1*u2*wL + 4*L*k1*u3*wL + 4*L1*k1*u2*wL - 4*L1*k2*u1*wL - 4*L1*k1*u3*wL + 4*L1*k2*u2*wL - 4*k2*u1*u2*wL - 4*k1*u2*u3*wL - 4*L*L1*k1*wL))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2)) + wpL*((2*(dm^2*l2^2*cos(alfa + teta2)^2 + Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(2*k1*u2^2*wL + 2*k2*u1^2*wL + 2*k1*u3^2*wL + 2*k2*u2^2*wL + 2*L^2*k1*wL + 2*L1^2*k1*wL + 2*L1^2*k2*wL - 4*L*k1*u2*wL + 4*L*k1*u3*wL + 4*L1*k1*u2*wL - 4*L1*k2*u1*wL - 4*L1*k1*u3*wL + 4*L1*k2*u2*wL - 4*k2*u1*u2*wL - 4*k1*u2*u3*wL - 4*L*L1*k1*wL))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (4*(Ib2*Mb2*wL + Ib2*dm*wL + Mb2*dm*l2^2*wL + dm^2*l2^2*wL*cos(alfa + teta2)^2 - (dm^2*l2^2*vL*sin(2*alfa + 2*teta2))/2)*(L^2*k1 + L1^2*k1 + L1^2*k2 + k1*u2^2 + k2*u1^2 + k1*u3^2 + k2*u2^2 - 2*L*L1*k1 - 2*L*k1*u2 + 2*L*k1*u3 + 2*L1*k1*u2 - 2*L1*k2*u1 - 2*L1*k1*u3 + 2*L1*k2*u2 - 2*k2*u1*u2 - 2*k1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (4*wL*(dm^2*l2^2*cos(alfa + teta2)^2 + Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L^2*k1 + L1^2*k1 + L1^2*k2 + k1*u2^2 + k2*u1^2 + k1*u3^2 + k2*u2^2 - 2*L*L1*k1 - 2*L*k1*u2 + 2*L*k1*u3 + 2*L1*k1*u2 - 2*L1*k2*u1 - 2*L1*k1*u3 + 2*L1*k2*u2 - 2*k2*u1*u2 - 2*k1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2)) + (k1*up1*(L1*u1 - L1*u2 - L1^2 + 2*vL^2 + 2*wL^2)*(2*Ib2*dm + dm^2*l2^2 + 2*Ib2*Mb2 + dm^2*l2^2*cos(2*alfa + 2*teta2) + 2*Mb2*dm*l2^2))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3) - (4*k2*up3*wL*(2*Ib2*Mb2*wL + 2*Ib2*dm*wL + 2*Mb2*dm*l2^2*wL + 2*dm^2*l2^2*wL*cos(alfa + teta2)^2 - dm^2*l2^2*vL*sin(2*alfa + 2*teta2)))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L - L1 - u2 + u3)^3) + (4*k1*up1*wL*(dm^2*l2^2*wL + 2*Ib2*Mb2*wL + 2*Ib2*dm*wL + 2*Mb2*dm*l2^2*wL + dm^2*l2^2*wL*cos(2*alfa + 2*teta2) - dm^2*l2^2*vL*sin(2*alfa + 2*teta2)))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3) + (up2*(2*Ib2*Mb2*wL + 2*Ib2*dm*wL + 2*Mb2*dm*l2^2*wL + 2*dm^2*l2^2*wL*cos(alfa + teta2)^2 - dm^2*l2^2*vL*sin(2*alfa + 2*teta2))*(4*k1*u2^3*wL - 4*k2*u1^3*wL - 4*k1*u3^3*wL + 4*k2*u2^3*wL - 4*L^3*k1*wL + 4*L1^3*k1*wL + 4*L1^3*k2*wL - 12*L*L1^2*k1*wL + 12*L^2*L1*k1*wL - 12*L*k1*u2^2*wL + 12*L^2*k1*u2*wL - 12*L*k1*u3^2*wL + 12*L1*k1*u2^2*wL + 12*L1*k2*u1^2*wL - 12*L^2*k1*u3*wL + 12*L1^2*k1*u2*wL - 12*L1^2*k2*u1*wL + 12*L1*k1*u3^2*wL + 12*L1*k2*u2^2*wL - 12*L1^2*k1*u3*wL + 12*L1^2*k2*u2*wL - 12*k2*u1*u2^2*wL + 12*k2*u1^2*u2*wL + 12*k1*u2*u3^2*wL - 12*k1*u2^2*u3*wL - 24*L*L1*k1*u2*wL + 24*L*L1*k1*u3*wL + 24*L*k1*u2*u3*wL - 24*L1*k2*u1*u2*wL - 24*L1*k1*u2*u3*wL))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^3) - (k2*up3*(2*Ib2*dm + 2*Ib2*Mb2 + 2*Mb2*dm*l2^2 + 2*dm^2*l2^2*cos(alfa + teta2)^2)*(L*u2 - L*u3 - L1*u2 + L1*u3 - L^2 - L1^2 + 2*vL^2 + 2*wL^2 + 2*L*L1))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L - L1 - u2 + u3)^3) + (up2*(2*Ib2*dm + 2*Ib2*Mb2 + 2*Mb2*dm*l2^2 + 2*dm^2*l2^2*cos(alfa + teta2)^2)*(L^3*L1^2*k1 - L1^5*k2 - 3*L^2*L1^3*k1 - L1^5*k1 - L^2*L1^3*k2 + L^2*k2*u1^3 - L^2*k2*u2^3 - 4*L1^2*k1*u2^3 + L1^2*k2*u1^3 - 6*L1^3*k1*u2^2 - 3*L1^3*k2*u1^2 + L1^2*k1*u3^3 - 4*L1^2*k2*u2^3 - 3*L1^3*k1*u3^2 - 6*L1^3*k2*u2^2 - 2*L^3*k1*vL^2 + 2*L1^3*k1*vL^2 + 2*L1^3*k2*vL^2 - 2*L^3*k1*wL^2 + 2*L1^3*k1*wL^2 + 2*L1^3*k2*wL^2 + 2*k1*u2^3*vL^2 - 2*k2*u1^3*vL^2 - 2*k1*u3^3*vL^2 + 2*k2*u2^3*vL^2 + 2*k1*u2^3*wL^2 - 2*k2*u1^3*wL^2 - 2*k1*u3^3*wL^2 + 2*k2*u2^3*wL^2 + 3*L*L1^4*k1 + 2*L*L1^4*k2 + L1^4*k1*u1 + L*k2*u2^4 - L1*k1*u2^4 - 4*L1^4*k1*u2 + 3*L1^4*k2*u1 - L1*k2*u2^4 + 3*L1^4*k1*u3 - 4*L1^4*k2*u2 + L1^4*k2*u3 - 3*L*L1^3*k1*u1 - L^3*L1*k1*u1 + 3*L*L1*k1*u2^3 - 2*L*L1*k2*u1^3 + 9*L*L1^3*k1*u2 - 6*L*L1^3*k2*u1 + L^3*L1*k1*u2 + 5*L*L1*k2*u2^3 - 6*L*L1^3*k1*u3 + 7*L*L1^3*k2*u2 - L*L1^3*k2*u3 - 3*L*k2*u1*u2^3 - L*k2*u1^3*u2 + L1*k1*u1*u2^3 + 3*L1^3*k1*u1*u2 + L*k2*u1^3*u3 - L1*k1*u1*u3^3 + 3*L1*k2*u1*u2^3 + L1*k2*u1^3*u2 - 3*L1^3*k1*u1*u3 + 9*L1^3*k2*u1*u2 - L*k2*u2^3*u3 + L1*k1*u2*u3^3 + 3*L1*k1*u2^3*u3 - L1*k2*u1^3*u3 + 9*L1^3*k1*u2*u3 - 3*L1^3*k2*u1*u3 + L1*k2*u2^3*u3 + 3*L1^3*k2*u2*u3 + 3*L^2*L1^2*k1*u1 + 9*L*L1^2*k1*u2^2 + 6*L*L1^2*k2*u1^2 - 3*L^2*L1*k1*u2^2 - 3*L^2*L1*k2*u1^2 - 6*L^2*L1^2*k1*u2 + 3*L^2*L1^2*k2*u1 + 3*L*L1^2*k1*u3^2 + 9*L*L1^2*k2*u2^2 - 3*L^2*L1*k2*u2^2 + 3*L^2*L1^2*k1*u3 - 3*L^2*L1^2*k2*u2 - 6*L*L1^2*k1*vL^2 + 6*L^2*L1*k1*vL^2 - 6*L*L1^2*k1*wL^2 + 6*L^2*L1*k1*wL^2 + 3*L*k2*u1^2*u2^2 + 3*L^2*k2*u1*u2^2 - 3*L^2*k2*u1^2*u2 + 3*L1^2*k1*u1*u2^2 - 3*L1*k2*u1^2*u2^2 + 3*L1^2*k1*u1*u3^2 + 9*L1^2*k2*u1*u2^2 - 6*L1^2*k2*u1^2*u2 - 3*L1*k1*u2^2*u3^2 - 6*L1^2*k1*u2*u3^2 + 9*L1^2*k1*u2^2*u3 + 3*L1^2*k2*u1^2*u3 + 3*L1^2*k2*u2^2*u3 - 6*L*k1*u2^2*vL^2 + 6*L^2*k1*u2*vL^2 - 6*L*k1*u3^2*vL^2 + 6*L1*k1*u2^2*vL^2 + 6*L1*k2*u1^2*vL^2 - 6*L^2*k1*u3*vL^2 + 6*L1^2*k1*u2*vL^2 - 6*L1^2*k2*u1*vL^2 + 6*L1*k1*u3^2*vL^2 + 6*L1*k2*u2^2*vL^2 - 6*L1^2*k1*u3*vL^2 + 6*L1^2*k2*u2*vL^2 - 6*L*k1*u2^2*wL^2 + 6*L^2*k1*u2*wL^2 - 6*L*k1*u3^2*wL^2 + 6*L1*k1*u2^2*wL^2 + 6*L1*k2*u1^2*wL^2 - 6*L^2*k1*u3*wL^2 + 6*L1^2*k1*u2*wL^2 - 6*L1^2*k2*u1*wL^2 + 6*L1*k1*u3^2*wL^2 + 6*L1*k2*u2^2*wL^2 - 6*L1^2*k1*u3*wL^2 + 6*L1^2*k2*u2*wL^2 - 6*k2*u1*u2^2*vL^2 + 6*k2*u1^2*u2*vL^2 + 6*k1*u2*u3^2*vL^2 - 6*k1*u2^2*u3*vL^2 - 6*k2*u1*u2^2*wL^2 + 6*k2*u1^2*u2*wL^2 + 6*k1*u2*u3^2*wL^2 - 6*k1*u2^2*u3*wL^2 - 3*L*L1*k1*u1*u2^2 - 6*L*L1^2*k1*u1*u2 + 3*L^2*L1*k1*u1*u2 - 3*L*L1*k1*u1*u3^2 - 12*L*L1*k2*u1*u2^2 + 9*L*L1*k2*u1^2*u2 + 6*L*L1^2*k1*u1*u3 - 15*L*L1^2*k2*u1*u2 - 3*L^2*L1*k1*u1*u3 + 6*L^2*L1*k2*u1*u2 + 3*L*L1*k1*u2*u3^2 - 6*L*L1*k1*u2^2*u3 - 3*L*L1*k2*u1^2*u3 - 12*L*L1^2*k1*u2*u3 + 3*L*L1^2*k2*u1*u3 + 3*L^2*L1*k1*u2*u3 - 3*L*L1*k2*u2^2*u3 - 3*L*L1^2*k2*u2*u3 - 12*L*L1*k1*u2*vL^2 + 12*L*L1*k1*u3*vL^2 - 12*L*L1*k1*u2*wL^2 + 12*L*L1*k1*u3*wL^2 + 3*L*k2*u1*u2^2*u3 - 3*L*k2*u1^2*u2*u3 + 3*L1*k1*u1*u2*u3^2 - 3*L1*k1*u1*u2^2*u3 - 6*L1^2*k1*u1*u2*u3 - 3*L1*k2*u1*u2^2*u3 + 3*L1*k2*u1^2*u2*u3 - 6*L1^2*k2*u1*u2*u3 + 12*L*k1*u2*u3*vL^2 - 12*L1*k2*u1*u2*vL^2 - 12*L1*k1*u2*u3*vL^2 + 12*L*k1*u2*u3*wL^2 - 12*L1*k2*u1*u2*wL^2 - 12*L1*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2*u3 + 6*L*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^3) - (2*dm^2*l2^2*tetap2*(vL*cos(2*alfa + 2*teta2) + wL*sin(2*alfa + 2*teta2))*(2*k1*u2^2*wL + 2*k2*u1^2*wL + 2*k1*u3^2*wL + 2*k2*u2^2*wL + 2*L^2*k1*wL + 2*L1^2*k1*wL + 2*L1^2*k2*wL - 4*L*k1*u2*wL + 4*L*k1*u3*wL + 4*L1*k1*u2*wL - 4*L1*k2*u1*wL - 4*L1*k1*u3*wL + 4*L1*k2*u2*wL - 4*k2*u1*u2*wL - 4*k1*u2*u3*wL - 4*L*L1*k1*wL))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (2*dm^2*l2^2*tetap2*sin(2*alfa + 2*teta2)*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), (k2*up3*(2*dm^2*l2^2*vL*cos(2*alfa + 2*teta2) + 4*dm^2*l2^2*wL*cos(alfa + teta2)*sin(alfa + teta2))*(L*u2 - L*u3 - L1*u2 + L1*u3 - L^2 - L1^2 + 2*vL^2 + 2*wL^2 + 2*L*L1))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L - L1 - u2 + u3)^3) - vpL*((4*vL*(dm^2*l2^2*vL*cos(2*alfa + 2*teta2) + 2*dm^2*l2^2*wL*cos(alfa + teta2)*sin(alfa + teta2))*(L^2*k1 + L1^2*k1 + L1^2*k2 + k1*u2^2 + k2*u1^2 + k1*u3^2 + k2*u2^2 - 2*L*L1*k1 - 2*L*k1*u2 + 2*L*k1*u3 + 2*L1*k1*u2 - 2*L1*k2*u1 - 2*L1*k1*u3 + 2*L1*k2*u2 - 2*k2*u1*u2 - 2*k1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (2*dm^2*l2^2*cos(2*alfa + 2*teta2)*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2)) - wpL*((4*wL*(dm^2*l2^2*vL*cos(2*alfa + 2*teta2) + 2*dm^2*l2^2*wL*cos(alfa + teta2)*sin(alfa + teta2))*(L^2*k1 + L1^2*k1 + L1^2*k2 + k1*u2^2 + k2*u1^2 + k1*u3^2 + k2*u2^2 - 2*L*L1*k1 - 2*L*k1*u2 + 2*L*k1*u3 + 2*L1*k1*u2 - 2*L1*k2*u1 - 2*L1*k1*u3 + 2*L1*k2*u2 - 2*k2*u1*u2 - 2*k1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (4*dm^2*l2^2*cos(alfa + teta2)*sin(alfa + teta2)*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2)) - (up2*(2*dm^2*l2^2*vL*cos(2*alfa + 2*teta2) + 4*dm^2*l2^2*wL*cos(alfa + teta2)*sin(alfa + teta2))*(L^3*L1^2*k1 - L1^5*k2 - 3*L^2*L1^3*k1 - L1^5*k1 - L^2*L1^3*k2 + L^2*k2*u1^3 - L^2*k2*u2^3 - 4*L1^2*k1*u2^3 + L1^2*k2*u1^3 - 6*L1^3*k1*u2^2 - 3*L1^3*k2*u1^2 + L1^2*k1*u3^3 - 4*L1^2*k2*u2^3 - 3*L1^3*k1*u3^2 - 6*L1^3*k2*u2^2 - 2*L^3*k1*vL^2 + 2*L1^3*k1*vL^2 + 2*L1^3*k2*vL^2 - 2*L^3*k1*wL^2 + 2*L1^3*k1*wL^2 + 2*L1^3*k2*wL^2 + 2*k1*u2^3*vL^2 - 2*k2*u1^3*vL^2 - 2*k1*u3^3*vL^2 + 2*k2*u2^3*vL^2 + 2*k1*u2^3*wL^2 - 2*k2*u1^3*wL^2 - 2*k1*u3^3*wL^2 + 2*k2*u2^3*wL^2 + 3*L*L1^4*k1 + 2*L*L1^4*k2 + L1^4*k1*u1 + L*k2*u2^4 - L1*k1*u2^4 - 4*L1^4*k1*u2 + 3*L1^4*k2*u1 - L1*k2*u2^4 + 3*L1^4*k1*u3 - 4*L1^4*k2*u2 + L1^4*k2*u3 - 3*L*L1^3*k1*u1 - L^3*L1*k1*u1 + 3*L*L1*k1*u2^3 - 2*L*L1*k2*u1^3 + 9*L*L1^3*k1*u2 - 6*L*L1^3*k2*u1 + L^3*L1*k1*u2 + 5*L*L1*k2*u2^3 - 6*L*L1^3*k1*u3 + 7*L*L1^3*k2*u2 - L*L1^3*k2*u3 - 3*L*k2*u1*u2^3 - L*k2*u1^3*u2 + L1*k1*u1*u2^3 + 3*L1^3*k1*u1*u2 + L*k2*u1^3*u3 - L1*k1*u1*u3^3 + 3*L1*k2*u1*u2^3 + L1*k2*u1^3*u2 - 3*L1^3*k1*u1*u3 + 9*L1^3*k2*u1*u2 - L*k2*u2^3*u3 + L1*k1*u2*u3^3 + 3*L1*k1*u2^3*u3 - L1*k2*u1^3*u3 + 9*L1^3*k1*u2*u3 - 3*L1^3*k2*u1*u3 + L1*k2*u2^3*u3 + 3*L1^3*k2*u2*u3 + 3*L^2*L1^2*k1*u1 + 9*L*L1^2*k1*u2^2 + 6*L*L1^2*k2*u1^2 - 3*L^2*L1*k1*u2^2 - 3*L^2*L1*k2*u1^2 - 6*L^2*L1^2*k1*u2 + 3*L^2*L1^2*k2*u1 + 3*L*L1^2*k1*u3^2 + 9*L*L1^2*k2*u2^2 - 3*L^2*L1*k2*u2^2 + 3*L^2*L1^2*k1*u3 - 3*L^2*L1^2*k2*u2 - 6*L*L1^2*k1*vL^2 + 6*L^2*L1*k1*vL^2 - 6*L*L1^2*k1*wL^2 + 6*L^2*L1*k1*wL^2 + 3*L*k2*u1^2*u2^2 + 3*L^2*k2*u1*u2^2 - 3*L^2*k2*u1^2*u2 + 3*L1^2*k1*u1*u2^2 - 3*L1*k2*u1^2*u2^2 + 3*L1^2*k1*u1*u3^2 + 9*L1^2*k2*u1*u2^2 - 6*L1^2*k2*u1^2*u2 - 3*L1*k1*u2^2*u3^2 - 6*L1^2*k1*u2*u3^2 + 9*L1^2*k1*u2^2*u3 + 3*L1^2*k2*u1^2*u3 + 3*L1^2*k2*u2^2*u3 - 6*L*k1*u2^2*vL^2 + 6*L^2*k1*u2*vL^2 - 6*L*k1*u3^2*vL^2 + 6*L1*k1*u2^2*vL^2 + 6*L1*k2*u1^2*vL^2 - 6*L^2*k1*u3*vL^2 + 6*L1^2*k1*u2*vL^2 - 6*L1^2*k2*u1*vL^2 + 6*L1*k1*u3^2*vL^2 + 6*L1*k2*u2^2*vL^2 - 6*L1^2*k1*u3*vL^2 + 6*L1^2*k2*u2*vL^2 - 6*L*k1*u2^2*wL^2 + 6*L^2*k1*u2*wL^2 - 6*L*k1*u3^2*wL^2 + 6*L1*k1*u2^2*wL^2 + 6*L1*k2*u1^2*wL^2 - 6*L^2*k1*u3*wL^2 + 6*L1^2*k1*u2*wL^2 - 6*L1^2*k2*u1*wL^2 + 6*L1*k1*u3^2*wL^2 + 6*L1*k2*u2^2*wL^2 - 6*L1^2*k1*u3*wL^2 + 6*L1^2*k2*u2*wL^2 - 6*k2*u1*u2^2*vL^2 + 6*k2*u1^2*u2*vL^2 + 6*k1*u2*u3^2*vL^2 - 6*k1*u2^2*u3*vL^2 - 6*k2*u1*u2^2*wL^2 + 6*k2*u1^2*u2*wL^2 + 6*k1*u2*u3^2*wL^2 - 6*k1*u2^2*u3*wL^2 - 3*L*L1*k1*u1*u2^2 - 6*L*L1^2*k1*u1*u2 + 3*L^2*L1*k1*u1*u2 - 3*L*L1*k1*u1*u3^2 - 12*L*L1*k2*u1*u2^2 + 9*L*L1*k2*u1^2*u2 + 6*L*L1^2*k1*u1*u3 - 15*L*L1^2*k2*u1*u2 - 3*L^2*L1*k1*u1*u3 + 6*L^2*L1*k2*u1*u2 + 3*L*L1*k1*u2*u3^2 - 6*L*L1*k1*u2^2*u3 - 3*L*L1*k2*u1^2*u3 - 12*L*L1^2*k1*u2*u3 + 3*L*L1^2*k2*u1*u3 + 3*L^2*L1*k1*u2*u3 - 3*L*L1*k2*u2^2*u3 - 3*L*L1^2*k2*u2*u3 - 12*L*L1*k1*u2*vL^2 + 12*L*L1*k1*u3*vL^2 - 12*L*L1*k1*u2*wL^2 + 12*L*L1*k1*u3*wL^2 + 3*L*k2*u1*u2^2*u3 - 3*L*k2*u1^2*u2*u3 + 3*L1*k1*u1*u2*u3^2 - 3*L1*k1*u1*u2^2*u3 - 6*L1^2*k1*u1*u2*u3 - 3*L1*k2*u1*u2^2*u3 + 3*L1*k2*u1^2*u2*u3 - 6*L1^2*k2*u1*u2*u3 + 12*L*k1*u2*u3*vL^2 - 12*L1*k2*u1*u2*vL^2 - 12*L1*k1*u2*u3*vL^2 + 12*L*k1*u2*u3*wL^2 - 12*L1*k2*u1*u2*wL^2 - 12*L1*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2*u3 + 6*L*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^3) - (k1*up1*(2*dm^2*l2^2*vL*cos(2*alfa + 2*teta2) + 2*dm^2*l2^2*wL*sin(2*alfa + 2*teta2))*(L1*u1 - L1*u2 - L1^2 + 2*vL^2 + 2*wL^2))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3) - (2*dm^2*l2^2*tetap2*(2*wL*cos(2*alfa + 2*teta2) - 2*vL*sin(2*alfa + 2*teta2))*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), vpL*((4*vL*(2*L*k1 - 2*L1*k1 - 2*k1*u2 + 2*k1*u3)*(wL*dm^2*l2^2*cos(alfa + teta2)^2 - (vL*sin(2*alfa + 2*teta2)*dm^2*l2^2)/2 + Mb2*wL*dm*l2^2 + Ib2*wL*dm + Ib2*Mb2*wL))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (8*vL*(wL*dm^2*l2^2*cos(alfa + teta2)^2 - (vL*sin(2*alfa + 2*teta2)*dm^2*l2^2)/2 + Mb2*wL*dm*l2^2 + Ib2*wL*dm + Ib2*Mb2*wL)*(L^2*k1 + L1^2*k1 + L1^2*k2 + k1*u2^2 + k2*u1^2 + k1*u3^2 + k2*u2^2 - 2*L*L1*k1 - 2*L*k1*u2 + 2*L*k1*u3 + 2*L1*k1*u2 - 2*L1*k2*u1 - 2*L1*k1*u3 + 2*L1*k2*u2 - 2*k2*u1*u2 - 2*k1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3) - (dm^2*l2^2*sin(2*alfa + 2*teta2)*(4*k1*u1*u2^2 - 2*k1*u2^3 - 2*k2*u2^3 - L1^3*k2 - 2*k1*u1^2*u2 + 2*k1*u1^2*u3 + 4*k2*u1*u2^2 - 2*k2*u1^2*u2 + 2*k1*u2^2*u3 + 2*k2*u1^2*u3 + 2*k2*u2^2*u3 - 2*k1*u2*vL^2 + 2*k1*u3*vL^2 - 2*k1*u2*wL^2 + 2*k1*u3*wL^2 + L*L1^2*k2 + 2*L*k1*u1^2 + 2*L*k1*u2^2 + L*k2*u1^2 - 2*L1*k1*u1^2 + 2*L1^2*k1*u1 + L*k2*u2^2 - 4*L1*k1*u2^2 - L1*k2*u1^2 - 2*L1^2*k1*u2 + 2*L1^2*k2*u1 - 5*L1*k2*u2^2 - 4*L1^2*k2*u2 + 2*L1^2*k2*u3 + 2*L*k1*vL^2 - 2*L1*k1*vL^2 + 2*L*k1*wL^2 - 2*L1*k1*wL^2 - 4*L*k1*u1*u2 - 2*L*k2*u1*u2 + 6*L1*k1*u1*u2 - 2*L1*k1*u1*u3 + 6*L1*k2*u1*u2 + 2*L1*k1*u2*u3 - 4*L1*k2*u1*u3 + 4*L1*k2*u2*u3 - 4*k1*u1*u2*u3 - 4*k2*u1*u2*u3 - 2*L*L1*k1*u1 + 2*L*L1*k1*u2 - 2*L*L1*k2*u1 + 2*L*L1*k2*u2))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (2*dm^2*l2^2*sin(2*alfa + 2*teta2)*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3)) + wpL*((2*(dm^2*l2^2*cos(alfa + teta2)^2 + Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(4*k1*u1*u2^2 - 2*k1*u2^3 - 2*k2*u2^3 - L1^3*k2 - 2*k1*u1^2*u2 + 2*k1*u1^2*u3 + 4*k2*u1*u2^2 - 2*k2*u1^2*u2 + 2*k1*u2^2*u3 + 2*k2*u1^2*u3 + 2*k2*u2^2*u3 - 2*k1*u2*vL^2 + 2*k1*u3*vL^2 - 2*k1*u2*wL^2 + 2*k1*u3*wL^2 + L*L1^2*k2 + 2*L*k1*u1^2 + 2*L*k1*u2^2 + L*k2*u1^2 - 2*L1*k1*u1^2 + 2*L1^2*k1*u1 + L*k2*u2^2 - 4*L1*k1*u2^2 - L1*k2*u1^2 - 2*L1^2*k1*u2 + 2*L1^2*k2*u1 - 5*L1*k2*u2^2 - 4*L1^2*k2*u2 + 2*L1^2*k2*u3 + 2*L*k1*vL^2 - 2*L1*k1*vL^2 + 2*L*k1*wL^2 - 2*L1*k1*wL^2 - 4*L*k1*u1*u2 - 2*L*k2*u1*u2 + 6*L1*k1*u1*u2 - 2*L1*k1*u1*u3 + 6*L1*k2*u1*u2 + 2*L1*k1*u2*u3 - 4*L1*k2*u1*u3 + 4*L1*k2*u2*u3 - 4*k1*u1*u2*u3 - 4*k2*u1*u2*u3 - 2*L*L1*k1*u1 + 2*L*L1*k1*u2 - 2*L*L1*k2*u1 + 2*L*L1*k2*u2))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (4*(dm^2*l2^2*cos(alfa + teta2)^2 + Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3) + (4*wL*(2*L*k1 - 2*L1*k1 - 2*k1*u2 + 2*k1*u3)*(wL*dm^2*l2^2*cos(alfa + teta2)^2 - (vL*sin(2*alfa + 2*teta2)*dm^2*l2^2)/2 + Mb2*wL*dm*l2^2 + Ib2*wL*dm + Ib2*Mb2*wL))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (8*wL*(wL*dm^2*l2^2*cos(alfa + teta2)^2 - (vL*sin(2*alfa + 2*teta2)*dm^2*l2^2)/2 + Mb2*wL*dm*l2^2 + Ib2*wL*dm + Ib2*Mb2*wL)*(L^2*k1 + L1^2*k1 + L1^2*k2 + k1*u2^2 + k2*u1^2 + k1*u3^2 + k2*u2^2 - 2*L*L1*k1 - 2*L*k1*u2 + 2*L*k1*u3 + 2*L1*k1*u2 - 2*L1*k2*u1 - 2*L1*k1*u3 + 2*L1*k2*u2 - 2*k2*u1*u2 - 2*k1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3)) - (up2*(2*wL*dm^2*l2^2*cos(alfa + teta2)^2 - vL*sin(2*alfa + 2*teta2)*dm^2*l2^2 + 2*Mb2*wL*dm*l2^2 + 2*Ib2*wL*dm + 2*Ib2*Mb2*wL)*(6*L^2*k1*vL^2 - L1^4*k2 - 3*L^2*L1^2*k1 - 9*L1^2*k1*u2^2 - 3*L1^2*k2*u1^2 - 3*L1^2*k1*u3^2 - 3*L1^2*k2*u2^2 - 3*L1^4*k1 + 6*L1^2*k1*vL^2 + 6*L^2*k1*wL^2 + 6*L1^2*k1*wL^2 + 6*k1*u2^2*vL^2 + 6*k1*u3^2*vL^2 + 6*k1*u2^2*wL^2 + 6*k1*u3^2*wL^2 + 6*L*L1^3*k1 + L*L1^3*k2 - L*k2*u1^3 + 3*L1^3*k1*u1 + L*k2*u2^3 - 3*L1*k1*u2^3 + L1*k2*u1^3 - 9*L1^3*k1*u2 + 3*L1^3*k2*u1 - L1*k2*u2^3 + 6*L1^3*k1*u3 - 3*L1^3*k2*u2 - 6*L*L1^2*k1*u1 + 3*L^2*L1*k1*u1 + 6*L*L1*k1*u2^2 + 3*L*L1*k2*u1^2 + 12*L*L1^2*k1*u2 - 3*L*L1^2*k2*u1 - 3*L^2*L1*k1*u2 + 3*L*L1*k2*u2^2 - 6*L*L1^2*k1*u3 + 3*L*L1^2*k2*u2 - 12*L*L1*k1*vL^2 - 12*L*L1*k1*wL^2 - 3*L*k2*u1*u2^2 + 3*L*k2*u1^2*u2 + 3*L1*k1*u1*u2^2 + 6*L1^2*k1*u1*u2 + 3*L1*k1*u1*u3^2 + 3*L1*k2*u1*u2^2 - 3*L1*k2*u1^2*u2 - 6*L1^2*k1*u1*u3 + 6*L1^2*k2*u1*u2 - 3*L1*k1*u2*u3^2 + 6*L1*k1*u2^2*u3 + 12*L1^2*k1*u2*u3 - 12*L*k1*u2*vL^2 + 12*L*k1*u3*vL^2 + 12*L1*k1*u2*vL^2 - 12*L1*k1*u3*vL^2 - 12*L*k1*u2*wL^2 + 12*L*k1*u3*wL^2 + 12*L1*k1*u2*wL^2 - 12*L1*k1*u3*wL^2 - 12*k1*u2*u3*vL^2 - 12*k1*u2*u3*wL^2 - 6*L*L1*k1*u1*u2 + 6*L*L1*k1*u1*u3 - 6*L*L1*k2*u1*u2 - 6*L*L1*k1*u2*u3 - 6*L1*k1*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^3) + (k2*up3*(L - L1)*(2*wL*dm^2*l2^2*cos(alfa + teta2)^2 - vL*sin(2*alfa + 2*teta2)*dm^2*l2^2 + 2*Mb2*wL*dm*l2^2 + 2*Ib2*wL*dm + 2*Ib2*Mb2*wL))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L - L1 - u2 + u3)^3) + (3*k2*up3*(2*wL*dm^2*l2^2*cos(alfa + teta2)^2 - vL*sin(2*alfa + 2*teta2)*dm^2*l2^2 + 2*Mb2*wL*dm*l2^2 + 2*Ib2*wL*dm + 2*Ib2*Mb2*wL)*(L*u2 - L*u3 - L1*u2 + L1*u3 - L^2 - L1^2 + 2*vL^2 + 2*wL^2 + 2*L*L1))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L - L1 - u2 + u3)^4) - (3*up2*(2*wL*dm^2*l2^2*cos(alfa + teta2)^2 - vL*sin(2*alfa + 2*teta2)*dm^2*l2^2 + 2*Mb2*wL*dm*l2^2 + 2*Ib2*wL*dm + 2*Ib2*Mb2*wL)*(L^3*L1^2*k1 - L1^5*k2 - 3*L^2*L1^3*k1 - L1^5*k1 - L^2*L1^3*k2 + L^2*k2*u1^3 - L^2*k2*u2^3 - 4*L1^2*k1*u2^3 + L1^2*k2*u1^3 - 6*L1^3*k1*u2^2 - 3*L1^3*k2*u1^2 + L1^2*k1*u3^3 - 4*L1^2*k2*u2^3 - 3*L1^3*k1*u3^2 - 6*L1^3*k2*u2^2 - 2*L^3*k1*vL^2 + 2*L1^3*k1*vL^2 + 2*L1^3*k2*vL^2 - 2*L^3*k1*wL^2 + 2*L1^3*k1*wL^2 + 2*L1^3*k2*wL^2 + 2*k1*u2^3*vL^2 - 2*k2*u1^3*vL^2 - 2*k1*u3^3*vL^2 + 2*k2*u2^3*vL^2 + 2*k1*u2^3*wL^2 - 2*k2*u1^3*wL^2 - 2*k1*u3^3*wL^2 + 2*k2*u2^3*wL^2 + 3*L*L1^4*k1 + 2*L*L1^4*k2 + L1^4*k1*u1 + L*k2*u2^4 - L1*k1*u2^4 - 4*L1^4*k1*u2 + 3*L1^4*k2*u1 - L1*k2*u2^4 + 3*L1^4*k1*u3 - 4*L1^4*k2*u2 + L1^4*k2*u3 - 3*L*L1^3*k1*u1 - L^3*L1*k1*u1 + 3*L*L1*k1*u2^3 - 2*L*L1*k2*u1^3 + 9*L*L1^3*k1*u2 - 6*L*L1^3*k2*u1 + L^3*L1*k1*u2 + 5*L*L1*k2*u2^3 - 6*L*L1^3*k1*u3 + 7*L*L1^3*k2*u2 - L*L1^3*k2*u3 - 3*L*k2*u1*u2^3 - L*k2*u1^3*u2 + L1*k1*u1*u2^3 + 3*L1^3*k1*u1*u2 + L*k2*u1^3*u3 - L1*k1*u1*u3^3 + 3*L1*k2*u1*u2^3 + L1*k2*u1^3*u2 - 3*L1^3*k1*u1*u3 + 9*L1^3*k2*u1*u2 - L*k2*u2^3*u3 + L1*k1*u2*u3^3 + 3*L1*k1*u2^3*u3 - L1*k2*u1^3*u3 + 9*L1^3*k1*u2*u3 - 3*L1^3*k2*u1*u3 + L1*k2*u2^3*u3 + 3*L1^3*k2*u2*u3 + 3*L^2*L1^2*k1*u1 + 9*L*L1^2*k1*u2^2 + 6*L*L1^2*k2*u1^2 - 3*L^2*L1*k1*u2^2 - 3*L^2*L1*k2*u1^2 - 6*L^2*L1^2*k1*u2 + 3*L^2*L1^2*k2*u1 + 3*L*L1^2*k1*u3^2 + 9*L*L1^2*k2*u2^2 - 3*L^2*L1*k2*u2^2 + 3*L^2*L1^2*k1*u3 - 3*L^2*L1^2*k2*u2 - 6*L*L1^2*k1*vL^2 + 6*L^2*L1*k1*vL^2 - 6*L*L1^2*k1*wL^2 + 6*L^2*L1*k1*wL^2 + 3*L*k2*u1^2*u2^2 + 3*L^2*k2*u1*u2^2 - 3*L^2*k2*u1^2*u2 + 3*L1^2*k1*u1*u2^2 - 3*L1*k2*u1^2*u2^2 + 3*L1^2*k1*u1*u3^2 + 9*L1^2*k2*u1*u2^2 - 6*L1^2*k2*u1^2*u2 - 3*L1*k1*u2^2*u3^2 - 6*L1^2*k1*u2*u3^2 + 9*L1^2*k1*u2^2*u3 + 3*L1^2*k2*u1^2*u3 + 3*L1^2*k2*u2^2*u3 - 6*L*k1*u2^2*vL^2 + 6*L^2*k1*u2*vL^2 - 6*L*k1*u3^2*vL^2 + 6*L1*k1*u2^2*vL^2 + 6*L1*k2*u1^2*vL^2 - 6*L^2*k1*u3*vL^2 + 6*L1^2*k1*u2*vL^2 - 6*L1^2*k2*u1*vL^2 + 6*L1*k1*u3^2*vL^2 + 6*L1*k2*u2^2*vL^2 - 6*L1^2*k1*u3*vL^2 + 6*L1^2*k2*u2*vL^2 - 6*L*k1*u2^2*wL^2 + 6*L^2*k1*u2*wL^2 - 6*L*k1*u3^2*wL^2 + 6*L1*k1*u2^2*wL^2 + 6*L1*k2*u1^2*wL^2 - 6*L^2*k1*u3*wL^2 + 6*L1^2*k1*u2*wL^2 - 6*L1^2*k2*u1*wL^2 + 6*L1*k1*u3^2*wL^2 + 6*L1*k2*u2^2*wL^2 - 6*L1^2*k1*u3*wL^2 + 6*L1^2*k2*u2*wL^2 - 6*k2*u1*u2^2*vL^2 + 6*k2*u1^2*u2*vL^2 + 6*k1*u2*u3^2*vL^2 - 6*k1*u2^2*u3*vL^2 - 6*k2*u1*u2^2*wL^2 + 6*k2*u1^2*u2*wL^2 + 6*k1*u2*u3^2*wL^2 - 6*k1*u2^2*u3*wL^2 - 3*L*L1*k1*u1*u2^2 - 6*L*L1^2*k1*u1*u2 + 3*L^2*L1*k1*u1*u2 - 3*L*L1*k1*u1*u3^2 - 12*L*L1*k2*u1*u2^2 + 9*L*L1*k2*u1^2*u2 + 6*L*L1^2*k1*u1*u3 - 15*L*L1^2*k2*u1*u2 - 3*L^2*L1*k1*u1*u3 + 6*L^2*L1*k2*u1*u2 + 3*L*L1*k1*u2*u3^2 - 6*L*L1*k1*u2^2*u3 - 3*L*L1*k2*u1^2*u3 - 12*L*L1^2*k1*u2*u3 + 3*L*L1^2*k2*u1*u3 + 3*L^2*L1*k1*u2*u3 - 3*L*L1*k2*u2^2*u3 - 3*L*L1^2*k2*u2*u3 - 12*L*L1*k1*u2*vL^2 + 12*L*L1*k1*u3*vL^2 - 12*L*L1*k1*u2*wL^2 + 12*L*L1*k1*u3*wL^2 + 3*L*k2*u1*u2^2*u3 - 3*L*k2*u1^2*u2*u3 + 3*L1*k1*u1*u2*u3^2 - 3*L1*k1*u1*u2^2*u3 - 6*L1^2*k1*u1*u2*u3 - 3*L1*k2*u1*u2^2*u3 + 3*L1*k2*u1^2*u2*u3 - 6*L1^2*k2*u1*u2*u3 + 12*L*k1*u2*u3*vL^2 - 12*L1*k2*u1*u2*vL^2 - 12*L1*k1*u2*u3*vL^2 + 12*L*k1*u2*u3*wL^2 - 12*L1*k2*u1*u2*wL^2 - 12*L1*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2*u3 + 6*L*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^4) - (2*dm^2*l2^2*tetap2*(vL*cos(2*alfa + 2*teta2) + wL*sin(2*alfa + 2*teta2))*(4*k1*u1*u2^2 - 2*k1*u2^3 - 2*k2*u2^3 - L1^3*k2 - 2*k1*u1^2*u2 + 2*k1*u1^2*u3 + 4*k2*u1*u2^2 - 2*k2*u1^2*u2 + 2*k1*u2^2*u3 + 2*k2*u1^2*u3 + 2*k2*u2^2*u3 - 2*k1*u2*vL^2 + 2*k1*u3*vL^2 - 2*k1*u2*wL^2 + 2*k1*u3*wL^2 + L*L1^2*k2 + 2*L*k1*u1^2 + 2*L*k1*u2^2 + L*k2*u1^2 - 2*L1*k1*u1^2 + 2*L1^2*k1*u1 + L*k2*u2^2 - 4*L1*k1*u2^2 - L1*k2*u1^2 - 2*L1^2*k1*u2 + 2*L1^2*k2*u1 - 5*L1*k2*u2^2 - 4*L1^2*k2*u2 + 2*L1^2*k2*u3 + 2*L*k1*vL^2 - 2*L1*k1*vL^2 + 2*L*k1*wL^2 - 2*L1*k1*wL^2 - 4*L*k1*u1*u2 - 2*L*k2*u1*u2 + 6*L1*k1*u1*u2 - 2*L1*k1*u1*u3 + 6*L1*k2*u1*u2 + 2*L1*k1*u2*u3 - 4*L1*k2*u1*u3 + 4*L1*k2*u2*u3 - 4*k1*u1*u2*u3 - 4*k2*u1*u2*u3 - 2*L*L1*k1*u1 + 2*L*L1*k1*u2 - 2*L*L1*k2*u1 + 2*L*L1*k2*u2))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (4*dm^2*l2^2*tetap2*(vL*cos(2*alfa + 2*teta2) + wL*sin(2*alfa + 2*teta2))*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3), 0, (k1*(L1*u1 - L1*u2 - L1^2 + 2*vL^2 + 2*wL^2)*(dm^2*l2^2*wL + 2*Ib2*Mb2*wL + 2*Ib2*dm*wL + 2*Mb2*dm*l2^2*wL + dm^2*l2^2*wL*cos(2*alfa + 2*teta2) - dm^2*l2^2*vL*sin(2*alfa + 2*teta2)))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3), 0, ((2*Ib2*Mb2*wL + 2*Ib2*dm*wL + 2*Mb2*dm*l2^2*wL + 2*dm^2*l2^2*wL*cos(alfa + teta2)^2 - dm^2*l2^2*vL*sin(2*alfa + 2*teta2))*(L^3*L1^2*k1 - L1^5*k2 - 3*L^2*L1^3*k1 - L1^5*k1 - L^2*L1^3*k2 + L^2*k2*u1^3 - L^2*k2*u2^3 - 4*L1^2*k1*u2^3 + L1^2*k2*u1^3 - 6*L1^3*k1*u2^2 - 3*L1^3*k2*u1^2 + L1^2*k1*u3^3 - 4*L1^2*k2*u2^3 - 3*L1^3*k1*u3^2 - 6*L1^3*k2*u2^2 - 2*L^3*k1*vL^2 + 2*L1^3*k1*vL^2 + 2*L1^3*k2*vL^2 - 2*L^3*k1*wL^2 + 2*L1^3*k1*wL^2 + 2*L1^3*k2*wL^2 + 2*k1*u2^3*vL^2 - 2*k2*u1^3*vL^2 - 2*k1*u3^3*vL^2 + 2*k2*u2^3*vL^2 + 2*k1*u2^3*wL^2 - 2*k2*u1^3*wL^2 - 2*k1*u3^3*wL^2 + 2*k2*u2^3*wL^2 + 3*L*L1^4*k1 + 2*L*L1^4*k2 + L1^4*k1*u1 + L*k2*u2^4 - L1*k1*u2^4 - 4*L1^4*k1*u2 + 3*L1^4*k2*u1 - L1*k2*u2^4 + 3*L1^4*k1*u3 - 4*L1^4*k2*u2 + L1^4*k2*u3 - 3*L*L1^3*k1*u1 - L^3*L1*k1*u1 + 3*L*L1*k1*u2^3 - 2*L*L1*k2*u1^3 + 9*L*L1^3*k1*u2 - 6*L*L1^3*k2*u1 + L^3*L1*k1*u2 + 5*L*L1*k2*u2^3 - 6*L*L1^3*k1*u3 + 7*L*L1^3*k2*u2 - L*L1^3*k2*u3 - 3*L*k2*u1*u2^3 - L*k2*u1^3*u2 + L1*k1*u1*u2^3 + 3*L1^3*k1*u1*u2 + L*k2*u1^3*u3 - L1*k1*u1*u3^3 + 3*L1*k2*u1*u2^3 + L1*k2*u1^3*u2 - 3*L1^3*k1*u1*u3 + 9*L1^3*k2*u1*u2 - L*k2*u2^3*u3 + L1*k1*u2*u3^3 + 3*L1*k1*u2^3*u3 - L1*k2*u1^3*u3 + 9*L1^3*k1*u2*u3 - 3*L1^3*k2*u1*u3 + L1*k2*u2^3*u3 + 3*L1^3*k2*u2*u3 + 3*L^2*L1^2*k1*u1 + 9*L*L1^2*k1*u2^2 + 6*L*L1^2*k2*u1^2 - 3*L^2*L1*k1*u2^2 - 3*L^2*L1*k2*u1^2 - 6*L^2*L1^2*k1*u2 + 3*L^2*L1^2*k2*u1 + 3*L*L1^2*k1*u3^2 + 9*L*L1^2*k2*u2^2 - 3*L^2*L1*k2*u2^2 + 3*L^2*L1^2*k1*u3 - 3*L^2*L1^2*k2*u2 - 6*L*L1^2*k1*vL^2 + 6*L^2*L1*k1*vL^2 - 6*L*L1^2*k1*wL^2 + 6*L^2*L1*k1*wL^2 + 3*L*k2*u1^2*u2^2 + 3*L^2*k2*u1*u2^2 - 3*L^2*k2*u1^2*u2 + 3*L1^2*k1*u1*u2^2 - 3*L1*k2*u1^2*u2^2 + 3*L1^2*k1*u1*u3^2 + 9*L1^2*k2*u1*u2^2 - 6*L1^2*k2*u1^2*u2 - 3*L1*k1*u2^2*u3^2 - 6*L1^2*k1*u2*u3^2 + 9*L1^2*k1*u2^2*u3 + 3*L1^2*k2*u1^2*u3 + 3*L1^2*k2*u2^2*u3 - 6*L*k1*u2^2*vL^2 + 6*L^2*k1*u2*vL^2 - 6*L*k1*u3^2*vL^2 + 6*L1*k1*u2^2*vL^2 + 6*L1*k2*u1^2*vL^2 - 6*L^2*k1*u3*vL^2 + 6*L1^2*k1*u2*vL^2 - 6*L1^2*k2*u1*vL^2 + 6*L1*k1*u3^2*vL^2 + 6*L1*k2*u2^2*vL^2 - 6*L1^2*k1*u3*vL^2 + 6*L1^2*k2*u2*vL^2 - 6*L*k1*u2^2*wL^2 + 6*L^2*k1*u2*wL^2 - 6*L*k1*u3^2*wL^2 + 6*L1*k1*u2^2*wL^2 + 6*L1*k2*u1^2*wL^2 - 6*L^2*k1*u3*wL^2 + 6*L1^2*k1*u2*wL^2 - 6*L1^2*k2*u1*wL^2 + 6*L1*k1*u3^2*wL^2 + 6*L1*k2*u2^2*wL^2 - 6*L1^2*k1*u3*wL^2 + 6*L1^2*k2*u2*wL^2 - 6*k2*u1*u2^2*vL^2 + 6*k2*u1^2*u2*vL^2 + 6*k1*u2*u3^2*vL^2 - 6*k1*u2^2*u3*vL^2 - 6*k2*u1*u2^2*wL^2 + 6*k2*u1^2*u2*wL^2 + 6*k1*u2*u3^2*wL^2 - 6*k1*u2^2*u3*wL^2 - 3*L*L1*k1*u1*u2^2 - 6*L*L1^2*k1*u1*u2 + 3*L^2*L1*k1*u1*u2 - 3*L*L1*k1*u1*u3^2 - 12*L*L1*k2*u1*u2^2 + 9*L*L1*k2*u1^2*u2 + 6*L*L1^2*k1*u1*u3 - 15*L*L1^2*k2*u1*u2 - 3*L^2*L1*k1*u1*u3 + 6*L^2*L1*k2*u1*u2 + 3*L*L1*k1*u2*u3^2 - 6*L*L1*k1*u2^2*u3 - 3*L*L1*k2*u1^2*u3 - 12*L*L1^2*k1*u2*u3 + 3*L*L1^2*k2*u1*u3 + 3*L^2*L1*k1*u2*u3 - 3*L*L1*k2*u2^2*u3 - 3*L*L1^2*k2*u2*u3 - 12*L*L1*k1*u2*vL^2 + 12*L*L1*k1*u3*vL^2 - 12*L*L1*k1*u2*wL^2 + 12*L*L1*k1*u3*wL^2 + 3*L*k2*u1*u2^2*u3 - 3*L*k2*u1^2*u2*u3 + 3*L1*k1*u1*u2*u3^2 - 3*L1*k1*u1*u2^2*u3 - 6*L1^2*k1*u1*u2*u3 - 3*L1*k2*u1*u2^2*u3 + 3*L1*k2*u1^2*u2*u3 - 6*L1^2*k2*u1*u2*u3 + 12*L*k1*u2*u3*vL^2 - 12*L1*k2*u1*u2*vL^2 - 12*L1*k1*u2*u3*vL^2 + 12*L*k1*u2*u3*wL^2 - 12*L1*k2*u1*u2*wL^2 - 12*L1*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2*u3 + 6*L*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^3), (4*vL*(Ib2*Mb2*wL + Ib2*dm*wL + Mb2*dm*l2^2*wL + dm^2*l2^2*wL*cos(alfa + teta2)^2 - (dm^2*l2^2*vL*sin(2*alfa + 2*teta2))/2)*(L^2*k1 + L1^2*k1 + L1^2*k2 + k1*u2^2 + k2*u1^2 + k1*u3^2 + k2*u2^2 - 2*L*L1*k1 - 2*L*k1*u2 + 2*L*k1*u3 + 2*L1*k1*u2 - 2*L1*k2*u1 - 2*L1*k1*u3 + 2*L1*k2*u2 - 2*k2*u1*u2 - 2*k1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (dm^2*l2^2*sin(2*alfa + 2*teta2)*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), (2*(dm^2*l2^2*cos(alfa + teta2)^2 + Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (4*wL*(Ib2*Mb2*wL + Ib2*dm*wL + Mb2*dm*l2^2*wL + dm^2*l2^2*wL*cos(alfa + teta2)^2 - (dm^2*l2^2*vL*sin(2*alfa + 2*teta2))/2)*(L^2*k1 + L1^2*k1 + L1^2*k2 + k1*u2^2 + k2*u1^2 + k1*u3^2 + k2*u2^2 - 2*L*L1*k1 - 2*L*k1*u2 + 2*L*k1*u3 + 2*L1*k1*u2 - 2*L1*k2*u1 - 2*L1*k1*u3 + 2*L1*k2*u2 - 2*k2*u1*u2 - 2*k1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), -(2*dm^2*l2^2*(vL*cos(2*alfa + 2*teta2) + wL*sin(2*alfa + 2*teta2))*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), -(k2*(2*Ib2*Mb2*wL + 2*Ib2*dm*wL + 2*Mb2*dm*l2^2*wL + 2*dm^2*l2^2*wL*cos(alfa + teta2)^2 - dm^2*l2^2*vL*sin(2*alfa + 2*teta2))*(L*u2 - L*u3 - L1*u2 + L1*u3 - L^2 - L1^2 + 2*vL^2 + 2*wL^2 + 2*L*L1))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L - L1 - u2 + u3)^3), 0];
ddgamaWAiMFuZTAZdZTA = simplify(ddgamaWAiMFudZTAZdZT*A);
%{
diary ('ddgamaWAiMFuZTAZdZTA.txt');
ddgamaWAiMFuZTAZdZTA % your symbolic variable
diary off
%}
ddgamaWAiMFudZTAZdZTiMG = simplify(ddgamaWAiMFudZTAZdZT*iMGz);
%{
diary ('ddgamaWAiMFudZTAZdZTiMG.txt');
ddgamaWAiMFudZTAZdZTiMG % your symbolic variable
diary off
%}
ddgamaWAiMFudZTAZdZTiMFu = simplify(ddgamaWAiMFudZTAZdZT*iMFuz);
%{
diary ('ddgamaWAiMFudZTAZdZTiMFu.txt');
ddgamaWAiMFudZTAZdZTiMFu % your symbolic variable
diary off
%}
ddgamaWAiMFudZTAZdZTBb = simplify(ddgamaWAiMFudZTAZdZT*Bb);
%{
diary ('ddgamaWAiMFudZTAZdZTBb.txt');
ddgamaWAiMFudZTAZdZTBb % your symbolic variable
diary off
%}
disp('ping_09')
ddgamaWAiMGdZTiMFudZT = [(8*dm^2*l2^2*tetap2*sin(alfa + teta2)*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^2) - (4*dm^2*l2^2*tetap2*sin(alfa + teta2)*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(L1^3*k1 + 2*k1*u2^3 + 2*k2*u2^3 - 2*k1*u1*u2^2 - 2*k1*u1*u3^2 - 2*k2*u1*u2^2 + 2*k1*u2*u3^2 - 4*k1*u2^2*u3 - 2*k2*u1*u3^2 + 2*k2*u2*u3^2 - 4*k2*u2^2*u3 - 2*k2*u1*vL^2 + 2*k2*u2*vL^2 - 2*k2*u1*wL^2 + 2*k2*u2*wL^2 - 2*L*L1^2*k1 + L^2*L1*k1 - 2*L^2*k1*u1 - 4*L*k1*u2^2 + 2*L^2*k1*u2 - 2*L1^2*k1*u1 - 2*L*k2*u2^2 + 5*L1*k1*u2^2 + 4*L1^2*k1*u2 + L1*k1*u3^2 + 4*L1*k2*u2^2 - 2*L1^2*k1*u3 + 2*L1^2*k2*u2 + 2*L1*k2*u3^2 - 2*L1^2*k2*u3 + 2*L1*k2*vL^2 + 2*L1*k2*wL^2 + 4*L*k1*u1*u2 - 4*L*k1*u1*u3 + 2*L*k2*u1*u2 - 4*L1*k1*u1*u2 + 4*L*k1*u2*u3 - 2*L*k2*u1*u3 + 4*L1*k1*u1*u3 - 2*L1*k2*u1*u2 + 2*L*k2*u2*u3 - 6*L1*k1*u2*u3 + 2*L1*k2*u1*u3 - 6*L1*k2*u2*u3 + 4*k1*u1*u2*u3 + 4*k2*u1*u2*u3 + 4*L*L1*k1*u1 - 6*L*L1*k1*u2 + 2*L*L1*k1*u3 - 2*L*L1*k2*u2 + 2*L*L1*k2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), 0, (4*dm^2*l2^2*tetap2*sin(alfa + teta2)*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(L1^3*k1 + L1^3*k2 + 4*k1*u2^3 + 4*k2*u2^3 - 6*k1*u1*u2^2 + 2*k1*u1^2*u2 - 2*k1*u1*u3^2 - 2*k1*u1^2*u3 - 6*k2*u1*u2^2 + 2*k2*u1^2*u2 + 2*k1*u2*u3^2 - 6*k1*u2^2*u3 - 2*k2*u1*u3^2 - 2*k2*u1^2*u3 + 2*k2*u2*u3^2 - 6*k2*u2^2*u3 + 2*k1*u2*vL^2 - 2*k2*u1*vL^2 - 2*k1*u3*vL^2 + 2*k2*u2*vL^2 + 2*k1*u2*wL^2 - 2*k2*u1*wL^2 - 2*k1*u3*wL^2 + 2*k2*u2*wL^2 - 2*L*L1^2*k1 + L^2*L1*k1 - L*L1^2*k2 - 2*L*k1*u1^2 - 2*L^2*k1*u1 - 6*L*k1*u2^2 - L*k2*u1^2 + 2*L1*k1*u1^2 + 2*L^2*k1*u2 - 4*L1^2*k1*u1 - 3*L*k2*u2^2 + 9*L1*k1*u2^2 + L1*k2*u1^2 + 6*L1^2*k1*u2 - 2*L1^2*k2*u1 + L1*k1*u3^2 + 9*L1*k2*u2^2 - 2*L1^2*k1*u3 + 6*L1^2*k2*u2 + 2*L1*k2*u3^2 - 4*L1^2*k2*u3 - 2*L*k1*vL^2 + 2*L1*k1*vL^2 + 2*L1*k2*vL^2 - 2*L*k1*wL^2 + 2*L1*k1*wL^2 + 2*L1*k2*wL^2 + 8*L*k1*u1*u2 - 4*L*k1*u1*u3 + 4*L*k2*u1*u2 - 10*L1*k1*u1*u2 + 4*L*k1*u2*u3 - 2*L*k2*u1*u3 + 6*L1*k1*u1*u3 - 8*L1*k2*u1*u2 + 2*L*k2*u2*u3 - 8*L1*k1*u2*u3 + 6*L1*k2*u1*u3 - 10*L1*k2*u2*u3 + 8*k1*u1*u2*u3 + 8*k2*u1*u2*u3 + 6*L*L1*k1*u1 - 8*L*L1*k1*u2 + 2*L*L1*k2*u1 + 2*L*L1*k1*u3 - 4*L*L1*k2*u2 + 2*L*L1*k2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (8*dm^2*l2^2*tetap2*sin(alfa + teta2)*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3) - (8*dm^2*l2^2*tetap2*sin(alfa + teta2)*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^3*(L - L1 - u2 + u3)^2), (4*dm^2*l2^2*tetap2*sin(alfa + teta2)*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(2*k1*u2^2*vL + 2*k2*u1^2*vL + 2*k1*u3^2*vL + 2*k2*u2^2*vL + 2*L^2*k1*vL + 2*L1^2*k1*vL + 2*L1^2*k2*vL - 4*L*k1*u2*vL + 4*L*k1*u3*vL + 4*L1*k1*u2*vL - 4*L1*k2*u1*vL - 4*L1*k1*u3*vL + 4*L1*k2*u2*vL - 4*k2*u1*u2*vL - 4*k1*u2*u3*vL - 4*L*L1*k1*vL))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (4*dm^2*l2^2*tetap2*sin(alfa + teta2)^2*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), (4*dm^2*l2^2*tetap2*cos(alfa + teta2)*sin(alfa + teta2)*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) + (4*dm^2*l2^2*tetap2*sin(alfa + teta2)*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(2*k1*u2^2*wL + 2*k2*u1^2*wL + 2*k1*u3^2*wL + 2*k2*u2^2*wL + 2*L^2*k1*wL + 2*L1^2*k1*wL + 2*L1^2*k2*wL - 4*L*k1*u2*wL + 4*L*k1*u3*wL + 4*L1*k1*u2*wL - 4*L1*k2*u1*wL - 4*L1*k1*u3*wL + 4*L1*k2*u2*wL - 4*k2*u1*u2*wL - 4*k1*u2*u3*wL - 4*L*L1*k1*wL))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), (4*dm^2*l2^2*tetap2*cos(alfa + teta2)*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (4*dm^2*l2^2*tetap2*sin(alfa + teta2)*(vL*cos(alfa + teta2) + wL*sin(alfa + teta2))*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), (4*dm^2*l2^2*tetap2*sin(alfa + teta2)*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(4*k1*u1*u2^2 - 2*k1*u2^3 - 2*k2*u2^3 - L1^3*k2 - 2*k1*u1^2*u2 + 2*k1*u1^2*u3 + 4*k2*u1*u2^2 - 2*k2*u1^2*u2 + 2*k1*u2^2*u3 + 2*k2*u1^2*u3 + 2*k2*u2^2*u3 - 2*k1*u2*vL^2 + 2*k1*u3*vL^2 - 2*k1*u2*wL^2 + 2*k1*u3*wL^2 + L*L1^2*k2 + 2*L*k1*u1^2 + 2*L*k1*u2^2 + L*k2*u1^2 - 2*L1*k1*u1^2 + 2*L1^2*k1*u1 + L*k2*u2^2 - 4*L1*k1*u2^2 - L1*k2*u1^2 - 2*L1^2*k1*u2 + 2*L1^2*k2*u1 - 5*L1*k2*u2^2 - 4*L1^2*k2*u2 + 2*L1^2*k2*u3 + 2*L*k1*vL^2 - 2*L1*k1*vL^2 + 2*L*k1*wL^2 - 2*L1*k1*wL^2 - 4*L*k1*u1*u2 - 2*L*k2*u1*u2 + 6*L1*k1*u1*u2 - 2*L1*k1*u1*u3 + 6*L1*k2*u1*u2 + 2*L1*k1*u2*u3 - 4*L1*k2*u1*u3 + 4*L1*k2*u2*u3 - 4*k1*u1*u2*u3 - 4*k2*u1*u2*u3 - 2*L*L1*k1*u1 + 2*L*L1*k1*u2 - 2*L*L1*k2*u1 + 2*L*L1*k2*u2))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2) - (8*dm^2*l2^2*tetap2*sin(alfa + teta2)*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^3), 0, 0, 0, 0, 0, 0, (4*dm^2*l2^2*sin(alfa + teta2)*(wL*cos(alfa + teta2) - vL*sin(alfa + teta2))*(k1*u2^4 + k2*u2^4 - 2*k1*u1*u2^3 - 2*k2*u1*u2^3 - 2*k1*u2^3*u3 - 2*k2*u2^3*u3 + L^2*k1*u1^2 + L^2*k1*u2^2 + L1^2*k1*u1^2 + 3*L1^2*k1*u2^2 + 3*L1^2*k2*u2^2 + L1^2*k2*u3^2 + L^2*k1*vL^2 + L1^2*k1*vL^2 + L1^2*k2*vL^2 + L^2*k1*wL^2 + L1^2*k1*wL^2 + L1^2*k2*wL^2 + k1*u1^2*u2^2 + k1*u1^2*u3^2 + k2*u1^2*u2^2 + k1*u2^2*u3^2 + k2*u1^2*u3^2 + k2*u2^2*u3^2 + k1*u2^2*vL^2 + k2*u1^2*vL^2 + k1*u3^2*vL^2 + k2*u2^2*vL^2 + k1*u2^2*wL^2 + k2*u1^2*wL^2 + k1*u3^2*wL^2 + k2*u2^2*wL^2 - 2*L*k1*u2^3 - L1^3*k1*u1 - L*k2*u2^3 + 3*L1*k1*u2^3 + L1^3*k1*u2 + 3*L1*k2*u2^3 + L1^3*k2*u2 - L1^3*k2*u3 - 2*L*L1*k1*u1^2 + 2*L*L1^2*k1*u1 - L^2*L1*k1*u1 - 4*L*L1*k1*u2^2 - 2*L*L1^2*k1*u2 + L^2*L1*k1*u2 - 2*L*L1*k2*u2^2 - L*L1^2*k2*u2 + L*L1^2*k2*u3 - 2*L*L1*k1*vL^2 - 2*L*L1*k1*wL^2 + 4*L*k1*u1*u2^2 - 2*L*k1*u1^2*u2 - 2*L^2*k1*u1*u2 + 2*L*k1*u1^2*u3 + 2*L*k2*u1*u2^2 - L*k2*u1^2*u2 - 5*L1*k1*u1*u2^2 + 2*L1*k1*u1^2*u2 - 4*L1^2*k1*u1*u2 + 2*L*k1*u2^2*u3 + L*k2*u1^2*u3 - L1*k1*u1*u3^2 - 2*L1*k1*u1^2*u3 - 4*L1*k2*u1*u2^2 + L1*k2*u1^2*u2 + 2*L1^2*k1*u1*u3 - 2*L1^2*k2*u1*u2 + L*k2*u2^2*u3 + L1*k1*u2*u3^2 - 4*L1*k1*u2^2*u3 - 2*L1*k2*u1*u3^2 - L1*k2*u1^2*u3 - 2*L1^2*k1*u2*u3 + 2*L1^2*k2*u1*u3 + 2*L1*k2*u2*u3^2 - 5*L1*k2*u2^2*u3 - 4*L1^2*k2*u2*u3 - 2*L*k1*u2*vL^2 + 2*L*k1*u3*vL^2 + 2*L1*k1*u2*vL^2 - 2*L1*k2*u1*vL^2 - 2*L1*k1*u3*vL^2 + 2*L1*k2*u2*vL^2 - 2*L*k1*u2*wL^2 + 2*L*k1*u3*wL^2 + 2*L1*k1*u2*wL^2 - 2*L1*k2*u1*wL^2 - 2*L1*k1*u3*wL^2 + 2*L1*k2*u2*wL^2 - 2*k1*u1*u2*u3^2 + 4*k1*u1*u2^2*u3 - 2*k1*u1^2*u2*u3 - 2*k2*u1*u2*u3^2 + 4*k2*u1*u2^2*u3 - 2*k2*u1^2*u2*u3 - 2*k2*u1*u2*vL^2 - 2*k1*u2*u3*vL^2 - 2*k2*u1*u2*wL^2 - 2*k1*u2*u3*wL^2 + 6*L*L1*k1*u1*u2 - 2*L*L1*k1*u1*u3 + 2*L*L1*k2*u1*u2 + 2*L*L1*k1*u2*u3 - 2*L*L1*k2*u1*u3 + 2*L*L1*k2*u2*u3 - 4*L*k1*u1*u2*u3 - 2*L*k2*u1*u2*u3 + 6*L1*k1*u1*u2*u3 + 6*L1*k2*u1*u2*u3))/((Mb2 + dm)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L1 - u1 + u2)^2*(L - L1 - u2 + u3)^2), 0, 0];
ddgamaWAiMGdZTiMFudZTA = simplify(ddgamaWAiMGdZTiMFudZT*A);
%{
diary ('ddgamaWAiMGdZTiMFudZTA.txt');
ddgamaWAiMGdZTiMFudZTA % your symbolic variable
diary off
%}
ddgamaWAiMGdZTiMFudZTiMG = simplify(ddgamaWAiMGdZTiMFudZT*iMGz);
%{
diary ('ddgamaWAiMGdZTiMFudZTiMG.txt');
ddgamaWAiMGdZTiMFudZTiMG % your symbolic variable
diary off
%}
ddgamaWAiMGdZTiMFudZTiMFu = simplify(ddgamaWAiMGdZTiMFudZT*iMFuz);
%{
diary ('ddgamaWAiMGdZTiMFudZTiMFu.txt');
ddgamaWAiMGdZTiMFudZTiMFu % your symbolic variable
diary off
%}
ddgamaWAiMGdZTiMFudZTBb = simplify(ddgamaWAiMGdZTiMFudZT*Bb);
%{
diary ('ddgamaWAiMGdZTiMFudZTBb.txt');
ddgamaWAiMGdZTiMFudZTBb % your symbolic variable
diary off
%}
disp('ping_10')
ddgamaWA2dtZdZT = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
ddgamaWA2dtZdZTA = simplify(ddgamaWA2dtZdZT*A);
%{
diary ('ddgamaWA2dtZdZTA.txt');
ddgamaWA2dtZdZTA % your symbolic variable
diary off
%}
ddgamaWA2dtZdZTiMG = simplify(ddgamaWA2dtZdZT*iMGz);
%{
diary ('ddgamaWA2dtZdZTiMG.txt');
ddgamaWA2dtZdZTiMG % your symbolic variable
diary off
%}
ddgamaWA2dtZdZTiMFu = simplify(ddgamaWA2dtZdZT*iMFuz);
%{
diary ('ddgamaWA2dtZdZTiMFu.txt');
ddgamaWA2dtZdZTiMFu % your symbolic variable
diary off
%}
ddgamaWA2dtZdZTBb = simplify(ddgamaWA2dtZdZT*Bb);
%{
diary ('ddgamaWA2dtZdZTBb.txt');
ddgamaWA2dtZdZTBb % your symbolic variable
diary off
%}
disp('ping_11')
%}

%%
%Forma normal do modelo completo, com acoplamento:
syms u1 teta1 u2 vL wL teta2 u3 teta3 
syms up1 tetap1 up2 vpL wpL tetap2 up3 tetap3
Z = [u1 teta1 u2 vL wL teta2 u3 teta3 up1 tetap1 up2 vpL wpL tetap2 up3 tetap3].';

Mac = [M3,  0,        0,                        0,                       0,                        0,  0,  0; 
        0, I3,        0,                        0,                       0,                        0,  0,  0;
        0,  0, Mb2 + dm,                        0,                       0,                        0,  0,  0;
        0,  0,        0,                 Mb2 + dm,                       0, -dm*l2*sin(teta2 + alfa),  0,  0;
        0,  0,        0,                        0,                Mb2 + dm,  dm*l2*cos(teta2 + alfa),  0,  0;
        0,  0,        0, -dm*l2*sin(teta2 + alfa), dm*l2*cos(teta2 + alfa),            Ib2 + dm*l2^2,  0,  0;
        0,  0,        0,                        0,                       0,                        0, M1,  0;
        0,  0,        0,                        0,                       0,                        0,  0, I1];
Fu = [k1*( (vL^2 + wL^2)/(L1 - u1 + u2)^2 )*( u2 - u1 + (vL^2 + wL^2)/(L1 - u1 + u2) ) - k1*(vL^2 + wL^2)/(L1 - u1 + u2); 
      0; 
      k2*( (vL^2 + wL^2)/(L - L1 - u2 + u3)^2 )*( u3 - u2 ) + k2*( (vL^2 + wL^2)/(L - L1 - u2 + u3)^2 - 1 )*( (vL^2 + wL^2)/(L - L1 - u2 + u3) ) + k1*( -(vL^2 + wL^2)/(L1 - u1 + u2)^2 )*( u2 - u1 ) + k1*( 1 - (vL^2 + wL^2)/(L1 - u1 + u2)^2 )*( (vL^2 + wL^2)/(L1 - u1 + u2) );
      2*k2*vL*( u3 - u2 + (vL^2 + wL^2)/(L - L1 - u2 + u3) )/( L - L1 - u2 + u3 ) + 2*k1*vL*( u2 - u1 + (vL^2 + wL^2)/(L1 - u1 + u2) )/( L1 - u1 + u2 );
      2*k2*wL*( u3 - u2 + (vL^2 + wL^2)/(L - L1 - u2 + u3) )/( L - L1 - u2 + u3 ) + 2*k1*wL*( u2 - u1 + (vL^2 + wL^2)/(L1 - u1 + u2) )/( L1 - u1 + u2 ); 
      0; 
      k2*( -(vL^2 + wL^2)/(L - L1 - u2 + u3)^2 )*( u3 - u2 ) + k2*( 1 - (vL^2 + wL^2)/(L - L1 - u2 + u3)^2 )*( (vL^2 + wL^2)/(L - L1 - u2 + u3) ); 
      0];
Gac = [0; 
       0; 
       0; 
       -dm*l2*tetap2^2*cos(teta2 + alfa); 
       -dm*l2*tetap2^2*sin(teta2 + alfa); 
       0; 
       0; 
       0];

A = [zeros(8), Id8; -Mac\K, -Mac\C];
Bb = [zeros(8,2); Mac\B];

iMFu = simplify(Mac\Fu);
iMG = simplify(Mac\Gac);
iMFuz = [zeros(8,1); iMFu];
iMGz = [zeros(8,1); iMG]; 

%%
%Saídas vL = gamaV*Z e wL = gamaW*Z:
%Obs.: uTil = [u1, teta1, u2, vL, wL, teta2, u3, teta3].'
gamaV = [Id8(4,:), zeros(1,8)];
gamaW = [Id8(5,:), zeros(1,8)];

gamaVBb = simplify(gamaV*Bb);
gamaWBb = simplify(gamaW*Bb);

gamaVA = simplify(gamaV*A);
gamaVABb = simplify(gamaVA*Bb);
gamaWA = simplify(gamaW*A);
gamaWABb = simplify(gamaWA*Bb);

gamaVA2 = simplify(gamaVA*A);
gamaVA2Bb = simplify(gamaVA2*Bb);
gamaWA2 = simplify(gamaWA*A);
gamaWA2Bb = simplify(gamaWA2*Bb);

gamaVAiMG = simplify(gamaVA*iMGz);
dgamaVAiMGdZT = jacobian(gamaVAiMG,Z);
gamaVAiMFu = simplify(gamaVA*iMFuz);
dgamaVAiMFudZT = jacobian(gamaVAiMFu,Z);
%{
diary ('dgamaVAiMFudZT.txt');
dgamaVAiMFudZT % your symbolic variable
diary off
%}

gamaWAiMG = simplify(gamaWA*iMGz);
dgamaWAiMGdZT = jacobian(gamaWAiMG,Z);
gamaWAiMFu = simplify(gamaWA*iMFuz);
dgamaWAiMFudZT = jacobian(gamaWAiMFu,Z);
%{
diary ('dgamaWAiMFudZT.txt');
dgamaWAiMFudZT % your symbolic variable
diary off
%}  

dgamaVA2dt = diff(gamaVA2,t);
dgamaWA2dt = diff(gamaWA2,t);

dgamaVAiMGdZTA = simplify(dgamaVAiMGdZT*A);
dgamaVAiMFudZTA = simplify(dgamaVAiMFudZT*A);

ddgamaVAiMGdZTAZdZT = jacobian(dgamaVAiMGdZTA*Z,Z);
%{
diary ('ddgamaVAiMGdZTAZdZT.txt');
ddgamaVAiMGdZTAZdZT % your symbolic variable
diary off
%}
ddgamaVAiMFudZTAZdZT = jacobian(dgamaVAiMFudZTA*Z,Z);
%{
diary ('ddgamaVAiMFudZTAZdZT.txt');
ddgamaVAiMFudZTAZdZT % your symbolic variable
diary off
%}
ddgamaVAiMGdZTiMFudZT = jacobian(dgamaVAiMGdZT*iMFuz,Z);
%{
diary ('ddgamaVAiMGdZTiMFudZT.txt');
ddgamaVAiMGdZTiMFudZT % your symbolic variable
diary off
%}
ddgamaVA2dtZdZT = jacobian(dgamaVA2dt*Z,Z); %zero!

dgamaWAiMGdZTA = simplify(dgamaWAiMGdZT*A);
dgamaWAiMFudZTA = simplify(dgamaWAiMFudZT*A);

ddgamaWAiMGdZTAZdZT = jacobian(dgamaWAiMGdZTA*Z,Z);
%{
diary ('ddgamaWAiMGdZTAZdZT.txt');
ddgamaWAiMGdZTAZdZT % your symbolic variable
diary off
%}
ddgamaWAiMFudZTAZdZT = jacobian(dgamaWAiMFudZTA*Z,Z);
%{
diary ('ddgamaWAiMFudZTAZdZT.txt');
ddgamaWAiMFudZTAZdZT % your symbolic variable
diary off
%}
ddgamaWAiMGdZTiMFudZT = jacobian(dgamaWAiMGdZT*iMFuz,Z);
%{
diary ('ddgamaWAiMGdZTiMFudZT.txt');
ddgamaWAiMGdZTiMFudZT % your symbolic variable
diary off
%}
ddgamaWA2dtZdZT = jacobian(dgamaWA2dt*Z,Z); %zero!


%%
%Forma normal do modelo aproximado com matriz de inércia variável:
Kb = K + dFuduTilTeq;
A = [zeros(8), Id8; -Mac\Kb, -Mac\C];
C1A = simplify(C1*A);
C1ABb = simplify(C1A*Bb);
C1A2 = simplify(C1A*A);
C1A2Bb = simplify(C1A2*Bb);
C1A3 = simplify(C1A2*A);
C1A3Bb = simplify(C1A3*Bb);

C1A3 = [0; 
        (K1*K2*(Mb2 + dm))/(I1*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2));
        0;
        (2*K2*dm*l2*sin(alfa + teta2)*(k1*u2eq^2 + k2*u2eq^2 - L*k1*u2eq + L1*k1*u2eq + L1*k2*u2eq - L1*k2*u3eq - k1*u2eq*u3eq - k2*u2eq*u3eq))/(I1*(L1 + u2eq)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L - L1 - u2eq + u3eq)); 
        -(2*K2*dm*l2*cos(alfa + teta2)*(k1*u2eq^2 + k2*u2eq^2 - L*k1*u2eq + L1*k1*u2eq + L1*k2*u2eq - L1*k2*u3eq - k1*u2eq*u3eq - k2*u2eq*u3eq))/(I1*(L1 + u2eq)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L - L1 - u2eq + u3eq)); 
        -(K2*(I1^2*K1*Mb2 + I1^2*K2*Mb2 + I1^2*K1*dm + I1^2*K2*dm - Ib2*Mb2*c3^2 - Ib2*c3^2*dm + I1*Ib2*K2*Mb2 - Mb2*c3^2*dm*l2^2 + I1*Ib2*K2*dm + I1*K2*Mb2*dm*l2^2))/(I1^3*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)); 
        0; 
        (K2*(I1^2*K2*Mb2 + I1^2*K2*dm - Ib2*Mb2*c3^2 - Ib2*c3^2*dm + I1*Ib2*K2*Mb2 - Mb2*c3^2*dm*l2^2 + I1*Ib2*K2*dm + I1*K2*Mb2*dm*l2^2))/(I1^3*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)); 
        0; 
        0; 
        0; 
        0; 
        0; 
        -(K2*c3)/I1^2; 
        0; 
        -(c3*(c3^2 - 2*I1*K2))/I1^3].';
dC1A3dtRef = simplify(diff(C1A3,t));
teta2p = diff(teta2(t), t);
p1 = (k1*u2eq^2 + k2*u2eq^2 - L*k1*u2eq + L1*k1*u2eq +...
    L1*k2*u2eq - L1*k2*u3eq - k1*u2eq*u3eq - k2*u2eq*u3eq)/...
    (I1*(L1 + u2eq)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L - L1 - u2eq + u3eq));
dC1A3dt = [0; 
           0;
           0;
           2*K2*dm*l2*p1*cos(alfa + teta2)*teta2p; 
           2*K2*dm*l2*p1*sin(alfa + teta2)*teta2p; 
           0; 
           0; 
           0; 
           0; 
           0; 
           0;
           0; 
           0; 
           0; 
           0; 
           0].';
%{
erro = simplify(dC1A3dtRef - dC1A3dt);
%}

C1A4Ref = simplify(C1A3*A);
fi4 = dC1A3dt;
sigma4 = C1A4Ref + fi4;
sigma4Bb = simplify(C1A4Ref*Bb);
fi4Bb = simplify(fi4*Bb);

C1A4 = [0;
        -(K1*K2*c3*(Mb2 + dm))/(I1^2*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)); 
        0; 
        -(2*K2*c3*dm*l2*sin(alfa + teta2(t))*(k1*u2eq^2 + k2*u2eq^2 - L*k1*u2eq + L1*k1*u2eq + L1*k2*u2eq - L1*k2*u3eq - k1*u2eq*u3eq - k2*u2eq*u3eq))/(I1^2*(L1 + u2eq)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L - L1 - u2eq + u3eq)); 
        (2*K2*c3*dm*l2*cos(alfa + teta2(t))*(k1*u2eq^2 + k2*u2eq^2 - L*k1*u2eq + L1*k1*u2eq + L1*k2*u2eq - L1*k2*u3eq - k1*u2eq*u3eq - k2*u2eq*u3eq))/(I1^2*(L1 + u2eq)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L - L1 - u2eq + u3eq)); 
        (K2*c3*(I1^2*K1*Mb2 + I1^2*K2*Mb2 + I1^2*K1*dm + I1^2*K2*dm - Ib2*Mb2*c3^2 - Ib2*c3^2*dm + 2*I1*Ib2*K2*Mb2 - Mb2*c3^2*dm*l2^2 + 2*I1*Ib2*K2*dm + 2*I1*K2*Mb2*dm*l2^2))/(I1^4*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)); 
        0; 
        -(K2*c3*(I1^2*K2*Mb2 + I1^2*K2*dm - Ib2*Mb2*c3^2 - Ib2*c3^2*dm + 2*I1*Ib2*K2*Mb2 - Mb2*c3^2*dm*l2^2 + 2*I1*Ib2*K2*dm + 2*I1*K2*Mb2*dm*l2^2))/(I1^4*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)); 
        0; 
        (K1*K2*(Mb2 + dm))/(I1*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)); 
        0; 
        (2*K2*dm*l2*sin(alfa + teta2(t))*(k1*u2eq^2 + k2*u2eq^2 - L*k1*u2eq + L1*k1*u2eq + L1*k2*u2eq - L1*k2*u3eq - k1*u2eq*u3eq - k2*u2eq*u3eq))/(I1*(L1 + u2eq)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L - L1 - u2eq + u3eq)); 
        -(2*K2*dm*l2*cos(alfa + teta2(t))*(k1*u2eq^2 + k2*u2eq^2 - L*k1*u2eq + L1*k1*u2eq + L1*k2*u2eq - L1*k2*u3eq - k1*u2eq*u3eq - k2*u2eq*u3eq))/(I1*(L1 + u2eq)*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)*(L - L1 - u2eq + u3eq)); 
        -(K2*(I1^2*K1*Mb2 + I1^2*K2*Mb2 + I1^2*K1*dm + I1^2*K2*dm - Ib2*Mb2*c3^2 - Ib2*c3^2*dm + I1*Ib2*K2*Mb2 - Mb2*c3^2*dm*l2^2 + I1*Ib2*K2*dm + I1*K2*Mb2*dm*l2^2))/(I1^3*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2)); 
        0; 
        (c3^2*(c3^2 - 2*I1*K2))/I1^4 + (K2*(I1^2*K2*Mb2 + I1^2*K2*dm - Ib2*Mb2*c3^2 - Ib2*c3^2*dm + I1*Ib2*K2*Mb2 - Mb2*c3^2*dm*l2^2 + I1*Ib2*K2*dm + I1*K2*Mb2*dm*l2^2))/(I1^3*(Mb2*dm*l2^2 + Ib2*dm + Ib2*Mb2))].';

dfi44dteta2 = -2*K2*dm*l2*p1*sin(alfa + teta2)*teta2p;
dfi44dteta2p = 2*K2*dm*l2*p1*cos(alfa + teta2);
dfi45dteta2 = 2*K2*dm*l2*p1*cos(alfa + teta2)*teta2p;
dfi45dteta2p = 2*K2*dm*l2*p1*sin(alfa + teta2);
dfi4dZT = zeros(16);
dfi4dZT = vpa(dfi4dZT);
dfi4dZT(4,6) = dfi44dteta2;
dfi4dZT(4,14) = dfi44dteta2p;
dfi4dZT(5,6) = dfi45dteta2;
dfi4dZT(5,14) = dfi45dteta2p;
dfi4dZTBb = simplify(dfi4dZT*Bb);

%%
C2 = [Id8(7,:), zeros(1,8)];
C2Bb = simplify(C2*Bb);
C2A = simplify(C2*A);
C2ABb = simplify(C2A*Bb);
C2A2 = simplify(C2A*A);
C2A2Bb = simplify(C2A2*Bb);
C2A3 = simplify(C2A2*A);
C2A3Bb = simplify(C2A3*Bb);
C2A4 = simplify(C2A3*A);
dC2A4dt = simplify(diff(C2A4,t));
C2A4Bb = simplify(C2A4*Bb);
C2A5 = simplify(C2A4*A);
dC2A5dt = simplify(diff(C2A5,t));
C2A5Bb = simplify(C2A5*Bb);
C2A6 = simplify(C2A5*A);

%%
%Metamodelo:
Mmm = diag([M3, I3, Mb2 + dm, Ib2 + dm*l2^2, M1, I1]);
Kmm = [k1,   0,   -k1,     0,   0,   0;
       0,  K1,     0,   -K1,   0,   0;
     -k1,   0, k1+k2,     0, -k2,   0; 
       0, -K1,     0, K1+K2,   0, -K2; 
       0,   0,   -k2,     0,  k2,   0; 
       0,   0,     0,   -K2,   0,  K2];
beta = 0;
CeMm = beta*Kmm;
CcMm = diag([b1, c1, 0, 0, b3, c3]);
Cmm = CeMm + CcMm;
Id6 = eye(6);
Bmm = Id6(:,[2,1]);
%%
%Equações de estado:
Amm = [zeros(6), Id6; -Mmm\Kmm, -Mmm\Cmm];
BbMm = [zeros(6,2); Mmm\Bmm];
C1mm = [zeros(1,6), Id6(6,:)];
C2mm = [Id6(5,:), zeros(1,6)];
%%
%Forma normal do metamodelo:
syms kNM1
%y1 = teta3p:
beta0 = C1mm;
beta1 = beta0*Amm;
beta0Bb = beta0*BbMm;
beta2 = beta1*Amm;
beta1Bb = beta1*BbMm;
beta3 = beta2*Amm;
beta2Bb = beta2*BbMm;
beta4 = beta3*Amm;
beta3Bb = beta3*BbMm;
beta5 = beta4*Amm;
beta4Bb = beta4*BbMm;
%y2 = Nr:
alfa0 = kNM1*C2mm;
alfa1 = alfa0*Amm;
alfa0Bb = alfa0*BbMm;
alfa2 = alfa1*Amm;
alfa1Bb = alfa1*BbMm;
alfa3 = alfa2*Amm;
alfa2Bb = alfa2*BbMm;
alfa4 = alfa3*Amm;
alfa3Bb = alfa3*BbMm;
alfa5 = alfa4*Amm;
alfa4Bb = alfa4*BbMm;
alfa6 = alfa5*Amm;
alfa5Bb = alfa5*BbMm;

ad = 1;









