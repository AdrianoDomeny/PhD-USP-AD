clear
clc

%Equação: Mac(u)*upp + CcAc*up + Kac*u + Gac(u,up) + Fat(u,up) = Bac*[Tx; Fl]

syms M3 Mb2 M1 dm alfam2 I3 Ib2 I1 l2
syms k1 k2 k3 K1 K2 K3 b1 c1 b3 c3
syms t
syms u1(t) teta1(t) u2(t) vL(t) wL(t) teta2(t) u3(t) teta3(t)
syms up1(t) tetap1(t) up2(t) vpL(t) wpL(t) tetap2(t) up3(t) tetap3(t)
%syms upp1 tetapp1 upp2 vppL wppL tetapp2 upp3 tetapp3
syms N(t) Tat(t)
syms R3 Tx Fl kNM1 L1 L2
Id8 = eye(8);
u = [u1 teta1 u2 vL wL teta2 u3 teta3].';
up = [up1 tetap1 up2 vpL wpL tetap2 up3 tetap3].';
%upp = [upp1 tetapp1 upp2 vppL wppL tetapp2 upp3 tetapp3].';

M1ac = [M3,  0,   0,                  0,                 0,                  0,  0,  0; 
         0, I3,   0,                  0,                 0,                  0,  0,  0;
         0,  0, Mb2,                  0,                 0,                  0,  0,  0;
         0,  0,   0,                Mb2,                 0, -dm*l2*sin(alfam2),  0,  0;
         0,  0,   0,                  0,               Mb2,  dm*l2*cos(alfam2),  0,  0;
         0,  0,   0, -dm*l2*sin(alfam2), dm*l2*cos(alfam2),                Ib2,  0,  0;
         0,  0,   0,                  0,                 0,                  0, M1,  0;
         0,  0,   0,                  0,                 0,                  0,  0, I1];
M2ac = ...
    [0, 0, 0,                                              0,                                             0,                                              0, 0, 0; 
     0, 0, 0,                                              0,                                             0,                                              0, 0, 0;
     0, 0, 0,                                              0,                                             0,                                              0, 0, 0;
     0, 0, 0,                                              0,                                             0, -dm*l2*sin(teta2 + alfam2) + dm*l2*sin(alfam2), 0, 0;
     0, 0, 0,                                              0,                                             0,  dm*l2*cos(teta2 + alfam2) - dm*l2*cos(alfam2), 0, 0;
     0, 0, 0, -dm*l2*sin(teta2 + alfam2) + dm*l2*sin(alfam2), dm*l2*cos(teta2 + alfam2) - dm*l2*cos(alfam2),                                              0, 0, 0;
     0, 0, 0,                                              0,                                             0,                                              0, 0, 0;
     0, 0, 0,                                              0,                                             0,                                              0, 0, 0];
Mac = M1ac + M2ac;
Gac = ...
    [0; 
     0; 
     0; 
     -dm*l2*tetap2^2*cos(teta2 + alfam2); 
     -dm*l2*tetap2^2*sin(teta2 + alfam2); 
     0; 
     0; 
     0];
Kac = [ k1,   0,   -k1, 0, 0,     0,   0,   0;
         0,  K1,     0, 0, 0,   -K1,   0,   0;
       -k1,   0, k1+k2, 0, 0,     0, -k2,   0; 
         0,   0,     0, 0, 0,     0,   0,   0; 
         0,   0,     0, 0, 0,     0,   0,   0; 
         0, -K1,     0, 0, 0, K1+K2,   0, -K2; 
         0,   0,   -k2, 0, 0,     0,  k2,   0; 
         0,   0,     0, 0, 0,   -K2,   0,  K2];
CcAc = diag([b1, c1, 0, 0, 0, 0, b3, c3]);
Fu = [ (k1*(vL^2 + wL^2)*(L1*u1 - L1*u2 - L1^2 + vL^2 + wL^2))/(L1 - u1 + u2)^3;
        0;
        (k2*(vL^2 + wL^2)*((vL^2 + wL^2)/(L2 - u2 + u3)^2 - 1))/(L2 - u2 + u3) - (k1*(vL^2 + wL^2)*((vL^2 + wL^2)/(L1 - u1 + u2)^2 - 1))/(L1 - u1 + u2) + (k1*(vL^2 + wL^2)*(u1 - u2))/(L1 - u1 + u2)^2 - (k2*(vL^2 + wL^2)*(u2 - u3))/(L2 - u2 + u3)^2;
        (2*k1*vL*(u2 - u1 + (vL^2 + wL^2)/(L1 - u1 + u2)))/(L1 - u1 + u2) + (2*k2*vL*(u3 - u2 + (vL^2 + wL^2)/(L2 - u2 + u3)))/(L2 - u2 + u3);
        (2*k1*wL*(u2 - u1 + (vL^2 + wL^2)/(L1 - u1 + u2)))/(L1 - u1 + u2) + (2*k2*wL*(u3 - u2 + (vL^2 + wL^2)/(L2 - u2 + u3)))/(L2 - u2 + u3);
        0;
        -(k2*(vL^2 + wL^2)*(L2*u2 - L2*u3 - L2^2 + vL^2 + wL^2))/(L2 - u2 + u3)^3;
        0];
Fat = ...
    [0;
     0;
     0;
     0;
     0;
     0;
     N(t);
     Tat(t)];
Bac = Id8(:,[2,1]);
iMBac = Mac\Bac;
BacTx = Bac(:,1);
iMBacTx = Mac\BacTx;
BacU = Bac(:,2);
iMBacU = Mac\BacU;

fupp = simplify(Mac\(Bac*[Tx; Fl] - CcAc*up - Kac*u - Fu - Gac - Fat));
fupp1 = Id8(1,:)*fupp;
ftetapp1 = Id8(2,:)*fupp;
fupp2 = Id8(3,:)*fupp;
fvppL = Id8(4,:)*fupp;
fwppL = Id8(5,:)*fupp;
ftetapp2 = Id8(6,:)*fupp;
fupp3 = Id8(7,:)*fupp;
ftetapp3 = Id8(8,:)*fupp;

fuppa = simplify(Mac\(-CcAc*up - Kac*u - Fu - Gac - Fat));
fuppbTx = simplify(Mac\(BacTx*Tx));
fuppbFl = simplify(Mac\(BacU*Fl));

C2 = [Id8(7,:), zeros(1,8)];
alfaTil0 = kNM1*C2;

%y2p = alfaTil0*Zp:
Zp = [up; fupp];
Zpa = [up; fuppa];
ZpbTx = [zeros(8,1); fuppbTx];
ZpbFl = [zeros(8,1); fuppbFl];
atu1 = alfaTil0*Zpa;
btu1 = alfaTil0*ZpbTx;
buu1 = alfaTil0*ZpbFl;

%y2p2 = alfaTil0*Zp2a:
%{
fup3aRef = simplify(diff(fuppa,t));
diary ('fup3aRef.txt');
fup3aRef % your symbolic variable
diary off
%}

upp1 = upp1a + upp1bTx + upp1bFl;
tetapp1 = tetapp1a + tetapp1bTx + tetapp1bFl;
upp2 = upp2a + upp2bTx + upp2bFl;
vppL = vppLa + vppLbTx + vppLbFl;
wppL = wppLa + wppLbTx + wppLbFl;
tetapp2 = tetapp2a + tetapp2bTx + tetapp2bFl;
upp3 = upp3a + upp3bTx + upp3bFl;
tetapp3 = tetapp3a + tetapp3bTx + tetapp3bFl;

dNrdt = 1;
dTatdt = 1;
fup3a = [-(L1^3*b1*upp1 + L1^3*k1*up1 - L1^3*k1*up2 - b1*u1^3*upp1 + b1*u2^3*upp1 - 4*k1*u1^3*up1 + 4*k1*u1^3*up2 + 4*k1*u2^3*up1 - 4*k1*u2^3*up2 + 4*k1*vL^3*vpL + 4*k1*wL^3*wpL + 3*L1*b1*u1^2*upp1 - 3*L1^2*b1*u1*upp1 - 3*L1^2*b1*up1*up1 + 3*L1*b1*u2^2*upp1 + 3*L1^2*b1*u2*upp1 + 3*L1^2*b1*up1*up2 + 9*L1*k1*u1^2*up1 - 6*L1^2*k1*u1*up1 - 9*L1*k1*u1^2*up2 + 9*L1*k1*u2^2*up1 + 6*L1^2*k1*u1*up2 + 6*L1^2*k1*u2*up1 - 9*L1*k1*u2^2*up2 - 6*L1^2*k1*u2*up2 + L1*k1*vL^2*up1 - L1*k1*vL^2*up2 + L1*k1*wL^2*up1 - L1*k1*wL^2*up2 - 2*L1^2*k1*vL*vpL - 2*L1^2*k1*wL*wpL - 3*b1*u1^2*up1*up1 - 3*b1*u1*u2^2*upp1 + 3*b1*u1^2*u2*upp1 + 3*b1*u1^2*up1*up2 - 3*b1*u2^2*up1*up1 + 3*b1*u2^2*up1*up2 - 12*k1*u1*u2^2*up1 + 12*k1*u1^2*u2*up1 + 12*k1*u1*u2^2*up2 - 12*k1*u1^2*u2*up2 + 4*k1*vL*wL^2*vpL + 4*k1*vL^2*wL*wpL + 6*b1*u1*u2*up1*up1 - 6*b1*u1*u2*up1*up2 + 6*L1*b1*u1*up1*up1 - 6*L1*b1*u1*u2*upp1 - 6*L1*b1*u1*up1*up2 - 6*L1*b1*u2*up1*up1 + 6*L1*b1*u2*up1*up2 - 18*L1*k1*u1*u2*up1 + 18*L1*k1*u1*u2*up2 + 2*L1*k1*u1*vL*vpL - 2*L1*k1*u2*vL*vpL + 2*L1*k1*u1*wL*wpL - 2*L1*k1*u2*wL*wpL)/(M3*(L1 - u1 + u2)^3) - (3*(up1 - up2)*(k1*vL^4 - k1*u2^4 - k1*u1^4 + k1*wL^4 + L1^3*b1*up1 - 6*k1*u1^2*u2^2 + 3*L1*k1*u1^3 + L1^3*k1*u1 - 3*L1*k1*u2^3 - L1^3*k1*u2 + 2*k1*vL^2*wL^2 - 3*L1^2*k1*u1^2 - 3*L1^2*k1*u2^2 - L1^2*k1*vL^2 - L1^2*k1*wL^2 - b1*u1^3*up1 + b1*u2^3*up1 + 4*k1*u1*u2^3 + 4*k1*u1^3*u2 + 3*L1*b1*u1^2*up1 - 3*L1^2*b1*u1*up1 + 3*L1*b1*u2^2*up1 + 3*L1^2*b1*u2*up1 + 9*L1*k1*u1*u2^2 - 9*L1*k1*u1^2*u2 + 6*L1^2*k1*u1*u2 + L1*k1*u1*vL^2 - L1*k1*u2*vL^2 + L1*k1*u1*wL^2 - L1*k1*u2*wL^2 - 3*b1*u1*u2^2*up1 + 3*b1*u1^2*u2*up1 - 6*L1*b1*u1*u2*up1))/(M3*(L1 - u1 + u2)^4);
    -(K1*tetap1 - K1*tetap2 + c1*tetapp1)/I3;
    (3*(up1 - up2)*(k1*u2^7 + k2*u2^7 + 6*k1*u1^2*u2^5 - 4*k1*u1^3*u2^4 + k1*u1^4*u2^3 - k1*u1^4*u3^3 + 3*k2*u1^2*u2^5 - k2*u1^3*u2^4 - k1*u2^4*u3^3 + 3*k1*u2^5*u3^2 - k2*u1^3*u3^4 + k2*u2^3*u3^4 - 4*k2*u2^4*u3^3 + 6*k2*u2^5*u3^2 - k1*u2^3*vL^4 + k2*u1^3*vL^4 + k1*u3^3*vL^4 - k2*u2^3*vL^4 - k1*u2^3*wL^4 + k2*u1^3*wL^4 + k1*u3^3*wL^4 - k2*u2^3*wL^4 + 3*L1*k1*u2^6 + 3*L1*k2*u2^6 - 3*L2*k1*u2^6 - 3*L2*k2*u2^6 + 3*L1^2*k1*u2^5 + L1^3*k1*u2^4 - L2^3*k1*u1^4 + 3*L1^2*k2*u2^5 + L1^3*k2*u2^4 + 3*L2^2*k1*u2^5 - L2^3*k1*u2^4 + L1^3*k2*u3^4 + 3*L2^2*k2*u2^5 - L2^3*k2*u2^4 - L1^3*k2*vL^4 + L2^3*k1*vL^4 - L1^3*k2*wL^4 + L2^3*k1*wL^4 - 4*k1*u1*u2^6 - 3*k2*u1*u2^6 - 3*k1*u2^6*u3 - 4*k2*u2^6*u3 + 3*L1^2*k1*u1^2*u2^3 - 3*L1^2*k1*u1^2*u3^3 + 18*L2^2*k1*u1^2*u2^3 - 12*L2^2*k1*u1^3*u2^2 - 6*L2^3*k1*u1^2*u2^2 - 3*L1^2*k1*u2^2*u3^3 + 9*L1^2*k1*u2^3*u3^2 + 3*L1^3*k1*u2^2*u3^2 + 9*L2^2*k2*u1^2*u2^3 - 3*L2^2*k2*u1^3*u2^2 - 3*L2^3*k2*u1^2*u2^2 - 12*L1^2*k2*u2^2*u3^3 + 18*L1^2*k2*u2^3*u3^2 + 6*L1^3*k2*u2^2*u3^2 - 3*L2^2*k2*u1^3*u3^2 + 3*L2^2*k2*u2^3*u3^2 + L1^2*k1*u2^3*vL^2 - L1^2*k1*u3^3*vL^2 - L2^2*k2*u1^3*vL^2 + L2^2*k2*u2^3*vL^2 + L1^2*k1*u2^3*wL^2 - L1^2*k1*u3^3*wL^2 - L2^2*k2*u1^3*wL^2 + L2^2*k2*u2^3*wL^2 + 3*L1*L2^3*k1*u1^3 + L1^3*L2^3*k1*u1 + 9*L1*L2^2*k1*u2^4 - 3*L1*L2^3*k1*u2^3 - 9*L1^2*L2*k1*u2^4 - 3*L1^3*L2*k1*u2^3 - L1^3*L2^3*k1*u2 + 9*L1*L2^2*k2*u2^4 - 3*L1*L2^3*k2*u2^3 - 9*L1^2*L2*k2*u2^4 - 3*L1^3*L2*k2*u2^3 - L1^3*L2^3*k2*u2 + 3*L1^3*L2*k2*u3^3 + L1^3*L2^3*k2*u3 - 2*L1^3*k2*vL^2*wL^2 + 2*L2^3*k1*vL^2*wL^2 + 4*k1*u1*u2^3*u3^3 - 12*k1*u1*u2^4*u3^2 - 18*k1*u1^2*u2^4*u3 + 4*k1*u1^3*u2*u3^3 + 12*k1*u1^3*u2^3*u3 + 3*k1*u1^4*u2*u3^2 - 3*k1*u1^4*u2^2*u3 - 3*k2*u1*u2^2*u3^4 + 12*k2*u1*u2^3*u3^3 - 18*k2*u1*u2^4*u3^2 + 3*k2*u1^2*u2*u3^4 - 12*k2*u1^2*u2^4*u3 + 4*k2*u1^3*u2*u3^3 + 4*k2*u1^3*u2^3*u3 + 3*k2*u1*u2^2*vL^4 - 3*k2*u1^2*u2*vL^4 - 3*k1*u2*u3^2*vL^4 + 3*k1*u2^2*u3*vL^4 + 3*k2*u1*u2^2*wL^4 - 3*k2*u1^2*u2*wL^4 - 3*k1*u2*u3^2*wL^4 + 3*k1*u2^2*u3*wL^4 - 9*L1*k1*u1*u2^5 - 6*L1*k2*u1*u2^5 + 12*L2*k1*u1*u2^5 - 9*L1*k1*u2^5*u3 + 9*L2*k2*u1*u2^5 - 12*L1*k2*u2^5*u3 + 6*L2*k1*u2^5*u3 + 9*L2*k2*u2^5*u3 - 3*L1^2*L2^3*k1*u1^2 + 9*L1^2*L2^2*k1*u2^3 - 3*L1^2*L2^3*k1*u2^2 + 3*L1^3*L2^2*k1*u2^2 + 9*L1^2*L2^2*k2*u2^3 - 3*L1^2*L2^3*k2*u2^2 + 3*L1^3*L2^2*k2*u2^2 + 3*L1^3*L2^2*k2*u3^2 - L1^2*L2^3*k1*vL^2 + L1^3*L2^2*k2*vL^2 - L1^2*L2^3*k1*wL^2 + L1^3*L2^2*k2*wL^2 - 6*k1*u1^2*u2^2*u3^3 + 18*k1*u1^2*u2^3*u3^2 - 12*k1*u1^3*u2^2*u3^2 - 12*k2*u1^2*u2^2*u3^3 + 18*k2*u1^2*u2^3*u3^2 - 6*k2*u1^3*u2^2*u3^2 + 9*L1*k1*u1^2*u2^4 - 3*L1*k1*u1^3*u2^3 - 6*L1^2*k1*u1*u2^4 - L1^3*k1*u1*u2^3 + 3*L1*k1*u1^3*u3^3 + 3*L1*k2*u1^2*u2^4 - 18*L2*k1*u1^2*u2^4 + 12*L2*k1*u1^3*u2^3 - 3*L2*k1*u1^4*u2^2 - 3*L1^2*k2*u1*u2^4 + L1^3*k1*u1*u3^3 - 12*L2^2*k1*u1*u2^4 + 3*L2^2*k1*u1^4*u2 + 4*L2^3*k1*u1*u2^3 + 4*L2^3*k1*u1^3*u2 - 3*L1*k1*u2^3*u3^3 + 9*L1*k1*u2^4*u3^2 + 3*L1*k2*u1^2*u3^4 - 3*L2*k1*u1^4*u3^2 - 9*L2*k2*u1^2*u2^4 + 3*L2*k2*u1^3*u2^3 - 9*L1^2*k1*u2^4*u3 - 3*L1^2*k2*u1*u3^4 - L1^3*k1*u2*u3^3 - 3*L1^3*k1*u2^3*u3 - 3*L2^2*k1*u1^4*u3 - 9*L2^2*k2*u1*u2^4 + 3*L2^3*k2*u1*u2^3 + L2^3*k2*u1^3*u2 + 3*L1*k2*u2^2*u3^4 - 12*L1*k2*u2^3*u3^3 + 18*L1*k2*u2^4*u3^2 - 3*L2*k1*u2^4*u3^2 - 3*L2*k2*u1^3*u3^3 + 3*L1^2*k2*u2*u3^4 - 12*L1^2*k2*u2^4*u3 - 4*L1^3*k2*u2*u3^3 - 4*L1^3*k2*u2^3*u3 - 3*L2^2*k1*u2^4*u3 - L2^3*k2*u1^3*u3 + 3*L2*k2*u2^3*u3^3 - 9*L2*k2*u2^4*u3^2 - 6*L2^2*k2*u2^4*u3 + L2^3*k2*u2^3*u3 - 2*k1*u2^3*vL^2*wL^2 + 2*k2*u1^3*vL^2*wL^2 + 2*k1*u3^3*vL^2*wL^2 - 2*k2*u2^3*vL^2*wL^2 + L1*k1*u2^4*vL^2 - 3*L1*k2*u1^2*vL^4 + 3*L1^2*k2*u1*vL^4 - 3*L1*k2*u2^2*vL^4 + 3*L2*k1*u2^2*vL^4 - 3*L1^2*k2*u2*vL^4 - 3*L2^2*k1*u2*vL^4 + 3*L2*k1*u3^2*vL^4 - L2*k2*u2^4*vL^2 + 3*L2^2*k1*u3*vL^4 + L1*k1*u2^4*wL^2 - 3*L1*k2*u1^2*wL^4 + 3*L1^2*k2*u1*wL^4 - 3*L1*k2*u2^2*wL^4 + 3*L2*k1*u2^2*wL^4 - 3*L1^2*k2*u2*wL^4 - 3*L2^2*k1*u2*wL^4 + 3*L2*k1*u3^2*wL^4 - L2*k2*u2^4*wL^2 + 3*L2^2*k1*u3*wL^4 - 9*L1*L2*k1*u2^5 - 9*L1*L2*k2*u2^5 + 12*k1*u1*u2^5*u3 + 12*k2*u1*u2^5*u3 + 27*L1*k1*u1*u2^4*u3 - 6*L1*k2*u1*u2*u3^4 + 24*L1*k2*u1*u2^4*u3 - 24*L2*k1*u1*u2^4*u3 + 6*L2*k1*u1^4*u2*u3 - 27*L2*k2*u1*u2^4*u3 + 6*L1*k2*u1*u2*vL^4 - 6*L2*k1*u2*u3*vL^4 + 6*L1*k2*u1*u2*wL^4 - 6*L2*k1*u2*u3*wL^4 + 27*L1*L2^2*k1*u1^2*u2^2 - 9*L1^2*L2*k1*u1^2*u2^2 - 18*L1^2*L2^2*k1*u1*u2^2 + 9*L1^2*L2^2*k1*u1^2*u2 + 9*L1*L2^2*k2*u1^2*u2^2 - 9*L1^2*L2*k1*u1^2*u3^2 - 9*L1^2*L2^2*k1*u1^2*u3 - 9*L1^2*L2^2*k2*u1*u2^2 + 9*L1*L2^2*k2*u1^2*u3^2 - 9*L1^2*L2*k1*u2^2*u3^2 - 9*L1^2*L2^2*k1*u2^2*u3 - 9*L1^2*L2^2*k2*u1*u3^2 + 9*L1*L2^2*k2*u2^2*u3^2 - 27*L1^2*L2*k2*u2^2*u3^2 + 9*L1^2*L2^2*k2*u2*u3^2 - 18*L1^2*L2^2*k2*u2^2*u3 + 3*L1*L2^2*k1*u2^2*vL^2 + 3*L1*L2^2*k2*u1^2*vL^2 - 3*L1^2*L2*k1*u2^2*vL^2 + 3*L1^2*L2^2*k1*u2*vL^2 - 3*L1^2*L2^2*k2*u1*vL^2 + 3*L1*L2^2*k2*u2^2*vL^2 - 3*L1^2*L2*k1*u3^2*vL^2 - 3*L1^2*L2*k2*u2^2*vL^2 - 3*L1^2*L2^2*k1*u3*vL^2 + 3*L1^2*L2^2*k2*u2*vL^2 + 3*L1*L2^2*k1*u2^2*wL^2 + 3*L1*L2^2*k2*u1^2*wL^2 - 3*L1^2*L2*k1*u2^2*wL^2 + 3*L1^2*L2^2*k1*u2*wL^2 - 3*L1^2*L2^2*k2*u1*wL^2 + 3*L1*L2^2*k2*u2^2*wL^2 - 3*L1^2*L2*k1*u3^2*wL^2 - 3*L1^2*L2*k2*u2^2*wL^2 - 3*L1^2*L2^2*k1*u3*wL^2 + 3*L1^2*L2^2*k2*u2*wL^2 + 9*L1*k1*u1*u2^2*u3^3 - 27*L1*k1*u1*u2^3*u3^2 - 9*L1*k1*u1^2*u2*u3^3 - 27*L1*k1*u1^2*u2^3*u3 - 9*L1*k1*u1^3*u2*u3^2 + 9*L1*k1*u1^3*u2^2*u3 + 6*L1^2*k1*u1*u2*u3^3 + 18*L1^2*k1*u1*u2^3*u3 - 3*L1^3*k1*u1*u2*u3^2 + 3*L1^3*k1*u1*u2^2*u3 + 24*L1*k2*u1*u2^2*u3^3 - 36*L1*k2*u1*u2^3*u3^2 - 12*L1*k2*u1^2*u2*u3^3 - 12*L1*k2*u1^2*u2^3*u3 + 12*L2*k1*u1*u2^3*u3^2 + 36*L2*k1*u1^2*u2^3*u3 + 12*L2*k1*u1^3*u2*u3^2 - 24*L2*k1*u1^3*u2^2*u3 + 12*L1^2*k2*u1*u2*u3^3 + 12*L1^2*k2*u1*u2^3*u3 + 12*L2^2*k1*u1*u2^3*u3 + 12*L2^2*k1*u1^3*u2*u3 - 9*L2*k2*u1*u2^2*u3^3 + 27*L2*k2*u1*u2^3*u3^2 + 9*L2*k2*u1^2*u2*u3^3 + 27*L2*k2*u1^2*u2^3*u3 + 9*L2*k2*u1^3*u2*u3^2 - 9*L2*k2*u1^3*u2^2*u3 + 18*L2^2*k2*u1*u2^3*u3 + 6*L2^2*k2*u1^3*u2*u3 - 3*L2^3*k2*u1*u2^2*u3 + 3*L2^3*k2*u1^2*u2*u3 + 6*k2*u1*u2^2*vL^2*wL^2 - 6*k2*u1^2*u2*vL^2*wL^2 - 6*k1*u2*u3^2*vL^2*wL^2 + 6*k1*u2^2*u3*vL^2*wL^2 - L1*k1*u1*u2^3*vL^2 + L1*k1*u1*u3^3*vL^2 - L1*k1*u2*u3^3*vL^2 - 3*L1*k1*u2^3*u3*vL^2 + 3*L2*k2*u1*u2^3*vL^2 + L2*k2*u1^3*u2*vL^2 - L2*k2*u1^3*u3*vL^2 + L2*k2*u2^3*u3*vL^2 - L1*k1*u1*u2^3*wL^2 + L1*k1*u1*u3^3*wL^2 - L1*k1*u2*u3^3*wL^2 - 3*L1*k1*u2^3*u3*wL^2 + 3*L2*k2*u1*u2^3*wL^2 + L2*k2*u1^3*u2*wL^2 - L2*k2*u1^3*u3*wL^2 + L2*k2*u2^3*u3*wL^2 + 27*L1*L2*k1*u1*u2^4 + 18*L1*L2*k2*u1*u2^4 + 18*L1*L2*k1*u2^4*u3 + 27*L1*L2*k2*u2^4*u3 + 27*L1*k1*u1^2*u2^2*u3^2 - 18*L1^2*k1*u1*u2^2*u3^2 + 9*L1^2*k1*u1^2*u2*u3^2 - 9*L1^2*k1*u1^2*u2^2*u3 + 18*L1*k2*u1^2*u2^2*u3^2 - 18*L2*k1*u1^2*u2^2*u3^2 - 18*L1^2*k2*u1*u2^2*u3^2 - 18*L2^2*k1*u1^2*u2^2*u3 - 27*L2*k2*u1^2*u2^2*u3^2 - 9*L2^2*k2*u1*u2^2*u3^2 + 9*L2^2*k2*u1^2*u2*u3^2 - 18*L2^2*k2*u1^2*u2^2*u3 + 3*L1*k1*u2^2*u3^2*vL^2 - 3*L2*k2*u1^2*u2^2*vL^2 + 3*L1^2*k1*u2*u3^2*vL^2 - 3*L1^2*k1*u2^2*u3*vL^2 - 3*L2^2*k2*u1*u2^2*vL^2 + 3*L2^2*k2*u1^2*u2*vL^2 + 3*L1*k1*u2^2*u3^2*wL^2 - 3*L2*k2*u1^2*u2^2*wL^2 + 3*L1^2*k1*u2*u3^2*wL^2 - 3*L1^2*k1*u2^2*u3*wL^2 - 3*L2^2*k2*u1*u2^2*wL^2 + 3*L2^2*k2*u1^2*u2*wL^2 - 27*L1*L2*k1*u1^2*u2^3 + 9*L1*L2*k1*u1^3*u2^2 - 27*L1*L2^2*k1*u1*u2^3 - 9*L1*L2^2*k1*u1^3*u2 + 9*L1*L2^3*k1*u1*u2^2 - 9*L1*L2^3*k1*u1^2*u2 + 18*L1^2*L2*k1*u1*u2^3 + 6*L1^2*L2^3*k1*u1*u2 + 3*L1^3*L2*k1*u1*u2^2 - 3*L1^3*L2^2*k1*u1*u2 + 9*L1*L2*k1*u1^3*u3^2 - 9*L1*L2*k2*u1^2*u2^3 + 9*L1*L2^2*k1*u1^3*u3 - 18*L1*L2^2*k2*u1*u2^3 + 6*L1*L2^3*k2*u1*u2^2 - 3*L1*L2^3*k2*u1^2*u2 + 9*L1^2*L2*k2*u1*u2^3 + 3*L1^2*L2^3*k2*u1*u2 + 3*L1^3*L2*k1*u1*u3^2 + 3*L1^3*L2^2*k1*u1*u3 - 9*L1*L2*k1*u2^3*u3^2 + 9*L1*L2*k2*u1^2*u3^3 - 9*L1*L2^2*k1*u2^3*u3 + 3*L1*L2^3*k2*u1^2*u3 + 18*L1^2*L2*k1*u2^3*u3 - 9*L1^2*L2*k2*u1*u3^3 - 3*L1^2*L2^3*k2*u1*u3 - 3*L1^3*L2*k1*u2*u3^2 + 6*L1^3*L2*k1*u2^2*u3 - 3*L1^3*L2^2*k1*u2*u3 + 9*L1*L2*k2*u2^2*u3^3 - 27*L1*L2*k2*u2^3*u3^2 - 18*L1*L2^2*k2*u2^3*u3 + 3*L1*L2^3*k2*u2^2*u3 + 9*L1^2*L2*k2*u2*u3^3 + 27*L1^2*L2*k2*u2^3*u3 + 3*L1^2*L2^3*k2*u2*u3 - 9*L1^3*L2*k2*u2*u3^2 + 9*L1^3*L2*k2*u2^2*u3 - 6*L1^3*L2^2*k2*u2*u3 - 6*L1*k2*u1^2*vL^2*wL^2 + 6*L1^2*k2*u1*vL^2*wL^2 - 6*L1*k2*u2^2*vL^2*wL^2 + 6*L2*k1*u2^2*vL^2*wL^2 - 6*L1^2*k2*u2*vL^2*wL^2 - 6*L2^2*k1*u2*vL^2*wL^2 + 6*L2*k1*u3^2*vL^2*wL^2 + 6*L2^2*k1*u3*vL^2*wL^2 + L1*L2^3*k1*u1*vL^2 - 3*L1*L2*k1*u2^3*vL^2 - L1*L2^3*k1*u2*vL^2 - 3*L1*L2*k2*u2^3*vL^2 - L1^3*L2*k2*u2*vL^2 + L1^3*L2*k2*u3*vL^2 + L1*L2^3*k1*u1*wL^2 - 3*L1*L2*k1*u2^3*wL^2 - L1*L2^3*k1*u2*wL^2 - 3*L1*L2*k2*u2^3*wL^2 - L1^3*L2*k2*u2*wL^2 + L1^3*L2*k2*u3*wL^2 - 3*L1*k1*u1*u2*u3^2*vL^2 + 3*L1*k1*u1*u2^2*u3*vL^2 - 3*L2*k2*u1*u2^2*u3*vL^2 + 3*L2*k2*u1^2*u2*u3*vL^2 - 3*L1*k1*u1*u2*u3^2*wL^2 + 3*L1*k1*u1*u2^2*u3*wL^2 - 3*L2*k2*u1*u2^2*u3*wL^2 + 3*L2*k2*u1^2*u2*u3*wL^2 - 54*L1*L2*k1*u1*u2^3*u3 - 18*L1*L2*k1*u1^3*u2*u3 - 6*L1^3*L2*k1*u1*u2*u3 - 18*L1*L2*k2*u1*u2*u3^3 - 54*L1*L2*k2*u1*u2^3*u3 - 6*L1*L2^3*k2*u1*u2*u3 + 12*L1*k2*u1*u2*vL^2*wL^2 - 12*L2*k1*u2*u3*vL^2*wL^2 + 27*L1*L2*k1*u1*u2^2*u3^2 - 27*L1*L2*k1*u1^2*u2*u3^2 + 54*L1*L2*k1*u1^2*u2^2*u3 + 27*L1*L2^2*k1*u1*u2^2*u3 - 27*L1*L2^2*k1*u1^2*u2*u3 + 18*L1^2*L2*k1*u1*u2*u3^2 - 36*L1^2*L2*k1*u1*u2^2*u3 + 18*L1^2*L2*k1*u1^2*u2*u3 + 18*L1^2*L2^2*k1*u1*u2*u3 + 54*L1*L2*k2*u1*u2^2*u3^2 - 27*L1*L2*k2*u1^2*u2*u3^2 + 27*L1*L2*k2*u1^2*u2^2*u3 - 18*L1*L2^2*k2*u1*u2*u3^2 + 36*L1*L2^2*k2*u1*u2^2*u3 - 18*L1*L2^2*k2*u1^2*u2*u3 + 27*L1^2*L2*k2*u1*u2*u3^2 - 27*L1^2*L2*k2*u1*u2^2*u3 + 18*L1^2*L2^2*k2*u1*u2*u3 + 3*L1*L2*k1*u1*u2^2*vL^2 - 3*L1*L2^2*k1*u1*u2*vL^2 + 3*L1*L2*k1*u1*u3^2*vL^2 + 6*L1*L2*k2*u1*u2^2*vL^2 - 3*L1*L2*k2*u1^2*u2*vL^2 + 3*L1*L2^2*k1*u1*u3*vL^2 - 6*L1*L2^2*k2*u1*u2*vL^2 + 3*L1^2*L2*k2*u1*u2*vL^2 - 3*L1*L2*k1*u2*u3^2*vL^2 + 6*L1*L2*k1*u2^2*u3*vL^2 + 3*L1*L2*k2*u1^2*u3*vL^2 - 3*L1*L2^2*k1*u2*u3*vL^2 + 6*L1^2*L2*k1*u2*u3*vL^2 - 3*L1^2*L2*k2*u1*u3*vL^2 + 3*L1*L2*k2*u2^2*u3*vL^2 + 3*L1^2*L2*k2*u2*u3*vL^2 + 3*L1*L2*k1*u1*u2^2*wL^2 - 3*L1*L2^2*k1*u1*u2*wL^2 + 3*L1*L2*k1*u1*u3^2*wL^2 + 6*L1*L2*k2*u1*u2^2*wL^2 - 3*L1*L2*k2*u1^2*u2*wL^2 + 3*L1*L2^2*k1*u1*u3*wL^2 - 6*L1*L2^2*k2*u1*u2*wL^2 + 3*L1^2*L2*k2*u1*u2*wL^2 - 3*L1*L2*k1*u2*u3^2*wL^2 + 6*L1*L2*k1*u2^2*u3*wL^2 + 3*L1*L2*k2*u1^2*u3*wL^2 - 3*L1*L2^2*k1*u2*u3*wL^2 + 6*L1^2*L2*k1*u2*u3*wL^2 - 3*L1^2*L2*k2*u1*u3*wL^2 + 3*L1*L2*k2*u2^2*u3*wL^2 + 3*L1^2*L2*k2*u2*u3*wL^2 - 6*L1*L2*k1*u1*u2*u3*vL^2 - 6*L1*L2*k2*u1*u2*u3*vL^2 - 6*L1*L2*k1*u1*u2*u3*wL^2 - 6*L1*L2*k2*u1*u2*u3*wL^2))/(Mb2*(L1 - u1 + u2)^4*(L2 - u2 + u3)^3) - (4*k1*u2^6*up1 - 7*k1*u2^6*up2 + 3*k2*u2^6*up1 + 3*k1*u2^6*up3 - 7*k2*u2^6*up2 + 4*k2*u2^6*up3 + 12*k1*u1^2*u2^4*up1 - 4*k1*u1^3*u2^3*up1 - 30*k1*u1^2*u2^4*up2 + 16*k1*u1^3*u2^3*up2 + 4*k1*u1^3*u3^3*up1 - 3*k1*u1^4*u2^2*up2 + 3*k2*u1^2*u2^4*up1 + 18*k1*u1^2*u2^4*up3 - 12*k1*u1^3*u2^3*up3 - 4*k1*u1^3*u3^3*up2 + 3*k1*u1^4*u2^2*up3 - 3*k1*u1^4*u3^2*up2 - 4*k1*u2^3*u3^3*up1 + 12*k1*u2^4*u3^2*up1 - 15*k2*u1^2*u2^4*up2 + 3*k2*u1^2*u3^4*up1 + 4*k2*u1^3*u2^3*up2 + 3*k1*u1^4*u3^2*up3 + 4*k1*u2^3*u3^3*up2 - 15*k1*u2^4*u3^2*up2 + 12*k2*u1^2*u2^4*up3 - 3*k2*u1^2*u3^4*up2 - 4*k2*u1^3*u2^3*up3 - 4*k2*u1^3*u3^3*up2 + 3*k2*u2^2*u3^4*up1 - 12*k2*u2^3*u3^3*up1 + 18*k2*u2^4*u3^2*up1 + 3*k1*u2^4*u3^2*up3 + 4*k2*u1^3*u3^3*up3 - 3*k2*u2^2*u3^4*up2 + 16*k2*u2^3*u3^3*up2 - 30*k2*u2^4*u3^2*up2 - 4*k2*u2^3*u3^3*up3 + 12*k2*u2^4*u3^2*up3 - 3*k2*u1^2*vL^4*up1 + 3*k1*u2^2*vL^4*up2 + 3*k2*u1^2*vL^4*up2 - 3*k2*u2^2*vL^4*up1 - 3*k1*u2^2*vL^4*up3 + 3*k1*u3^2*vL^4*up2 + 3*k2*u2^2*vL^4*up2 - 3*k1*u3^2*vL^4*up3 - 3*k2*u1^2*wL^4*up1 + 3*k1*u2^2*wL^4*up2 + 3*k2*u1^2*wL^4*up2 - 3*k2*u2^2*wL^4*up1 - 3*k1*u2^2*wL^4*up3 + 3*k1*u3^2*wL^4*up2 + 3*k2*u2^2*wL^4*up2 - 3*k1*u3^2*wL^4*up3 + 4*k1*u2^3*vL^3*vpL - 4*k2*u1^3*vL^3*vpL - 4*k1*u3^3*vL^3*vpL + 4*k2*u2^3*vL^3*vpL + 9*L1*k1*u2^5*up1 - 18*L1*k1*u2^5*up2 + 6*L1*k2*u2^5*up1 - 12*L2*k1*u2^5*up1 + 9*L1*k1*u2^5*up3 - 18*L1*k2*u2^5*up2 + 18*L2*k1*u2^5*up2 - 9*L2*k2*u2^5*up1 + 12*L1*k2*u2^5*up3 - 6*L2*k1*u2^5*up3 + 18*L2*k2*u2^5*up2 - 9*L2*k2*u2^5*up3 + 4*k1*u2^3*wL^3*wpL - 4*k2*u1^3*wL^3*wpL - 4*k1*u3^3*wL^3*wpL + 4*k2*u2^3*wL^3*wpL + 6*L1^2*k1*u2^4*up1 + L1^3*k1*u2^3*up1 + 4*L2^3*k1*u1^3*up1 - 15*L1^2*k1*u2^4*up2 + 3*L1^2*k2*u2^4*up1 - 4*L1^3*k1*u2^3*up2 - L1^3*k1*u3^3*up1 - 3*L2^2*k1*u1^4*up2 + 12*L2^2*k1*u2^4*up1 - 4*L2^3*k1*u1^3*up2 - 4*L2^3*k1*u2^3*up1 + 9*L1^2*k1*u2^4*up3 - 15*L1^2*k2*u2^4*up2 + 3*L1^2*k2*u3^4*up1 + 3*L1^3*k1*u2^3*up3 + L1^3*k1*u3^3*up2 - 4*L1^3*k2*u2^3*up2 + 3*L2^2*k1*u1^4*up3 - 15*L2^2*k1*u2^4*up2 + 9*L2^2*k2*u2^4*up1 + 4*L2^3*k1*u2^3*up2 - L2^3*k2*u1^3*up2 - 3*L2^3*k2*u2^3*up1 + 12*L1^2*k2*u2^4*up3 - 3*L1^2*k2*u3^4*up2 + 4*L1^3*k2*u2^3*up3 + 4*L1^3*k2*u3^3*up2 + 3*L2^2*k1*u2^4*up3 - 15*L2^2*k2*u2^4*up2 + L2^3*k2*u1^3*up3 + 4*L2^3*k2*u2^3*up2 - 4*L1^3*k2*u3^3*up3 + 6*L2^2*k2*u2^4*up3 - L2^3*k2*u2^3*up3 - 3*L1^2*k2*vL^4*up1 + 3*L1^2*k2*vL^4*up2 + 3*L2^2*k1*vL^4*up2 - 3*L2^2*k1*vL^4*up3 - 3*L1^2*k2*wL^4*up1 + 3*L1^2*k2*wL^4*up2 + 3*L2^2*k1*wL^4*up2 - 3*L2^2*k1*wL^4*up3 + 4*L1^3*k2*vL^3*vpL - 4*L2^3*k1*vL^3*vpL + 4*L1^3*k2*wL^3*wpL - 4*L2^3*k1*wL^3*wpL - 12*k1*u1*u2^5*up1 + 24*k1*u1*u2^5*up2 - 6*k2*u1*u2^5*up1 - 12*k1*u1*u2^5*up3 - 12*k1*u2^5*u3*up1 + 18*k2*u1*u2^5*up2 + 18*k1*u2^5*u3*up2 - 12*k2*u1*u2^5*up3 - 12*k2*u2^5*u3*up1 - 6*k1*u2^5*u3*up3 + 24*k2*u2^5*u3*up2 - 12*k2*u2^5*u3*up3 - L1^3*L2^3*k1*up1 + L1^3*L2^3*k1*up2 + L1^3*L2^3*k2*up2 - L1^3*L2^3*k2*up3 + 12*k1*u1*u2^2*u3^3*up1 - 36*k1*u1*u2^3*u3^2*up1 - 12*k1*u1^2*u2*u3^3*up1 - 36*k1*u1^2*u2^3*u3*up1 - 12*k1*u1^3*u2*u3^2*up1 + 12*k1*u1^3*u2^2*u3*up1 - 12*k1*u1*u2^2*u3^3*up2 + 48*k1*u1*u2^3*u3^2*up2 + 12*k1*u1^2*u2*u3^3*up2 + 72*k1*u1^2*u2^3*u3*up2 + 24*k1*u1^3*u2*u3^2*up2 - 36*k1*u1^3*u2^2*u3*up2 + 24*k2*u1*u2^2*u3^3*up1 - 36*k2*u1*u2^3*u3^2*up1 - 12*k2*u1^2*u2*u3^3*up1 - 12*k2*u1^2*u2^3*u3*up1 - 12*k1*u1*u2^3*u3^2*up3 - 36*k1*u1^2*u2^3*u3*up3 - 12*k1*u1^3*u2*u3^2*up3 + 24*k1*u1^3*u2^2*u3*up3 - 36*k2*u1*u2^2*u3^3*up2 + 72*k2*u1*u2^3*u3^2*up2 + 24*k2*u1^2*u2*u3^3*up2 + 48*k2*u1^2*u2^3*u3*up2 + 12*k2*u1^3*u2*u3^2*up2 - 12*k2*u1^3*u2^2*u3*up2 + 12*k2*u1*u2^2*u3^3*up3 - 36*k2*u1*u2^3*u3^2*up3 - 12*k2*u1^2*u2*u3^3*up3 - 36*k2*u1^2*u2^3*u3*up3 - 12*k2*u1^3*u2*u3^2*up3 + 12*k2*u1^3*u2^2*u3*up3 - 12*k2*u1*u2^2*vL^3*vpL + 12*k2*u1^2*u2*vL^3*vpL + 12*k1*u2*u3^2*vL^3*vpL - 12*k1*u2^2*u3*vL^3*vpL - 18*L1*k1*u1*u2^4*up1 + 45*L1*k1*u1*u2^4*up2 - 6*L1*k2*u1*u2^4*up1 + 36*L2*k1*u1*u2^4*up1 - 27*L1*k1*u1*u2^4*up3 - 27*L1*k1*u2^4*u3*up1 + 30*L1*k2*u1*u2^4*up2 - 6*L1*k2*u1*u3^4*up1 - 60*L2*k1*u1*u2^4*up2 + 6*L2*k1*u1^4*u2*up2 + 18*L2*k2*u1*u2^4*up1 + 45*L1*k1*u2^4*u3*up2 - 24*L1*k2*u1*u2^4*up3 + 6*L1*k2*u1*u3^4*up2 + 6*L1*k2*u2*u3^4*up1 - 24*L1*k2*u2^4*u3*up1 + 24*L2*k1*u1*u2^4*up3 - 6*L2*k1*u1^4*u2*up3 - 6*L2*k1*u1^4*u3*up2 + 24*L2*k1*u2^4*u3*up1 - 45*L2*k2*u1*u2^4*up2 - 18*L1*k1*u2^4*u3*up3 - 6*L1*k2*u2*u3^4*up2 + 60*L1*k2*u2^4*u3*up2 + 6*L2*k1*u1^4*u3*up3 - 30*L2*k1*u2^4*u3*up2 + 27*L2*k2*u1*u2^4*up3 + 27*L2*k2*u2^4*u3*up1 - 36*L1*k2*u2^4*u3*up3 + 6*L2*k1*u2^4*u3*up3 - 45*L2*k2*u2^4*u3*up2 + 18*L2*k2*u2^4*u3*up3 - 12*k2*u1*u2^2*wL^3*wpL + 12*k2*u1^2*u2*wL^3*wpL + 12*k1*u2*u3^2*wL^3*wpL - 12*k1*u2^2*u3*wL^3*wpL + 6*L1*k2*u1*vL^4*up1 - 6*L1*k2*u1*vL^4*up2 - 6*L1*k2*u2*vL^4*up1 + 6*L1*k2*u2*vL^4*up2 - 6*L2*k1*u2*vL^4*up2 + 6*L2*k1*u2*vL^4*up3 + 6*L2*k1*u3*vL^4*up2 - 6*L2*k1*u3*vL^4*up3 + 4*k1*u2^3*vL*wL^2*vpL - 4*k2*u1^3*vL*wL^2*vpL - 4*k1*u3^3*vL*wL^2*vpL + 4*k2*u2^3*vL*wL^2*vpL + 6*L1*k2*u1*wL^4*up1 - 6*L1*k2*u1*wL^4*up2 - 6*L1*k2*u2*wL^4*up1 + 6*L1*k2*u2*wL^4*up2 - 6*L2*k1*u2*wL^4*up2 + 6*L2*k1*u2*wL^4*up3 + 6*L2*k1*u3*wL^4*up2 - 6*L2*k1*u3*wL^4*up3 + 4*k1*u2^3*vL^2*wL*wpL - 4*k2*u1^3*vL^2*wL*wpL - 4*k1*u3^3*vL^2*wL*wpL + 4*k2*u2^3*vL^2*wL*wpL - 2*L1*k1*u2^4*vL*vpL + 2*L2*k2*u2^4*vL*vpL - 2*L1*k1*u2^4*wL*wpL + 2*L2*k2*u2^4*wL*wpL - 9*L1^2*L2^2*k1*u1^2*up2 + 18*L1^2*L2^2*k1*u2^2*up1 + 9*L1^2*L2^2*k1*u1^2*up3 - 27*L1^2*L2^2*k1*u2^2*up2 + 9*L1^2*L2^2*k2*u2^2*up1 + 9*L1^2*L2^2*k1*u2^2*up3 - 27*L1^2*L2^2*k2*u2^2*up2 + 9*L1^2*L2^2*k2*u3^2*up1 + 18*L1^2*L2^2*k2*u2^2*up3 - 9*L1^2*L2^2*k2*u3^2*up2 - 3*L1^2*L2^2*k1*vL^2*up2 + 3*L1^2*L2^2*k2*vL^2*up1 + 3*L1^2*L2^2*k1*vL^2*up3 - 3*L1^2*L2^2*k2*vL^2*up2 - 3*L1^2*L2^2*k1*wL^2*up2 + 3*L1^2*L2^2*k2*wL^2*up1 + 3*L1^2*L2^2*k1*wL^2*up3 - 3*L1^2*L2^2*k2*wL^2*up2 + 36*k1*u1^2*u2^2*u3^2*up1 - 54*k1*u1^2*u2^2*u3^2*up2 + 18*k2*u1^2*u2^2*u3^2*up1 + 18*k1*u1^2*u2^2*u3^2*up3 - 54*k2*u1^2*u2^2*u3^2*up2 + 36*k2*u1^2*u2^2*u3^2*up3 + 9*L1*k1*u1^2*u2^3*up1 - 6*L1^2*k1*u1*u2^3*up1 - 36*L1*k1*u1^2*u2^3*up2 - 9*L1*k1*u1^2*u3^3*up1 + 9*L1*k1*u1^3*u2^2*up2 - 36*L2*k1*u1^2*u2^3*up1 + 12*L2*k1*u1^3*u2^2*up1 + 24*L1^2*k1*u1*u2^3*up2 + 6*L1^2*k1*u1*u3^3*up1 + 3*L1^3*k1*u1*u2^2*up2 - 36*L2^2*k1*u1*u2^3*up1 - 12*L2^2*k1*u1^3*u2*up1 + 12*L2^3*k1*u1*u2^2*up1 - 12*L2^3*k1*u1^2*u2*up1 + 27*L1*k1*u1^2*u2^3*up3 + 9*L1*k1*u1^2*u3^3*up2 - 9*L1*k1*u1^3*u2^2*up3 + 9*L1*k1*u1^3*u3^2*up2 - 9*L1*k1*u2^2*u3^3*up1 + 27*L1*k1*u2^3*u3^2*up1 - 12*L1*k2*u1^2*u2^3*up2 + 72*L2*k1*u1^2*u2^3*up2 - 36*L2*k1*u1^3*u2^2*up2 + 12*L2*k1*u1^3*u3^2*up1 - 9*L2*k2*u1^2*u2^3*up1 - 18*L1^2*k1*u1*u2^3*up3 - 6*L1^2*k1*u1*u3^3*up2 - 6*L1^2*k1*u2*u3^3*up1 - 18*L1^2*k1*u2^3*u3*up1 + 12*L1^2*k2*u1*u2^3*up2 - 3*L1^3*k1*u1*u2^2*up3 + 3*L1^3*k1*u1*u3^2*up2 + 3*L1^3*k1*u2*u3^2*up1 - 3*L1^3*k1*u2^2*u3*up1 + 48*L2^2*k1*u1*u2^3*up2 + 24*L2^2*k1*u1^3*u2*up2 + 12*L2^2*k1*u1^3*u3*up1 - 18*L2^2*k2*u1*u2^3*up1 - 12*L2^3*k1*u1*u2^2*up2 + 12*L2^3*k1*u1^2*u2*up2 + 6*L2^3*k2*u1*u2^2*up1 - 3*L2^3*k2*u1^2*u2*up1 - 9*L1*k1*u1^3*u3^2*up3 + 9*L1*k1*u2^2*u3^3*up2 - 36*L1*k1*u2^3*u3^2*up2 + 12*L1*k2*u1^2*u2^3*up3 + 12*L1*k2*u1^2*u3^3*up2 - 24*L1*k2*u2^2*u3^3*up1 + 36*L1*k2*u2^3*u3^2*up1 - 36*L2*k1*u1^2*u2^3*up3 + 24*L2*k1*u1^3*u2^2*up3 - 12*L2*k1*u1^3*u3^2*up2 - 12*L2*k1*u2^3*u3^2*up1 + 36*L2*k2*u1^2*u2^3*up2 + 9*L2*k2*u1^2*u3^3*up1 - 9*L2*k2*u1^3*u2^2*up2 + 6*L1^2*k1*u2*u3^3*up2 + 36*L1^2*k1*u2^3*u3*up2 - 12*L1^2*k2*u1*u2^3*up3 - 12*L1^2*k2*u1*u3^3*up2 - 12*L1^2*k2*u2*u3^3*up1 - 12*L1^2*k2*u2^3*u3*up1 - 3*L1^3*k1*u1*u3^2*up3 - 6*L1^3*k1*u2*u3^2*up2 + 9*L1^3*k1*u2^2*u3*up2 - 12*L2^2*k1*u1*u2^3*up3 - 12*L2^2*k1*u1^3*u2*up3 - 12*L2^2*k1*u1^3*u3*up2 - 12*L2^2*k1*u2^3*u3*up1 + 36*L2^2*k2*u1*u2^3*up2 + 6*L2^2*k2*u1^3*u2*up2 - 9*L2^3*k2*u1*u2^2*up2 + 6*L2^3*k2*u1^2*u2*up2 + 3*L2^3*k2*u1^2*u3*up1 + 9*L1*k1*u2^3*u3^2*up3 - 12*L1*k2*u1^2*u3^3*up3 + 36*L1*k2*u2^2*u3^3*up2 - 72*L1*k2*u2^3*u3^2*up2 + 12*L2*k1*u2^3*u3^2*up2 - 27*L2*k2*u1^2*u2^3*up3 - 9*L2*k2*u1^2*u3^3*up2 + 9*L2*k2*u1^3*u2^2*up3 - 9*L2*k2*u1^3*u3^2*up2 + 9*L2*k2*u2^2*u3^3*up1 - 27*L2*k2*u2^3*u3^2*up1 - 18*L1^2*k1*u2^3*u3*up3 + 12*L1^2*k2*u1*u3^3*up3 + 24*L1^2*k2*u2*u3^3*up2 + 48*L1^2*k2*u2^3*u3*up2 + 3*L1^3*k1*u2*u3^2*up3 - 6*L1^3*k1*u2^2*u3*up3 - 12*L1^3*k2*u2*u3^2*up2 + 12*L1^3*k2*u2^2*u3*up2 + 12*L2^2*k1*u2^3*u3*up2 - 18*L2^2*k2*u1*u2^3*up3 - 6*L2^2*k2*u1^3*u2*up3 - 6*L2^2*k2*u1^3*u3*up2 - 18*L2^2*k2*u2^3*u3*up1 + 3*L2^3*k2*u1*u2^2*up3 - 3*L2^3*k2*u1^2*u2*up3 - 3*L2^3*k2*u1^2*u3*up2 + 3*L2^3*k2*u2^2*u3*up1 - 12*L1*k2*u2^2*u3^3*up3 + 36*L1*k2*u2^3*u3^2*up3 + 9*L2*k2*u1^3*u3^2*up3 - 9*L2*k2*u2^2*u3^3*up2 + 36*L2*k2*u2^3*u3^2*up2 - 12*L1^2*k2*u2*u3^3*up3 - 36*L1^2*k2*u2^3*u3*up3 + 12*L1^3*k2*u2*u3^2*up3 - 12*L1^3*k2*u2^2*u3*up3 + 6*L2^2*k2*u1^3*u3*up3 + 24*L2^2*k2*u2^3*u3*up2 - 3*L2^3*k2*u2^2*u3*up2 - 9*L2*k2*u2^3*u3^2*up3 - 6*L2^2*k2*u2^3*u3*up3 - 6*k2*u1^2*vL^2*wL^2*up1 + 6*k1*u2^2*vL^2*wL^2*up2 + 6*k2*u1^2*vL^2*wL^2*up2 - 6*k2*u2^2*vL^2*wL^2*up1 - 6*k1*u2^2*vL^2*wL^2*up3 + 6*k1*u3^2*vL^2*wL^2*up2 + 6*k2*u2^2*vL^2*wL^2*up2 - 6*k1*u3^2*vL^2*wL^2*up3 + L1*k1*u2^3*vL^2*up1 - 4*L1*k1*u2^3*vL^2*up2 - L1*k1*u3^3*vL^2*up1 + 3*L1*k1*u2^3*vL^2*up3 + L1*k1*u3^3*vL^2*up2 - L2*k2*u1^3*vL^2*up2 - 3*L2*k2*u2^3*vL^2*up1 + L2*k2*u1^3*vL^2*up3 + 4*L2*k2*u2^3*vL^2*up2 - L2*k2*u2^3*vL^2*up3 + L1*k1*u2^3*wL^2*up1 - 4*L1*k1*u2^3*wL^2*up2 - L1*k1*u3^3*wL^2*up1 + 3*L1*k1*u2^3*wL^2*up3 + L1*k1*u3^3*wL^2*up2 - L2*k2*u1^3*wL^2*up2 - 3*L2*k2*u2^3*wL^2*up1 + L2*k2*u1^3*wL^2*up3 + 4*L2*k2*u2^3*wL^2*up2 - L2*k2*u2^3*wL^2*up3 + 12*L1*k2*u1^2*vL^3*vpL - 2*L1^2*k1*u2^3*vL*vpL - 12*L1^2*k2*u1*vL^3*vpL + 12*L1*k2*u2^2*vL^3*vpL - 12*L2*k1*u2^2*vL^3*vpL + 2*L1^2*k1*u3^3*vL*vpL + 12*L1^2*k2*u2*vL^3*vpL + 12*L2^2*k1*u2*vL^3*vpL + 2*L2^2*k2*u1^3*vL*vpL - 12*L2*k1*u3^2*vL^3*vpL - 12*L2^2*k1*u3*vL^3*vpL - 2*L2^2*k2*u2^3*vL*vpL - 27*L1*L2*k1*u2^4*up1 + 45*L1*L2*k1*u2^4*up2 - 18*L1*L2*k2*u2^4*up1 - 18*L1*L2*k1*u2^4*up3 + 45*L1*L2*k2*u2^4*up2 - 27*L1*L2*k2*u2^4*up3 + 12*L1*k2*u1^2*wL^3*wpL - 2*L1^2*k1*u2^3*wL*wpL - 12*L1^2*k2*u1*wL^3*wpL + 12*L1*k2*u2^2*wL^3*wpL - 12*L2*k1*u2^2*wL^3*wpL + 2*L1^2*k1*u3^3*wL*wpL + 12*L1^2*k2*u2*wL^3*wpL + 12*L2^2*k1*u2*wL^3*wpL + 2*L2^2*k2*u1^3*wL*wpL - 12*L2*k1*u3^2*wL^3*wpL - 12*L2^2*k1*u3*wL^3*wpL - 2*L2^2*k2*u2^3*wL*wpL + 4*L1^3*k2*vL*wL^2*vpL - 4*L2^3*k1*vL*wL^2*vpL + 4*L1^3*k2*vL^2*wL*wpL - 4*L2^3*k1*vL^2*wL*wpL + 36*k1*u1*u2^4*u3*up1 - 60*k1*u1*u2^4*u3*up2 + 6*k1*u1^4*u2*u3*up2 - 6*k2*u1*u2*u3^4*up1 + 24*k2*u1*u2^4*u3*up1 + 24*k1*u1*u2^4*u3*up3 - 6*k1*u1^4*u2*u3*up3 + 6*k2*u1*u2*u3^4*up2 - 60*k2*u1*u2^4*u3*up2 + 36*k2*u1*u2^4*u3*up3 + 6*k2*u1*u2*vL^4*up1 - 6*k2*u1*u2*vL^4*up2 - 6*k1*u2*u3*vL^4*up2 + 6*k1*u2*u3*vL^4*up3 + 6*k2*u1*u2*wL^4*up1 - 6*k2*u1*u2*wL^4*up2 - 6*k1*u2*u3*wL^4*up2 + 6*k1*u2*u3*wL^4*up3 - 9*L1^2*k1*u1^2*u2^2*up2 + 36*L2^2*k1*u1^2*u2^2*up1 + 9*L1^2*k1*u1^2*u2^2*up3 - 9*L1^2*k1*u1^2*u3^2*up2 + 18*L1^2*k1*u2^2*u3^2*up1 - 54*L2^2*k1*u1^2*u2^2*up2 + 9*L2^2*k2*u1^2*u2^2*up1 + 9*L1^2*k1*u1^2*u3^2*up3 - 27*L1^2*k1*u2^2*u3^2*up2 + 18*L1^2*k2*u2^2*u3^2*up1 + 18*L2^2*k1*u1^2*u2^2*up3 - 27*L2^2*k2*u1^2*u2^2*up2 + 9*L2^2*k2*u1^2*u3^2*up1 + 9*L1^2*k1*u2^2*u3^2*up3 - 54*L1^2*k2*u2^2*u3^2*up2 + 18*L2^2*k2*u1^2*u2^2*up3 - 9*L2^2*k2*u1^2*u3^2*up2 + 9*L2^2*k2*u2^2*u3^2*up1 + 36*L1^2*k2*u2^2*u3^2*up3 - 9*L2^2*k2*u2^2*u3^2*up2 - 3*L1^2*k1*u2^2*vL^2*up2 + 3*L2^2*k2*u1^2*vL^2*up1 + 3*L1^2*k1*u2^2*vL^2*up3 - 3*L1^2*k1*u3^2*vL^2*up2 - 3*L2^2*k2*u1^2*vL^2*up2 + 3*L2^2*k2*u2^2*vL^2*up1 + 3*L1^2*k1*u3^2*vL^2*up3 - 3*L2^2*k2*u2^2*vL^2*up2 - 3*L1^2*k1*u2^2*wL^2*up2 + 3*L2^2*k2*u1^2*wL^2*up1 + 3*L1^2*k1*u2^2*wL^2*up3 - 3*L1^2*k1*u3^2*wL^2*up2 - 3*L2^2*k2*u1^2*wL^2*up2 + 3*L2^2*k2*u2^2*wL^2*up1 + 3*L1^2*k1*u3^2*wL^2*up3 - 3*L2^2*k2*u2^2*wL^2*up2 - 9*L1*L2^3*k1*u1^2*up1 + 6*L1^2*L2^3*k1*u1*up1 + 9*L1*L2^2*k1*u1^3*up2 + 27*L1*L2^2*k1*u2^3*up1 + 9*L1*L2^3*k1*u1^2*up2 - 9*L1*L2^3*k1*u2^2*up1 - 18*L1^2*L2*k1*u2^3*up1 - 6*L1^2*L2^3*k1*u1*up2 - 6*L1^2*L2^3*k1*u2*up1 - 3*L1^3*L2*k1*u2^2*up1 + 3*L1^3*L2^2*k1*u1*up2 + 3*L1^3*L2^2*k1*u2*up1 - 9*L1*L2^2*k1*u1^3*up3 - 36*L1*L2^2*k1*u2^3*up2 + 18*L1*L2^2*k2*u2^3*up1 + 9*L1*L2^3*k1*u2^2*up2 + 3*L1*L2^3*k2*u1^2*up2 - 6*L1*L2^3*k2*u2^2*up1 + 36*L1^2*L2*k1*u2^3*up2 - 9*L1^2*L2*k2*u2^3*up1 + 6*L1^2*L2^3*k1*u2*up2 - 3*L1^2*L2^3*k2*u1*up2 - 3*L1^2*L2^3*k2*u2*up1 + 9*L1^3*L2*k1*u2^2*up2 - 3*L1^3*L2*k1*u3^2*up1 - 3*L1^3*L2^2*k1*u1*up3 - 6*L1^3*L2^2*k1*u2*up2 - 3*L1^3*L2^2*k1*u3*up1 + 9*L1*L2^2*k1*u2^3*up3 - 36*L1*L2^2*k2*u2^3*up2 - 3*L1*L2^3*k2*u1^2*up3 + 9*L1*L2^3*k2*u2^2*up2 - 18*L1^2*L2*k1*u2^3*up3 + 36*L1^2*L2*k2*u2^3*up2 + 9*L1^2*L2*k2*u3^3*up1 + 3*L1^2*L2^3*k2*u1*up3 + 6*L1^2*L2^3*k2*u2*up2 + 3*L1^2*L2^3*k2*u3*up1 - 6*L1^3*L2*k1*u2^2*up3 + 3*L1^3*L2*k1*u3^2*up2 + 9*L1^3*L2*k2*u2^2*up2 + 3*L1^3*L2^2*k1*u2*up3 + 3*L1^3*L2^2*k1*u3*up2 - 6*L1^3*L2^2*k2*u2*up2 + 18*L1*L2^2*k2*u2^3*up3 - 3*L1*L2^3*k2*u2^2*up3 - 27*L1^2*L2*k2*u2^3*up3 - 9*L1^2*L2*k2*u3^3*up2 - 3*L1^2*L2^3*k2*u2*up3 - 3*L1^2*L2^3*k2*u3*up2 - 9*L1^3*L2*k2*u2^2*up3 + 9*L1^3*L2*k2*u3^2*up2 + 6*L1^3*L2^2*k2*u2*up3 + 6*L1^3*L2^2*k2*u3*up2 - 9*L1^3*L2*k2*u3^2*up3 - 6*L1^3*L2^2*k2*u3*up3 - 6*L1^2*k2*vL^2*wL^2*up1 + 6*L1^2*k2*vL^2*wL^2*up2 + 6*L2^2*k1*vL^2*wL^2*up2 - 6*L2^2*k1*vL^2*wL^2*up3 - L1*L2^3*k1*vL^2*up1 + L1*L2^3*k1*vL^2*up2 + L1^3*L2*k2*vL^2*up2 - L1^3*L2*k2*vL^2*up3 - L1*L2^3*k1*wL^2*up1 + L1*L2^3*k1*wL^2*up2 + L1^3*L2*k2*wL^2*up2 - L1^3*L2*k2*wL^2*up3 + 2*L1^2*L2^3*k1*vL*vpL - 2*L1^3*L2^2*k2*vL*vpL + 2*L1^2*L2^3*k1*wL*wpL - 2*L1^3*L2^2*k2*wL*wpL - 54*L1*k1*u1*u2^2*u3^2*up1 + 27*L1*k1*u1^2*u2*u3^2*up1 - 27*L1*k1*u1^2*u2^2*u3*up1 - 18*L1^2*k1*u1*u2*u3^2*up1 + 18*L1^2*k1*u1*u2^2*u3*up1 + 81*L1*k1*u1*u2^2*u3^2*up2 - 54*L1*k1*u1^2*u2*u3^2*up2 + 81*L1*k1*u1^2*u2^2*u3*up2 - 36*L1*k2*u1*u2^2*u3^2*up1 + 36*L2*k1*u1*u2^2*u3^2*up1 - 36*L2*k1*u1^2*u2*u3^2*up1 + 72*L2*k1*u1^2*u2^2*u3*up1 + 36*L1^2*k1*u1*u2*u3^2*up2 - 54*L1^2*k1*u1*u2^2*u3*up2 + 18*L1^2*k1*u1^2*u2*u3*up2 + 36*L2^2*k1*u1*u2^2*u3*up1 - 36*L2^2*k1*u1^2*u2*u3*up1 - 27*L1*k1*u1*u2^2*u3^2*up3 + 27*L1*k1*u1^2*u2*u3^2*up3 - 54*L1*k1*u1^2*u2^2*u3*up3 + 108*L1*k2*u1*u2^2*u3^2*up2 - 36*L1*k2*u1^2*u2*u3^2*up2 + 36*L1*k2*u1^2*u2^2*u3*up2 - 36*L2*k1*u1*u2^2*u3^2*up2 + 36*L2*k1*u1^2*u2*u3^2*up2 - 108*L2*k1*u1^2*u2^2*u3*up2 + 54*L2*k2*u1*u2^2*u3^2*up1 - 27*L2*k2*u1^2*u2*u3^2*up1 + 27*L2*k2*u1^2*u2^2*u3*up1 - 18*L1^2*k1*u1*u2*u3^2*up3 + 36*L1^2*k1*u1*u2^2*u3*up3 - 18*L1^2*k1*u1^2*u2*u3*up3 + 36*L1^2*k2*u1*u2*u3^2*up2 - 36*L1^2*k2*u1*u2^2*u3*up2 - 36*L2^2*k1*u1*u2^2*u3*up2 + 36*L2^2*k1*u1^2*u2*u3*up2 - 18*L2^2*k2*u1*u2*u3^2*up1 + 36*L2^2*k2*u1*u2^2*u3*up1 - 18*L2^2*k2*u1^2*u2*u3*up1 - 72*L1*k2*u1*u2^2*u3^2*up3 + 36*L1*k2*u1^2*u2*u3^2*up3 - 36*L1*k2*u1^2*u2^2*u3*up3 + 36*L2*k1*u1^2*u2^2*u3*up3 - 81*L2*k2*u1*u2^2*u3^2*up2 + 54*L2*k2*u1^2*u2*u3^2*up2 - 81*L2*k2*u1^2*u2^2*u3*up2 - 36*L1^2*k2*u1*u2*u3^2*up3 + 36*L1^2*k2*u1*u2^2*u3*up3 + 18*L2^2*k2*u1*u2*u3^2*up2 - 54*L2^2*k2*u1*u2^2*u3*up2 + 36*L2^2*k2*u1^2*u2*u3*up2 + 27*L2*k2*u1*u2^2*u3^2*up3 - 27*L2*k2*u1^2*u2*u3^2*up3 + 54*L2*k2*u1^2*u2^2*u3*up3 + 18*L2^2*k2*u1*u2^2*u3*up3 - 18*L2^2*k2*u1^2*u2*u3*up3 + 3*L1*k1*u1*u2^2*vL^2*up2 - 3*L1*k1*u1*u2^2*vL^2*up3 + 3*L1*k1*u1*u3^2*vL^2*up2 + 3*L1*k1*u2*u3^2*vL^2*up1 - 3*L1*k1*u2^2*u3*vL^2*up1 + 6*L2*k2*u1*u2^2*vL^2*up1 - 3*L2*k2*u1^2*u2*vL^2*up1 - 6*L2^2*k2*u1*u2*vL^2*up1 - 3*L1*k1*u1*u3^2*vL^2*up3 - 6*L1*k1*u2*u3^2*vL^2*up2 + 9*L1*k1*u2^2*u3*vL^2*up2 - 9*L2*k2*u1*u2^2*vL^2*up2 + 6*L2*k2*u1^2*u2*vL^2*up2 + 3*L2*k2*u1^2*u3*vL^2*up1 + 6*L1^2*k1*u2*u3*vL^2*up2 + 6*L2^2*k2*u1*u2*vL^2*up2 + 3*L1*k1*u2*u3^2*vL^2*up3 - 6*L1*k1*u2^2*u3*vL^2*up3 + 3*L2*k2*u1*u2^2*vL^2*up3 - 3*L2*k2*u1^2*u2*vL^2*up3 - 3*L2*k2*u1^2*u3*vL^2*up2 + 3*L2*k2*u2^2*u3*vL^2*up1 - 6*L1^2*k1*u2*u3*vL^2*up3 - 3*L2*k2*u2^2*u3*vL^2*up2 + 3*L1*k1*u1*u2^2*wL^2*up2 - 3*L1*k1*u1*u2^2*wL^2*up3 + 3*L1*k1*u1*u3^2*wL^2*up2 + 3*L1*k1*u2*u3^2*wL^2*up1 - 3*L1*k1*u2^2*u3*wL^2*up1 + 6*L2*k2*u1*u2^2*wL^2*up1 - 3*L2*k2*u1^2*u2*wL^2*up1 - 6*L2^2*k2*u1*u2*wL^2*up1 - 3*L1*k1*u1*u3^2*wL^2*up3 - 6*L1*k1*u2*u3^2*wL^2*up2 + 9*L1*k1*u2^2*u3*wL^2*up2 - 9*L2*k2*u1*u2^2*wL^2*up2 + 6*L2*k2*u1^2*u2*wL^2*up2 + 3*L2*k2*u1^2*u3*wL^2*up1 + 6*L1^2*k1*u2*u3*wL^2*up2 + 6*L2^2*k2*u1*u2*wL^2*up2 + 3*L1*k1*u2*u3^2*wL^2*up3 - 6*L1*k1*u2^2*u3*wL^2*up3 + 3*L2*k2*u1*u2^2*wL^2*up3 - 3*L2*k2*u1^2*u2*wL^2*up3 - 3*L2*k2*u1^2*u3*wL^2*up2 + 3*L2*k2*u2^2*u3*wL^2*up1 - 6*L1^2*k1*u2*u3*wL^2*up3 - 3*L2*k2*u2^2*u3*wL^2*up2 - 6*L1*k1*u2^2*u3^2*vL*vpL + 6*L2*k2*u1^2*u2^2*vL*vpL - 6*L1^2*k1*u2*u3^2*vL*vpL + 6*L1^2*k1*u2^2*u3*vL*vpL + 6*L2^2*k2*u1*u2^2*vL*vpL - 6*L2^2*k2*u1^2*u2*vL*vpL + 54*L1*L2*k1*u1*u2^3*up1 + 18*L1*L2^3*k1*u1*u2*up1 - 108*L1*L2*k1*u1*u2^3*up2 - 18*L1*L2*k1*u1^3*u2*up2 + 18*L1*L2*k2*u1*u2^3*up1 - 18*L1*L2^3*k1*u1*u2*up2 + 6*L1*L2^3*k2*u1*u2*up1 - 6*L1^3*L2*k1*u1*u2*up2 + 54*L1*L2*k1*u1*u2^3*up3 + 18*L1*L2*k1*u1^3*u2*up3 + 18*L1*L2*k1*u1^3*u3*up2 + 54*L1*L2*k1*u2^3*u3*up1 - 72*L1*L2*k2*u1*u2^3*up2 - 18*L1*L2*k2*u1*u3^3*up1 - 12*L1*L2^3*k2*u1*u2*up2 - 6*L1*L2^3*k2*u1*u3*up1 + 6*L1^3*L2*k1*u1*u2*up3 + 6*L1^3*L2*k1*u1*u3*up2 + 6*L1^3*L2*k1*u2*u3*up1 - 18*L1*L2*k1*u1^3*u3*up3 - 72*L1*L2*k1*u2^3*u3*up2 + 54*L1*L2*k2*u1*u2^3*up3 + 18*L1*L2*k2*u1*u3^3*up2 + 18*L1*L2*k2*u2*u3^3*up1 + 54*L1*L2*k2*u2^3*u3*up1 + 6*L1*L2^3*k2*u1*u2*up3 + 6*L1*L2^3*k2*u1*u3*up2 + 6*L1*L2^3*k2*u2*u3*up1 - 6*L1^3*L2*k1*u1*u3*up3 - 12*L1^3*L2*k1*u2*u3*up2 + 18*L1*L2*k1*u2^3*u3*up3 - 18*L1*L2*k2*u2*u3^3*up2 - 108*L1*L2*k2*u2^3*u3*up2 - 6*L1*L2^3*k2*u2*u3*up2 + 6*L1^3*L2*k1*u2*u3*up3 - 18*L1^3*L2*k2*u2*u3*up2 + 54*L1*L2*k2*u2^3*u3*up3 + 18*L1^3*L2*k2*u2*u3*up3 + 12*L1*k2*u1*vL^2*wL^2*up1 - 12*L1*k2*u1*vL^2*wL^2*up2 - 12*L1*k2*u2*vL^2*wL^2*up1 + 12*L1*k2*u2*vL^2*wL^2*up2 - 12*L2*k1*u2*vL^2*wL^2*up2 + 12*L2*k1*u2*vL^2*wL^2*up3 + 12*L2*k1*u3*vL^2*wL^2*up2 - 12*L2*k1*u3*vL^2*wL^2*up3 - 6*L1*k1*u2^2*u3^2*wL*wpL + 6*L2*k2*u1^2*u2^2*wL*wpL - 6*L1^2*k1*u2*u3^2*wL*wpL + 6*L1^2*k1*u2^2*u3*wL*wpL + 6*L2^2*k2*u1*u2^2*wL*wpL - 6*L2^2*k2*u1^2*u2*wL*wpL + 12*L1*k2*u1^2*vL*wL^2*vpL - 12*L1^2*k2*u1*vL*wL^2*vpL + 12*L1*k2*u2^2*vL*wL^2*vpL - 12*L2*k1*u2^2*vL*wL^2*vpL + 12*L1^2*k2*u2*vL*wL^2*vpL + 12*L2^2*k1*u2*vL*wL^2*vpL - 12*L2*k1*u3^2*vL*wL^2*vpL - 12*L2^2*k1*u3*vL*wL^2*vpL + 12*L1*k2*u1^2*vL^2*wL*wpL - 12*L1^2*k2*u1*vL^2*wL*wpL + 12*L1*k2*u2^2*vL^2*wL*wpL - 12*L2*k1*u2^2*vL^2*wL*wpL + 12*L1^2*k2*u2*vL^2*wL*wpL + 12*L2^2*k1*u2*vL^2*wL*wpL - 12*L2*k1*u3^2*vL^2*wL*wpL - 12*L2^2*k1*u3*vL^2*wL*wpL - 2*L1*L2^3*k1*u1*vL*vpL + 6*L1*L2*k1*u2^3*vL*vpL + 2*L1*L2^3*k1*u2*vL*vpL + 6*L1*L2*k2*u2^3*vL*vpL + 2*L1^3*L2*k2*u2*vL*vpL - 2*L1^3*L2*k2*u3*vL*vpL - 2*L1*L2^3*k1*u1*wL*wpL + 6*L1*L2*k1*u2^3*wL*wpL + 2*L1*L2^3*k1*u2*wL*wpL + 6*L1*L2*k2*u2^3*wL*wpL + 2*L1^3*L2*k2*u2*wL*wpL - 2*L1^3*L2*k2*u3*wL*wpL - 27*L1*L2*k1*u1^2*u2^2*up1 - 54*L1*L2^2*k1*u1*u2^2*up1 + 27*L1*L2^2*k1*u1^2*u2*up1 + 18*L1^2*L2*k1*u1*u2^2*up1 - 18*L1^2*L2^2*k1*u1*u2*up1 + 81*L1*L2*k1*u1^2*u2^2*up2 - 27*L1*L2*k1*u1^2*u3^2*up1 + 81*L1*L2^2*k1*u1*u2^2*up2 - 54*L1*L2^2*k1*u1^2*u2*up2 - 27*L1*L2^2*k1*u1^2*u3*up1 - 18*L1*L2^2*k2*u1*u2^2*up1 - 54*L1^2*L2*k1*u1*u2^2*up2 + 18*L1^2*L2*k1*u1*u3^2*up1 + 18*L1^2*L2*k1*u1^2*u2*up2 + 36*L1^2*L2^2*k1*u1*u2*up2 + 18*L1^2*L2^2*k1*u1*u3*up1 - 54*L1*L2*k1*u1^2*u2^2*up3 + 27*L1*L2*k1*u1^2*u3^2*up2 - 27*L1*L2*k1*u2^2*u3^2*up1 + 27*L1*L2*k2*u1^2*u2^2*up2 - 27*L1*L2^2*k1*u1*u2^2*up3 + 27*L1*L2^2*k1*u1^2*u2*up3 + 27*L1*L2^2*k1*u1^2*u3*up2 - 27*L1*L2^2*k1*u2^2*u3*up1 + 54*L1*L2^2*k2*u1*u2^2*up2 - 18*L1*L2^2*k2*u1*u3^2*up1 - 18*L1*L2^2*k2*u1^2*u2*up2 + 36*L1^2*L2*k1*u1*u2^2*up3 - 18*L1^2*L2*k1*u1*u3^2*up2 - 18*L1^2*L2*k1*u2*u3^2*up1 - 18*L1^2*L2*k1*u1^2*u2*up3 - 18*L1^2*L2*k1*u1^2*u3*up2 + 36*L1^2*L2*k1*u2^2*u3*up1 - 27*L1^2*L2*k2*u1*u2^2*up2 - 18*L1^2*L2^2*k1*u1*u2*up3 - 18*L1^2*L2^2*k1*u1*u3*up2 - 18*L1^2*L2^2*k1*u2*u3*up1 + 18*L1^2*L2^2*k2*u1*u2*up2 + 27*L1*L2*k1*u2^2*u3^2*up2 - 27*L1*L2*k2*u1^2*u2^2*up3 + 27*L1*L2*k2*u1^2*u3^2*up2 - 54*L1*L2*k2*u2^2*u3^2*up1 + 27*L1*L2^2*k1*u2^2*u3*up2 - 36*L1*L2^2*k2*u1*u2^2*up3 + 18*L1*L2^2*k2*u1*u3^2*up2 + 18*L1*L2^2*k2*u2*u3^2*up1 + 18*L1*L2^2*k2*u1^2*u2*up3 + 18*L1*L2^2*k2*u1^2*u3*up2 - 36*L1*L2^2*k2*u2^2*u3*up1 + 18*L1^2*L2*k1*u2*u3^2*up2 + 18*L1^2*L2*k1*u1^2*u3*up3 - 54*L1^2*L2*k1*u2^2*u3*up2 + 27*L1^2*L2*k2*u1*u2^2*up3 - 27*L1^2*L2*k2*u1*u3^2*up2 - 27*L1^2*L2*k2*u2*u3^2*up1 + 27*L1^2*L2*k2*u2^2*u3*up1 + 18*L1^2*L2^2*k1*u2*u3*up2 - 18*L1^2*L2^2*k2*u1*u2*up3 - 18*L1^2*L2^2*k2*u1*u3*up2 - 18*L1^2*L2^2*k2*u2*u3*up1 - 27*L1*L2*k2*u1^2*u3^2*up3 + 81*L1*L2*k2*u2^2*u3^2*up2 - 18*L1*L2^2*k2*u2*u3^2*up2 - 18*L1*L2^2*k2*u1^2*u3*up3 + 54*L1*L2^2*k2*u2^2*u3*up2 + 18*L1^2*L2*k1*u2^2*u3*up3 + 27*L1^2*L2*k2*u1*u3^2*up3 + 54*L1^2*L2*k2*u2*u3^2*up2 - 81*L1^2*L2*k2*u2^2*u3*up2 + 18*L1^2*L2^2*k2*u1*u3*up3 + 36*L1^2*L2^2*k2*u2*u3*up2 - 27*L1*L2*k2*u2^2*u3^2*up3 - 18*L1*L2^2*k2*u2^2*u3*up3 - 27*L1^2*L2*k2*u2*u3^2*up3 + 54*L1^2*L2*k2*u2^2*u3*up3 - 18*L1^2*L2^2*k2*u2*u3*up3 - 3*L1*L2*k1*u2^2*vL^2*up1 + 3*L1*L2^2*k1*u1*vL^2*up2 + 3*L1*L2^2*k1*u2*vL^2*up1 - 6*L1*L2^2*k2*u1*vL^2*up1 + 9*L1*L2*k1*u2^2*vL^2*up2 - 3*L1*L2*k1*u3^2*vL^2*up1 + 3*L1*L2*k2*u1^2*vL^2*up2 - 6*L1*L2*k2*u2^2*vL^2*up1 - 3*L1*L2^2*k1*u1*vL^2*up3 - 6*L1*L2^2*k1*u2*vL^2*up2 - 3*L1*L2^2*k1*u3*vL^2*up1 + 6*L1*L2^2*k2*u1*vL^2*up2 + 6*L1*L2^2*k2*u2*vL^2*up1 + 6*L1^2*L2*k1*u2*vL^2*up2 - 3*L1^2*L2*k2*u1*vL^2*up2 - 3*L1^2*L2*k2*u2*vL^2*up1 - 6*L1*L2*k1*u2^2*vL^2*up3 + 3*L1*L2*k1*u3^2*vL^2*up2 - 3*L1*L2*k2*u1^2*vL^2*up3 + 9*L1*L2*k2*u2^2*vL^2*up2 + 3*L1*L2^2*k1*u2*vL^2*up3 + 3*L1*L2^2*k1*u3*vL^2*up2 - 6*L1*L2^2*k2*u2*vL^2*up2 - 6*L1^2*L2*k1*u2*vL^2*up3 - 6*L1^2*L2*k1*u3*vL^2*up2 + 3*L1^2*L2*k2*u1*vL^2*up3 + 6*L1^2*L2*k2*u2*vL^2*up2 + 3*L1^2*L2*k2*u3*vL^2*up1 - 3*L1*L2*k2*u2^2*vL^2*up3 + 6*L1^2*L2*k1*u3*vL^2*up3 - 3*L1^2*L2*k2*u2*vL^2*up3 - 3*L1^2*L2*k2*u3*vL^2*up2 - 3*L1*L2*k1*u2^2*wL^2*up1 + 3*L1*L2^2*k1*u1*wL^2*up2 + 3*L1*L2^2*k1*u2*wL^2*up1 - 6*L1*L2^2*k2*u1*wL^2*up1 + 9*L1*L2*k1*u2^2*wL^2*up2 - 3*L1*L2*k1*u3^2*wL^2*up1 + 3*L1*L2*k2*u1^2*wL^2*up2 - 6*L1*L2*k2*u2^2*wL^2*up1 - 3*L1*L2^2*k1*u1*wL^2*up3 - 6*L1*L2^2*k1*u2*wL^2*up2 - 3*L1*L2^2*k1*u3*wL^2*up1 + 6*L1*L2^2*k2*u1*wL^2*up2 + 6*L1*L2^2*k2*u2*wL^2*up1 + 6*L1^2*L2*k1*u2*wL^2*up2 - 3*L1^2*L2*k2*u1*wL^2*up2 - 3*L1^2*L2*k2*u2*wL^2*up1 - 6*L1*L2*k1*u2^2*wL^2*up3 + 3*L1*L2*k1*u3^2*wL^2*up2 - 3*L1*L2*k2*u1^2*wL^2*up3 + 9*L1*L2*k2*u2^2*wL^2*up2 + 3*L1*L2^2*k1*u2*wL^2*up3 + 3*L1*L2^2*k1*u3*wL^2*up2 - 6*L1*L2^2*k2*u2*wL^2*up2 - 6*L1^2*L2*k1*u2*wL^2*up3 - 6*L1^2*L2*k1*u3*wL^2*up2 + 3*L1^2*L2*k2*u1*wL^2*up3 + 6*L1^2*L2*k2*u2*wL^2*up2 + 3*L1^2*L2*k2*u3*wL^2*up1 - 3*L1*L2*k2*u2^2*wL^2*up3 + 6*L1^2*L2*k1*u3*wL^2*up3 - 3*L1^2*L2*k2*u2*wL^2*up3 - 3*L1^2*L2*k2*u3*wL^2*up2 - 6*L1*L2^2*k1*u2^2*vL*vpL - 6*L1*L2^2*k2*u1^2*vL*vpL + 6*L1^2*L2*k1*u2^2*vL*vpL - 6*L1^2*L2^2*k1*u2*vL*vpL + 6*L1^2*L2^2*k2*u1*vL*vpL - 6*L1*L2^2*k2*u2^2*vL*vpL + 6*L1^2*L2*k1*u3^2*vL*vpL + 6*L1^2*L2*k2*u2^2*vL*vpL + 6*L1^2*L2^2*k1*u3*vL*vpL - 6*L1^2*L2^2*k2*u2*vL*vpL - 6*L1*L2^2*k1*u2^2*wL*wpL - 6*L1*L2^2*k2*u1^2*wL*wpL + 6*L1^2*L2*k1*u2^2*wL*wpL - 6*L1^2*L2^2*k1*u2*wL*wpL + 6*L1^2*L2^2*k2*u1*wL*wpL - 6*L1*L2^2*k2*u2^2*wL*wpL + 6*L1^2*L2*k1*u3^2*wL*wpL + 6*L1^2*L2*k2*u2^2*wL*wpL + 6*L1^2*L2^2*k1*u3*wL*wpL - 6*L1^2*L2^2*k2*u2*wL*wpL + 18*L1*k1*u1*u2*u3^3*up1 + 54*L1*k1*u1*u2^3*u3*up1 - 18*L1*k1*u1*u2*u3^3*up2 - 108*L1*k1*u1*u2^3*u3*up2 - 18*L1*k1*u1^3*u2*u3*up2 + 24*L1*k2*u1*u2*u3^3*up1 + 24*L1*k2*u1*u2^3*u3*up1 - 72*L2*k1*u1*u2^3*u3*up1 - 24*L2*k1*u1^3*u2*u3*up1 - 6*L1^3*k1*u1*u2*u3*up2 + 54*L1*k1*u1*u2^3*u3*up3 + 18*L1*k1*u1^3*u2*u3*up3 - 48*L1*k2*u1*u2*u3^3*up2 - 96*L1*k2*u1*u2^3*u3*up2 + 96*L2*k1*u1*u2^3*u3*up2 + 48*L2*k1*u1^3*u2*u3*up2 - 18*L2*k2*u1*u2*u3^3*up1 - 54*L2*k2*u1*u2^3*u3*up1 + 6*L1^3*k1*u1*u2*u3*up3 - 6*L2^3*k2*u1*u2*u3*up1 + 24*L1*k2*u1*u2*u3^3*up3 + 72*L1*k2*u1*u2^3*u3*up3 - 24*L2*k1*u1*u2^3*u3*up3 - 24*L2*k1*u1^3*u2*u3*up3 + 18*L2*k2*u1*u2*u3^3*up2 + 108*L2*k2*u1*u2^3*u3*up2 + 18*L2*k2*u1^3*u2*u3*up2 + 6*L2^3*k2*u1*u2*u3*up2 - 54*L2*k2*u1*u2^3*u3*up3 - 18*L2*k2*u1^3*u2*u3*up3 + 12*k2*u1*u2*vL^2*wL^2*up1 - 12*k2*u1*u2*vL^2*wL^2*up2 - 12*k1*u2*u3*vL^2*wL^2*up2 + 12*k1*u2*u3*vL^2*wL^2*up3 - 12*k2*u1*u2^2*vL*wL^2*vpL + 12*k2*u1^2*u2*vL*wL^2*vpL + 12*k1*u2*u3^2*vL*wL^2*vpL - 12*k1*u2^2*u3*vL*wL^2*vpL - 12*k2*u1*u2^2*vL^2*wL*wpL + 12*k2*u1^2*u2*vL^2*wL*wpL + 12*k1*u2*u3^2*vL^2*wL*wpL - 12*k1*u2^2*u3*vL^2*wL*wpL + 2*L1*k1*u1*u2^3*vL*vpL - 2*L1*k1*u1*u3^3*vL*vpL - 24*L1*k2*u1*u2*vL^3*vpL + 2*L1*k1*u2*u3^3*vL*vpL + 6*L1*k1*u2^3*u3*vL*vpL - 6*L2*k2*u1*u2^3*vL*vpL - 2*L2*k2*u1^3*u2*vL*vpL + 24*L2*k1*u2*u3*vL^3*vpL + 2*L2*k2*u1^3*u3*vL*vpL - 2*L2*k2*u2^3*u3*vL*vpL + 2*L1*k1*u1*u2^3*wL*wpL - 2*L1*k1*u1*u3^3*wL*wpL - 24*L1*k2*u1*u2*wL^3*wpL + 2*L1*k1*u2*u3^3*wL*wpL + 6*L1*k1*u2^3*u3*wL*wpL - 6*L2*k2*u1*u2^3*wL*wpL - 2*L2*k2*u1^3*u2*wL*wpL + 24*L2*k1*u2*u3*wL^3*wpL + 2*L2*k2*u1^3*u3*wL*wpL - 2*L2*k2*u2^3*u3*wL*wpL + 54*L1*L2*k1*u1*u2*u3^2*up1 - 108*L1*L2*k1*u1*u2^2*u3*up1 + 54*L1*L2*k1*u1^2*u2*u3*up1 + 54*L1*L2^2*k1*u1*u2*u3*up1 - 36*L1^2*L2*k1*u1*u2*u3*up1 - 54*L1*L2*k1*u1*u2*u3^2*up2 + 162*L1*L2*k1*u1*u2^2*u3*up2 - 108*L1*L2*k1*u1^2*u2*u3*up2 + 54*L1*L2*k2*u1*u2*u3^2*up1 - 54*L1*L2*k2*u1*u2^2*u3*up1 - 54*L1*L2^2*k1*u1*u2*u3*up2 + 36*L1*L2^2*k2*u1*u2*u3*up1 + 72*L1^2*L2*k1*u1*u2*u3*up2 - 54*L1*L2*k1*u1*u2^2*u3*up3 + 54*L1*L2*k1*u1^2*u2*u3*up3 - 108*L1*L2*k2*u1*u2*u3^2*up2 + 162*L1*L2*k2*u1*u2^2*u3*up2 - 54*L1*L2*k2*u1^2*u2*u3*up2 - 72*L1*L2^2*k2*u1*u2*u3*up2 - 36*L1^2*L2*k1*u1*u2*u3*up3 + 54*L1^2*L2*k2*u1*u2*u3*up2 + 54*L1*L2*k2*u1*u2*u3^2*up3 - 108*L1*L2*k2*u1*u2^2*u3*up3 + 54*L1*L2*k2*u1^2*u2*u3*up3 + 36*L1*L2^2*k2*u1*u2*u3*up3 - 54*L1^2*L2*k2*u1*u2*u3*up3 - 6*L1*L2*k1*u1*u2*vL^2*up2 + 6*L1*L2*k2*u1*u2*vL^2*up1 + 6*L1*L2*k1*u1*u2*vL^2*up3 + 6*L1*L2*k1*u1*u3*vL^2*up2 + 6*L1*L2*k1*u2*u3*vL^2*up1 - 12*L1*L2*k2*u1*u2*vL^2*up2 - 6*L1*L2*k2*u1*u3*vL^2*up1 - 6*L1*L2*k1*u1*u3*vL^2*up3 - 12*L1*L2*k1*u2*u3*vL^2*up2 + 6*L1*L2*k2*u1*u2*vL^2*up3 + 6*L1*L2*k2*u1*u3*vL^2*up2 + 6*L1*L2*k2*u2*u3*vL^2*up1 + 6*L1*L2*k1*u2*u3*vL^2*up3 - 6*L1*L2*k2*u2*u3*vL^2*up2 - 6*L1*L2*k1*u1*u2*wL^2*up2 + 6*L1*L2*k2*u1*u2*wL^2*up1 + 6*L1*L2*k1*u1*u2*wL^2*up3 + 6*L1*L2*k1*u1*u3*wL^2*up2 + 6*L1*L2*k1*u2*u3*wL^2*up1 - 12*L1*L2*k2*u1*u2*wL^2*up2 - 6*L1*L2*k2*u1*u3*wL^2*up1 - 6*L1*L2*k1*u1*u3*wL^2*up3 - 12*L1*L2*k1*u2*u3*wL^2*up2 + 6*L1*L2*k2*u1*u2*wL^2*up3 + 6*L1*L2*k2*u1*u3*wL^2*up2 + 6*L1*L2*k2*u2*u3*wL^2*up1 + 6*L1*L2*k1*u2*u3*wL^2*up3 - 6*L1*L2*k2*u2*u3*wL^2*up2 - 6*L1*L2*k1*u1*u2^2*vL*vpL + 6*L1*L2^2*k1*u1*u2*vL*vpL - 6*L1*L2*k1*u1*u3^2*vL*vpL - 12*L1*L2*k2*u1*u2^2*vL*vpL + 6*L1*L2*k2*u1^2*u2*vL*vpL - 6*L1*L2^2*k1*u1*u3*vL*vpL + 12*L1*L2^2*k2*u1*u2*vL*vpL - 6*L1^2*L2*k2*u1*u2*vL*vpL + 6*L1*L2*k1*u2*u3^2*vL*vpL - 12*L1*L2*k1*u2^2*u3*vL*vpL - 6*L1*L2*k2*u1^2*u3*vL*vpL + 6*L1*L2^2*k1*u2*u3*vL*vpL - 12*L1^2*L2*k1*u2*u3*vL*vpL + 6*L1^2*L2*k2*u1*u3*vL*vpL - 6*L1*L2*k2*u2^2*u3*vL*vpL - 6*L1^2*L2*k2*u2*u3*vL*vpL - 6*L1*L2*k1*u1*u2^2*wL*wpL + 6*L1*L2^2*k1*u1*u2*wL*wpL - 6*L1*L2*k1*u1*u3^2*wL*wpL - 12*L1*L2*k2*u1*u2^2*wL*wpL + 6*L1*L2*k2*u1^2*u2*wL*wpL - 6*L1*L2^2*k1*u1*u3*wL*wpL + 12*L1*L2^2*k2*u1*u2*wL*wpL - 6*L1^2*L2*k2*u1*u2*wL*wpL + 6*L1*L2*k1*u2*u3^2*wL*wpL - 12*L1*L2*k1*u2^2*u3*wL*wpL - 6*L1*L2*k2*u1^2*u3*wL*wpL + 6*L1*L2^2*k1*u2*u3*wL*wpL - 12*L1^2*L2*k1*u2*u3*wL*wpL + 6*L1^2*L2*k2*u1*u3*wL*wpL - 6*L1*L2*k2*u2^2*u3*wL*wpL - 6*L1^2*L2*k2*u2*u3*wL*wpL - 6*L1*k1*u1*u2*u3*vL^2*up2 + 6*L1*k1*u1*u2*u3*vL^2*up3 - 6*L2*k2*u1*u2*u3*vL^2*up1 + 6*L2*k2*u1*u2*u3*vL^2*up2 - 6*L1*k1*u1*u2*u3*wL^2*up2 + 6*L1*k1*u1*u2*u3*wL^2*up3 - 6*L2*k2*u1*u2*u3*wL^2*up1 + 6*L2*k2*u1*u2*u3*wL^2*up2 + 6*L1*k1*u1*u2*u3^2*vL*vpL - 6*L1*k1*u1*u2^2*u3*vL*vpL + 6*L2*k2*u1*u2^2*u3*vL*vpL - 6*L2*k2*u1^2*u2*u3*vL*vpL + 6*L1*k1*u1*u2*u3^2*wL*wpL - 6*L1*k1*u1*u2^2*u3*wL*wpL + 6*L2*k2*u1*u2^2*u3*wL*wpL - 6*L2*k2*u1^2*u2*u3*wL*wpL - 24*L1*k2*u1*u2*vL*wL^2*vpL + 24*L2*k1*u2*u3*vL*wL^2*vpL - 24*L1*k2*u1*u2*vL^2*wL*wpL + 24*L2*k1*u2*u3*vL^2*wL*wpL + 12*L1*L2*k1*u1*u2*u3*vL*vpL + 12*L1*L2*k2*u1*u2*u3*vL*vpL + 12*L1*L2*k1*u1*u2*u3*wL*wpL + 12*L1*L2*k2*u1*u2*u3*wL*wpL)/(Mb2*(L1 - u1 + u2)^3*(L2 - u2 + u3)^3) + (3*(up2 - up3)*(k1*u2^7 + k2*u2^7 + 6*k1*u1^2*u2^5 - 4*k1*u1^3*u2^4 + k1*u1^4*u2^3 - k1*u1^4*u3^3 + 3*k2*u1^2*u2^5 - k2*u1^3*u2^4 - k1*u2^4*u3^3 + 3*k1*u2^5*u3^2 - k2*u1^3*u3^4 + k2*u2^3*u3^4 - 4*k2*u2^4*u3^3 + 6*k2*u2^5*u3^2 - k1*u2^3*vL^4 + k2*u1^3*vL^4 + k1*u3^3*vL^4 - k2*u2^3*vL^4 - k1*u2^3*wL^4 + k2*u1^3*wL^4 + k1*u3^3*wL^4 - k2*u2^3*wL^4 + 3*L1*k1*u2^6 + 3*L1*k2*u2^6 - 3*L2*k1*u2^6 - 3*L2*k2*u2^6 + 3*L1^2*k1*u2^5 + L1^3*k1*u2^4 - L2^3*k1*u1^4 + 3*L1^2*k2*u2^5 + L1^3*k2*u2^4 + 3*L2^2*k1*u2^5 - L2^3*k1*u2^4 + L1^3*k2*u3^4 + 3*L2^2*k2*u2^5 - L2^3*k2*u2^4 - L1^3*k2*vL^4 + L2^3*k1*vL^4 - L1^3*k2*wL^4 + L2^3*k1*wL^4 - 4*k1*u1*u2^6 - 3*k2*u1*u2^6 - 3*k1*u2^6*u3 - 4*k2*u2^6*u3 + 3*L1^2*k1*u1^2*u2^3 - 3*L1^2*k1*u1^2*u3^3 + 18*L2^2*k1*u1^2*u2^3 - 12*L2^2*k1*u1^3*u2^2 - 6*L2^3*k1*u1^2*u2^2 - 3*L1^2*k1*u2^2*u3^3 + 9*L1^2*k1*u2^3*u3^2 + 3*L1^3*k1*u2^2*u3^2 + 9*L2^2*k2*u1^2*u2^3 - 3*L2^2*k2*u1^3*u2^2 - 3*L2^3*k2*u1^2*u2^2 - 12*L1^2*k2*u2^2*u3^3 + 18*L1^2*k2*u2^3*u3^2 + 6*L1^3*k2*u2^2*u3^2 - 3*L2^2*k2*u1^3*u3^2 + 3*L2^2*k2*u2^3*u3^2 + L1^2*k1*u2^3*vL^2 - L1^2*k1*u3^3*vL^2 - L2^2*k2*u1^3*vL^2 + L2^2*k2*u2^3*vL^2 + L1^2*k1*u2^3*wL^2 - L1^2*k1*u3^3*wL^2 - L2^2*k2*u1^3*wL^2 + L2^2*k2*u2^3*wL^2 + 3*L1*L2^3*k1*u1^3 + L1^3*L2^3*k1*u1 + 9*L1*L2^2*k1*u2^4 - 3*L1*L2^3*k1*u2^3 - 9*L1^2*L2*k1*u2^4 - 3*L1^3*L2*k1*u2^3 - L1^3*L2^3*k1*u2 + 9*L1*L2^2*k2*u2^4 - 3*L1*L2^3*k2*u2^3 - 9*L1^2*L2*k2*u2^4 - 3*L1^3*L2*k2*u2^3 - L1^3*L2^3*k2*u2 + 3*L1^3*L2*k2*u3^3 + L1^3*L2^3*k2*u3 - 2*L1^3*k2*vL^2*wL^2 + 2*L2^3*k1*vL^2*wL^2 + 4*k1*u1*u2^3*u3^3 - 12*k1*u1*u2^4*u3^2 - 18*k1*u1^2*u2^4*u3 + 4*k1*u1^3*u2*u3^3 + 12*k1*u1^3*u2^3*u3 + 3*k1*u1^4*u2*u3^2 - 3*k1*u1^4*u2^2*u3 - 3*k2*u1*u2^2*u3^4 + 12*k2*u1*u2^3*u3^3 - 18*k2*u1*u2^4*u3^2 + 3*k2*u1^2*u2*u3^4 - 12*k2*u1^2*u2^4*u3 + 4*k2*u1^3*u2*u3^3 + 4*k2*u1^3*u2^3*u3 + 3*k2*u1*u2^2*vL^4 - 3*k2*u1^2*u2*vL^4 - 3*k1*u2*u3^2*vL^4 + 3*k1*u2^2*u3*vL^4 + 3*k2*u1*u2^2*wL^4 - 3*k2*u1^2*u2*wL^4 - 3*k1*u2*u3^2*wL^4 + 3*k1*u2^2*u3*wL^4 - 9*L1*k1*u1*u2^5 - 6*L1*k2*u1*u2^5 + 12*L2*k1*u1*u2^5 - 9*L1*k1*u2^5*u3 + 9*L2*k2*u1*u2^5 - 12*L1*k2*u2^5*u3 + 6*L2*k1*u2^5*u3 + 9*L2*k2*u2^5*u3 - 3*L1^2*L2^3*k1*u1^2 + 9*L1^2*L2^2*k1*u2^3 - 3*L1^2*L2^3*k1*u2^2 + 3*L1^3*L2^2*k1*u2^2 + 9*L1^2*L2^2*k2*u2^3 - 3*L1^2*L2^3*k2*u2^2 + 3*L1^3*L2^2*k2*u2^2 + 3*L1^3*L2^2*k2*u3^2 - L1^2*L2^3*k1*vL^2 + L1^3*L2^2*k2*vL^2 - L1^2*L2^3*k1*wL^2 + L1^3*L2^2*k2*wL^2 - 6*k1*u1^2*u2^2*u3^3 + 18*k1*u1^2*u2^3*u3^2 - 12*k1*u1^3*u2^2*u3^2 - 12*k2*u1^2*u2^2*u3^3 + 18*k2*u1^2*u2^3*u3^2 - 6*k2*u1^3*u2^2*u3^2 + 9*L1*k1*u1^2*u2^4 - 3*L1*k1*u1^3*u2^3 - 6*L1^2*k1*u1*u2^4 - L1^3*k1*u1*u2^3 + 3*L1*k1*u1^3*u3^3 + 3*L1*k2*u1^2*u2^4 - 18*L2*k1*u1^2*u2^4 + 12*L2*k1*u1^3*u2^3 - 3*L2*k1*u1^4*u2^2 - 3*L1^2*k2*u1*u2^4 + L1^3*k1*u1*u3^3 - 12*L2^2*k1*u1*u2^4 + 3*L2^2*k1*u1^4*u2 + 4*L2^3*k1*u1*u2^3 + 4*L2^3*k1*u1^3*u2 - 3*L1*k1*u2^3*u3^3 + 9*L1*k1*u2^4*u3^2 + 3*L1*k2*u1^2*u3^4 - 3*L2*k1*u1^4*u3^2 - 9*L2*k2*u1^2*u2^4 + 3*L2*k2*u1^3*u2^3 - 9*L1^2*k1*u2^4*u3 - 3*L1^2*k2*u1*u3^4 - L1^3*k1*u2*u3^3 - 3*L1^3*k1*u2^3*u3 - 3*L2^2*k1*u1^4*u3 - 9*L2^2*k2*u1*u2^4 + 3*L2^3*k2*u1*u2^3 + L2^3*k2*u1^3*u2 + 3*L1*k2*u2^2*u3^4 - 12*L1*k2*u2^3*u3^3 + 18*L1*k2*u2^4*u3^2 - 3*L2*k1*u2^4*u3^2 - 3*L2*k2*u1^3*u3^3 + 3*L1^2*k2*u2*u3^4 - 12*L1^2*k2*u2^4*u3 - 4*L1^3*k2*u2*u3^3 - 4*L1^3*k2*u2^3*u3 - 3*L2^2*k1*u2^4*u3 - L2^3*k2*u1^3*u3 + 3*L2*k2*u2^3*u3^3 - 9*L2*k2*u2^4*u3^2 - 6*L2^2*k2*u2^4*u3 + L2^3*k2*u2^3*u3 - 2*k1*u2^3*vL^2*wL^2 + 2*k2*u1^3*vL^2*wL^2 + 2*k1*u3^3*vL^2*wL^2 - 2*k2*u2^3*vL^2*wL^2 + L1*k1*u2^4*vL^2 - 3*L1*k2*u1^2*vL^4 + 3*L1^2*k2*u1*vL^4 - 3*L1*k2*u2^2*vL^4 + 3*L2*k1*u2^2*vL^4 - 3*L1^2*k2*u2*vL^4 - 3*L2^2*k1*u2*vL^4 + 3*L2*k1*u3^2*vL^4 - L2*k2*u2^4*vL^2 + 3*L2^2*k1*u3*vL^4 + L1*k1*u2^4*wL^2 - 3*L1*k2*u1^2*wL^4 + 3*L1^2*k2*u1*wL^4 - 3*L1*k2*u2^2*wL^4 + 3*L2*k1*u2^2*wL^4 - 3*L1^2*k2*u2*wL^4 - 3*L2^2*k1*u2*wL^4 + 3*L2*k1*u3^2*wL^4 - L2*k2*u2^4*wL^2 + 3*L2^2*k1*u3*wL^4 - 9*L1*L2*k1*u2^5 - 9*L1*L2*k2*u2^5 + 12*k1*u1*u2^5*u3 + 12*k2*u1*u2^5*u3 + 27*L1*k1*u1*u2^4*u3 - 6*L1*k2*u1*u2*u3^4 + 24*L1*k2*u1*u2^4*u3 - 24*L2*k1*u1*u2^4*u3 + 6*L2*k1*u1^4*u2*u3 - 27*L2*k2*u1*u2^4*u3 + 6*L1*k2*u1*u2*vL^4 - 6*L2*k1*u2*u3*vL^4 + 6*L1*k2*u1*u2*wL^4 - 6*L2*k1*u2*u3*wL^4 + 27*L1*L2^2*k1*u1^2*u2^2 - 9*L1^2*L2*k1*u1^2*u2^2 - 18*L1^2*L2^2*k1*u1*u2^2 + 9*L1^2*L2^2*k1*u1^2*u2 + 9*L1*L2^2*k2*u1^2*u2^2 - 9*L1^2*L2*k1*u1^2*u3^2 - 9*L1^2*L2^2*k1*u1^2*u3 - 9*L1^2*L2^2*k2*u1*u2^2 + 9*L1*L2^2*k2*u1^2*u3^2 - 9*L1^2*L2*k1*u2^2*u3^2 - 9*L1^2*L2^2*k1*u2^2*u3 - 9*L1^2*L2^2*k2*u1*u3^2 + 9*L1*L2^2*k2*u2^2*u3^2 - 27*L1^2*L2*k2*u2^2*u3^2 + 9*L1^2*L2^2*k2*u2*u3^2 - 18*L1^2*L2^2*k2*u2^2*u3 + 3*L1*L2^2*k1*u2^2*vL^2 + 3*L1*L2^2*k2*u1^2*vL^2 - 3*L1^2*L2*k1*u2^2*vL^2 + 3*L1^2*L2^2*k1*u2*vL^2 - 3*L1^2*L2^2*k2*u1*vL^2 + 3*L1*L2^2*k2*u2^2*vL^2 - 3*L1^2*L2*k1*u3^2*vL^2 - 3*L1^2*L2*k2*u2^2*vL^2 - 3*L1^2*L2^2*k1*u3*vL^2 + 3*L1^2*L2^2*k2*u2*vL^2 + 3*L1*L2^2*k1*u2^2*wL^2 + 3*L1*L2^2*k2*u1^2*wL^2 - 3*L1^2*L2*k1*u2^2*wL^2 + 3*L1^2*L2^2*k1*u2*wL^2 - 3*L1^2*L2^2*k2*u1*wL^2 + 3*L1*L2^2*k2*u2^2*wL^2 - 3*L1^2*L2*k1*u3^2*wL^2 - 3*L1^2*L2*k2*u2^2*wL^2 - 3*L1^2*L2^2*k1*u3*wL^2 + 3*L1^2*L2^2*k2*u2*wL^2 + 9*L1*k1*u1*u2^2*u3^3 - 27*L1*k1*u1*u2^3*u3^2 - 9*L1*k1*u1^2*u2*u3^3 - 27*L1*k1*u1^2*u2^3*u3 - 9*L1*k1*u1^3*u2*u3^2 + 9*L1*k1*u1^3*u2^2*u3 + 6*L1^2*k1*u1*u2*u3^3 + 18*L1^2*k1*u1*u2^3*u3 - 3*L1^3*k1*u1*u2*u3^2 + 3*L1^3*k1*u1*u2^2*u3 + 24*L1*k2*u1*u2^2*u3^3 - 36*L1*k2*u1*u2^3*u3^2 - 12*L1*k2*u1^2*u2*u3^3 - 12*L1*k2*u1^2*u2^3*u3 + 12*L2*k1*u1*u2^3*u3^2 + 36*L2*k1*u1^2*u2^3*u3 + 12*L2*k1*u1^3*u2*u3^2 - 24*L2*k1*u1^3*u2^2*u3 + 12*L1^2*k2*u1*u2*u3^3 + 12*L1^2*k2*u1*u2^3*u3 + 12*L2^2*k1*u1*u2^3*u3 + 12*L2^2*k1*u1^3*u2*u3 - 9*L2*k2*u1*u2^2*u3^3 + 27*L2*k2*u1*u2^3*u3^2 + 9*L2*k2*u1^2*u2*u3^3 + 27*L2*k2*u1^2*u2^3*u3 + 9*L2*k2*u1^3*u2*u3^2 - 9*L2*k2*u1^3*u2^2*u3 + 18*L2^2*k2*u1*u2^3*u3 + 6*L2^2*k2*u1^3*u2*u3 - 3*L2^3*k2*u1*u2^2*u3 + 3*L2^3*k2*u1^2*u2*u3 + 6*k2*u1*u2^2*vL^2*wL^2 - 6*k2*u1^2*u2*vL^2*wL^2 - 6*k1*u2*u3^2*vL^2*wL^2 + 6*k1*u2^2*u3*vL^2*wL^2 - L1*k1*u1*u2^3*vL^2 + L1*k1*u1*u3^3*vL^2 - L1*k1*u2*u3^3*vL^2 - 3*L1*k1*u2^3*u3*vL^2 + 3*L2*k2*u1*u2^3*vL^2 + L2*k2*u1^3*u2*vL^2 - L2*k2*u1^3*u3*vL^2 + L2*k2*u2^3*u3*vL^2 - L1*k1*u1*u2^3*wL^2 + L1*k1*u1*u3^3*wL^2 - L1*k1*u2*u3^3*wL^2 - 3*L1*k1*u2^3*u3*wL^2 + 3*L2*k2*u1*u2^3*wL^2 + L2*k2*u1^3*u2*wL^2 - L2*k2*u1^3*u3*wL^2 + L2*k2*u2^3*u3*wL^2 + 27*L1*L2*k1*u1*u2^4 + 18*L1*L2*k2*u1*u2^4 + 18*L1*L2*k1*u2^4*u3 + 27*L1*L2*k2*u2^4*u3 + 27*L1*k1*u1^2*u2^2*u3^2 - 18*L1^2*k1*u1*u2^2*u3^2 + 9*L1^2*k1*u1^2*u2*u3^2 - 9*L1^2*k1*u1^2*u2^2*u3 + 18*L1*k2*u1^2*u2^2*u3^2 - 18*L2*k1*u1^2*u2^2*u3^2 - 18*L1^2*k2*u1*u2^2*u3^2 - 18*L2^2*k1*u1^2*u2^2*u3 - 27*L2*k2*u1^2*u2^2*u3^2 - 9*L2^2*k2*u1*u2^2*u3^2 + 9*L2^2*k2*u1^2*u2*u3^2 - 18*L2^2*k2*u1^2*u2^2*u3 + 3*L1*k1*u2^2*u3^2*vL^2 - 3*L2*k2*u1^2*u2^2*vL^2 + 3*L1^2*k1*u2*u3^2*vL^2 - 3*L1^2*k1*u2^2*u3*vL^2 - 3*L2^2*k2*u1*u2^2*vL^2 + 3*L2^2*k2*u1^2*u2*vL^2 + 3*L1*k1*u2^2*u3^2*wL^2 - 3*L2*k2*u1^2*u2^2*wL^2 + 3*L1^2*k1*u2*u3^2*wL^2 - 3*L1^2*k1*u2^2*u3*wL^2 - 3*L2^2*k2*u1*u2^2*wL^2 + 3*L2^2*k2*u1^2*u2*wL^2 - 27*L1*L2*k1*u1^2*u2^3 + 9*L1*L2*k1*u1^3*u2^2 - 27*L1*L2^2*k1*u1*u2^3 - 9*L1*L2^2*k1*u1^3*u2 + 9*L1*L2^3*k1*u1*u2^2 - 9*L1*L2^3*k1*u1^2*u2 + 18*L1^2*L2*k1*u1*u2^3 + 6*L1^2*L2^3*k1*u1*u2 + 3*L1^3*L2*k1*u1*u2^2 - 3*L1^3*L2^2*k1*u1*u2 + 9*L1*L2*k1*u1^3*u3^2 - 9*L1*L2*k2*u1^2*u2^3 + 9*L1*L2^2*k1*u1^3*u3 - 18*L1*L2^2*k2*u1*u2^3 + 6*L1*L2^3*k2*u1*u2^2 - 3*L1*L2^3*k2*u1^2*u2 + 9*L1^2*L2*k2*u1*u2^3 + 3*L1^2*L2^3*k2*u1*u2 + 3*L1^3*L2*k1*u1*u3^2 + 3*L1^3*L2^2*k1*u1*u3 - 9*L1*L2*k1*u2^3*u3^2 + 9*L1*L2*k2*u1^2*u3^3 - 9*L1*L2^2*k1*u2^3*u3 + 3*L1*L2^3*k2*u1^2*u3 + 18*L1^2*L2*k1*u2^3*u3 - 9*L1^2*L2*k2*u1*u3^3 - 3*L1^2*L2^3*k2*u1*u3 - 3*L1^3*L2*k1*u2*u3^2 + 6*L1^3*L2*k1*u2^2*u3 - 3*L1^3*L2^2*k1*u2*u3 + 9*L1*L2*k2*u2^2*u3^3 - 27*L1*L2*k2*u2^3*u3^2 - 18*L1*L2^2*k2*u2^3*u3 + 3*L1*L2^3*k2*u2^2*u3 + 9*L1^2*L2*k2*u2*u3^3 + 27*L1^2*L2*k2*u2^3*u3 + 3*L1^2*L2^3*k2*u2*u3 - 9*L1^3*L2*k2*u2*u3^2 + 9*L1^3*L2*k2*u2^2*u3 - 6*L1^3*L2^2*k2*u2*u3 - 6*L1*k2*u1^2*vL^2*wL^2 + 6*L1^2*k2*u1*vL^2*wL^2 - 6*L1*k2*u2^2*vL^2*wL^2 + 6*L2*k1*u2^2*vL^2*wL^2 - 6*L1^2*k2*u2*vL^2*wL^2 - 6*L2^2*k1*u2*vL^2*wL^2 + 6*L2*k1*u3^2*vL^2*wL^2 + 6*L2^2*k1*u3*vL^2*wL^2 + L1*L2^3*k1*u1*vL^2 - 3*L1*L2*k1*u2^3*vL^2 - L1*L2^3*k1*u2*vL^2 - 3*L1*L2*k2*u2^3*vL^2 - L1^3*L2*k2*u2*vL^2 + L1^3*L2*k2*u3*vL^2 + L1*L2^3*k1*u1*wL^2 - 3*L1*L2*k1*u2^3*wL^2 - L1*L2^3*k1*u2*wL^2 - 3*L1*L2*k2*u2^3*wL^2 - L1^3*L2*k2*u2*wL^2 + L1^3*L2*k2*u3*wL^2 - 3*L1*k1*u1*u2*u3^2*vL^2 + 3*L1*k1*u1*u2^2*u3*vL^2 - 3*L2*k2*u1*u2^2*u3*vL^2 + 3*L2*k2*u1^2*u2*u3*vL^2 - 3*L1*k1*u1*u2*u3^2*wL^2 + 3*L1*k1*u1*u2^2*u3*wL^2 - 3*L2*k2*u1*u2^2*u3*wL^2 + 3*L2*k2*u1^2*u2*u3*wL^2 - 54*L1*L2*k1*u1*u2^3*u3 - 18*L1*L2*k1*u1^3*u2*u3 - 6*L1^3*L2*k1*u1*u2*u3 - 18*L1*L2*k2*u1*u2*u3^3 - 54*L1*L2*k2*u1*u2^3*u3 - 6*L1*L2^3*k2*u1*u2*u3 + 12*L1*k2*u1*u2*vL^2*wL^2 - 12*L2*k1*u2*u3*vL^2*wL^2 + 27*L1*L2*k1*u1*u2^2*u3^2 - 27*L1*L2*k1*u1^2*u2*u3^2 + 54*L1*L2*k1*u1^2*u2^2*u3 + 27*L1*L2^2*k1*u1*u2^2*u3 - 27*L1*L2^2*k1*u1^2*u2*u3 + 18*L1^2*L2*k1*u1*u2*u3^2 - 36*L1^2*L2*k1*u1*u2^2*u3 + 18*L1^2*L2*k1*u1^2*u2*u3 + 18*L1^2*L2^2*k1*u1*u2*u3 + 54*L1*L2*k2*u1*u2^2*u3^2 - 27*L1*L2*k2*u1^2*u2*u3^2 + 27*L1*L2*k2*u1^2*u2^2*u3 - 18*L1*L2^2*k2*u1*u2*u3^2 + 36*L1*L2^2*k2*u1*u2^2*u3 - 18*L1*L2^2*k2*u1^2*u2*u3 + 27*L1^2*L2*k2*u1*u2*u3^2 - 27*L1^2*L2*k2*u1*u2^2*u3 + 18*L1^2*L2^2*k2*u1*u2*u3 + 3*L1*L2*k1*u1*u2^2*vL^2 - 3*L1*L2^2*k1*u1*u2*vL^2 + 3*L1*L2*k1*u1*u3^2*vL^2 + 6*L1*L2*k2*u1*u2^2*vL^2 - 3*L1*L2*k2*u1^2*u2*vL^2 + 3*L1*L2^2*k1*u1*u3*vL^2 - 6*L1*L2^2*k2*u1*u2*vL^2 + 3*L1^2*L2*k2*u1*u2*vL^2 - 3*L1*L2*k1*u2*u3^2*vL^2 + 6*L1*L2*k1*u2^2*u3*vL^2 + 3*L1*L2*k2*u1^2*u3*vL^2 - 3*L1*L2^2*k1*u2*u3*vL^2 + 6*L1^2*L2*k1*u2*u3*vL^2 - 3*L1^2*L2*k2*u1*u3*vL^2 + 3*L1*L2*k2*u2^2*u3*vL^2 + 3*L1^2*L2*k2*u2*u3*vL^2 + 3*L1*L2*k1*u1*u2^2*wL^2 - 3*L1*L2^2*k1*u1*u2*wL^2 + 3*L1*L2*k1*u1*u3^2*wL^2 + 6*L1*L2*k2*u1*u2^2*wL^2 - 3*L1*L2*k2*u1^2*u2*wL^2 + 3*L1*L2^2*k1*u1*u3*wL^2 - 6*L1*L2^2*k2*u1*u2*wL^2 + 3*L1^2*L2*k2*u1*u2*wL^2 - 3*L1*L2*k1*u2*u3^2*wL^2 + 6*L1*L2*k1*u2^2*u3*wL^2 + 3*L1*L2*k2*u1^2*u3*wL^2 - 3*L1*L2^2*k1*u2*u3*wL^2 + 6*L1^2*L2*k1*u2*u3*wL^2 - 3*L1^2*L2*k2*u1*u3*wL^2 + 3*L1*L2*k2*u2^2*u3*wL^2 + 3*L1^2*L2*k2*u2*u3*wL^2 - 6*L1*L2*k1*u1*u2*u3*vL^2 - 6*L1*L2*k2*u1*u2*u3*vL^2 - 6*L1*L2*k1*u1*u2*u3*wL^2 - 6*L1*L2*k2*u1*u2*u3*wL^2))/(Mb2*(L1 - u1 + u2)^3*(L2 - u2 + u3)^4);
    -(dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^4*wpL - 2*Ib2*Mb2*k2*u2^4*vpL - 2*Ib2*L2^2*Mb2*k1*u1^2*vpL - 2*Ib2*L1^2*Mb2*k2*u2^2*vpL - 2*Ib2*L2^2*Mb2*k1*u2^2*vpL - 2*Ib2*L1^2*Mb2*k2*u3^2*vpL - 6*Ib2*L1^2*Mb2*k2*vL^2*vpL - 6*Ib2*L2^2*Mb2*k1*vL^2*vpL - 2*Ib2*L1^2*Mb2*k2*wL^2*vpL - 2*Ib2*L2^2*Mb2*k1*wL^2*vpL - 2*Ib2*Mb2*k1*u2^4*vpL + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^4*wpL + 2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^3*up1 - 4*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^3*up2 + 2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^3*up3 + 4*Ib2*Mb2*k1*u1*u2^3*vpL + 4*Ib2*Mb2*k1*u2^3*vL*up1 - 4*Ib2*Mb2*k2*u1*vL^3*up1 - 4*Ib2*Mb2*k1*u2*vL^3*up2 - 8*Ib2*Mb2*k1*u2^3*vL*up2 + 4*Ib2*Mb2*k2*u1*u2^3*vpL + 4*Ib2*Mb2*k2*u1*vL^3*up2 + 4*Ib2*Mb2*k2*u2*vL^3*up1 + 4*Ib2*Mb2*k2*u2^3*vL*up1 + 4*Ib2*Mb2*k1*u2*vL^3*up3 + 4*Ib2*Mb2*k1*u3*vL^3*up2 + 4*Ib2*Mb2*k1*u2^3*u3*vpL + 4*Ib2*Mb2*k1*u2^3*vL*up3 - 4*Ib2*Mb2*k2*u2*vL^3*up2 - 8*Ib2*Mb2*k2*u2^3*vL*up2 - 4*Ib2*Mb2*k1*u3*vL^3*up3 + 4*Ib2*Mb2*k2*u2^3*u3*vpL + 4*Ib2*Mb2*k2*u2^3*vL*up3 + dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^4*tetap2 - 2*Ib2*Mb2*k1*u1^2*u2^2*vpL - 2*Ib2*Mb2*k1*u1^2*u3^2*vpL - 2*Ib2*Mb2*k2*u1^2*u2^2*vpL - 2*Ib2*Mb2*k1*u2^2*u3^2*vpL - 2*Ib2*Mb2*k2*u1^2*u3^2*vpL - 2*Ib2*Mb2*k2*u2^2*u3^2*vpL - 6*Ib2*Mb2*k1*u2^2*vL^2*vpL - 6*Ib2*Mb2*k2*u1^2*vL^2*vpL - 6*Ib2*Mb2*k1*u3^2*vL^2*vpL - 6*Ib2*Mb2*k2*u2^2*vL^2*vpL - 2*Ib2*Mb2*k1*u2^2*wL^2*vpL - 2*Ib2*Mb2*k2*u1^2*wL^2*vpL - 2*Ib2*Mb2*k1*u3^2*wL^2*vpL - 2*Ib2*Mb2*k2*u2^2*wL^2*vpL - 2*Ib2*L1*Mb2*k1*u2^3*vpL + 4*Ib2*L1*Mb2*k2*vL^3*up1 - 4*Ib2*L1*Mb2*k2*u2^3*vpL - 4*Ib2*L1*Mb2*k2*vL^3*up2 + 4*Ib2*L2*Mb2*k1*u2^3*vpL + 4*Ib2*L2*Mb2*k1*vL^3*up2 - 4*Ib2*L2*Mb2*k1*vL^3*up3 + 2*Ib2*L2*Mb2*k2*u2^3*vpL + 2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^4*vpL + 2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^4*vpL - 2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2*u2^4*tetapp2 + 2*Ib2*L1*L2^2*Mb2*k1*u1*vpL + 2*Ib2*L1*L2^2*Mb2*k1*vL*up1 + 4*Ib2*L1*L2*Mb2*k1*u2^2*vpL - 2*Ib2*L1*L2^2*Mb2*k1*u2*vpL - 2*Ib2*L1*L2^2*Mb2*k1*vL*up2 + 4*Ib2*L1*L2*Mb2*k2*u2^2*vpL + 2*Ib2*L1^2*L2*Mb2*k2*u2*vpL + 2*Ib2*L1^2*L2*Mb2*k2*vL*up2 - 2*Ib2*L1^2*L2*Mb2*k2*u3*vpL - 2*Ib2*L1^2*L2*Mb2*k2*vL*up3 + L1^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^2*tetap2 + L2^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1^2*tetap2 + L1^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u3^2*tetap2 + L2^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^2*tetap2 + 2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1^2*u2^2*vpL + 2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1^2*u3^2*vpL + 2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1^2*u2^2*vpL + 2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^2*u3^2*vpL + 2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1^2*u3^2*vpL + 2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^2*u3^2*vpL + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^4*wL*tetap2 + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^4*wL*tetap2 + 6*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^2*vL^2*vpL + 6*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1^2*vL^2*vpL + 6*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u3^2*vL^2*vpL + 6*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^2*vL^2*vpL + 2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^2*wL^2*vpL + 2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1^2*wL^2*vpL + 2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u3^2*wL^2*vpL + 2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^2*wL^2*vpL + 2*L1*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^3*vpL - 4*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*vL^3*up1 + 4*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^3*vpL + 4*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*vL^3*up2 - 4*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^3*vpL - 4*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*vL^3*up2 + 4*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*vL^3*up3 - 2*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^3*vpL - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^4*vL*tetap2 - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^4*vL*tetap2 - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^3*wpL - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*wL*up1 + 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*wL^3*up1 + 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*wL^3*up2 + 4*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*wL*up2 - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^3*wpL - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*wL^3*up2 - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*wL^3*up1 - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*wL*up1 - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*wL^3*up3 - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3*wL^3*up2 - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*u3*wpL - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*wL*up3 + 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*wL^3*up2 + 4*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*wL*up2 + 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3*wL^3*up3 - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*u3*wpL - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*wL*up3 - 2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2*u1^2*u2^2*tetapp2 - 2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2*u1^2*u3^2*tetapp2 - 2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2*u2^2*u3^2*tetapp2 - 2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u2^2*up1 + 6*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u2^2*up2 - 2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u3^2*up1 - 2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1^2*u2*up2 - 4*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u2^2*up3 + 2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u3^2*up2 + 2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2*u3^2*up1 + 2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1^2*u2*up3 + 2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1^2*u3*up2 - 4*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^2*u3*up1 - 2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2*u3^2*up2 - 2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1^2*u3*up3 + 6*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^2*u3*up2 - 2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^2*u3*up3 - 4*L1*dm^3*l2^3*cos(alfam2 + teta2)*tetap2*u2^3*tetapp2 + 4*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2*u2^3*tetapp2 - 4*Ib2*Mb2*k1*u1*u2^2*vL*up1 + 12*Ib2*Mb2*k1*u1*u2^2*vL*up2 - 4*Ib2*Mb2*k1*u1*u3^2*vL*up1 - 4*Ib2*Mb2*k1*u1^2*u2*vL*up2 - 4*Ib2*Mb2*k2*u1*u2^2*vL*up1 + 4*Ib2*Mb2*k1*u1*u2*u3^2*vpL - 8*Ib2*Mb2*k1*u1*u2^2*u3*vpL - 8*Ib2*Mb2*k1*u1*u2^2*vL*up3 + 4*Ib2*Mb2*k1*u1*u3^2*vL*up2 + 4*Ib2*Mb2*k1*u2*u3^2*vL*up1 + 4*Ib2*Mb2*k1*u1^2*u2*u3*vpL + 4*Ib2*Mb2*k1*u1^2*u2*vL*up3 + 4*Ib2*Mb2*k1*u1^2*u3*vL*up2 - 8*Ib2*Mb2*k1*u2^2*u3*vL*up1 + 12*Ib2*Mb2*k2*u1*u2^2*vL*up2 - 4*Ib2*Mb2*k2*u1*u3^2*vL*up1 - 4*Ib2*Mb2*k2*u1^2*u2*vL*up2 - 4*Ib2*Mb2*k1*u2*u3^2*vL*up2 - 4*Ib2*Mb2*k1*u1^2*u3*vL*up3 + 12*Ib2*Mb2*k1*u2^2*u3*vL*up2 + 4*Ib2*Mb2*k2*u1*u2*u3^2*vpL - 8*Ib2*Mb2*k2*u1*u2^2*u3*vpL - 8*Ib2*Mb2*k2*u1*u2^2*vL*up3 + 4*Ib2*Mb2*k2*u1*u3^2*vL*up2 + 4*Ib2*Mb2*k2*u2*u3^2*vL*up1 + 4*Ib2*Mb2*k2*u1^2*u2*u3*vpL + 4*Ib2*Mb2*k2*u1^2*u2*vL*up3 + 4*Ib2*Mb2*k2*u1^2*u3*vL*up2 - 8*Ib2*Mb2*k2*u2^2*u3*vL*up1 - 4*Ib2*Mb2*k1*u2^2*u3*vL*up3 - 4*Ib2*Mb2*k2*u2*u3^2*vL*up2 - 4*Ib2*Mb2*k2*u1^2*u3*vL*up3 + 12*Ib2*Mb2*k2*u2^2*u3*vL*up2 - 4*Ib2*Mb2*k2*u2^2*u3*vL*up3 + 12*Ib2*Mb2*k2*u1*u2*vL^2*vpL + 12*Ib2*Mb2*k1*u2*u3*vL^2*vpL - 4*Ib2*Mb2*k2*u1*vL*wL^2*up1 - 4*Ib2*Mb2*k1*u2*vL*wL^2*up2 + 4*Ib2*Mb2*k2*u1*u2*wL^2*vpL + 4*Ib2*Mb2*k2*u1*vL*wL^2*up2 + 4*Ib2*Mb2*k2*u2*vL*wL^2*up1 + 4*Ib2*Mb2*k1*u2*u3*wL^2*vpL + 4*Ib2*Mb2*k1*u2*vL*wL^2*up3 + 4*Ib2*Mb2*k1*u3*vL*wL^2*up2 - 4*Ib2*Mb2*k2*u2*vL*wL^2*up2 - 4*Ib2*Mb2*k1*u3*vL*wL^2*up3 - 4*Ib2*Mb2*k1*u2^2*vL*wL*wpL - 4*Ib2*Mb2*k2*u1^2*vL*wL*wpL - 4*Ib2*Mb2*k1*u3^2*vL*wL*wpL - 4*Ib2*Mb2*k2*u2^2*vL*wL*wpL - 2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u2^3*tetap2 - 2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^3*u3*tetap2 + L1^2*L2^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*tetap2 + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*wL^3*tetap2 + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*wL^3*tetap2 + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u3^2*wL^3*tetap2 + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*wL^3*tetap2 + 2*L2^2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1^2*vpL + 2*L1^2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^2*vpL + 2*L2^2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^2*vpL + 2*L1^2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u3^2*vpL + 6*L1^2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*vL^2*vpL + 6*L2^2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*vL^2*vpL + 2*L1^2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*wL^2*vpL + 2*L2^2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*wL^2*vpL - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL^3*tetap2 - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*vL^3*tetap2 - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3^2*vL^3*tetap2 - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL^3*tetap2 + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2^2*wpL + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3^2*wpL + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2^2*wpL + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3^2*wpL + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3^2*wpL + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3^2*wpL + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL^2*wpL + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*vL^2*wpL + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3^2*vL^2*wpL + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL^2*wpL + 3*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*wL^2*wpL + 3*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*wL^2*wpL + 3*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3^2*wL^2*wpL + 3*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*wL^2*wpL + L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*wpL - 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*wL^3*up1 + 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*wpL + 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*wL^3*up2 - 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*wpL - 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*wL^3*up2 + 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*wL^3*up3 - L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*wpL - 2*L1^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2*u2^2*tetapp2 - 2*L2^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2*u1^2*tetapp2 - 2*L1^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2*u3^2*tetapp2 - 2*L2^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2*u2^2*tetapp2 + 2*L1*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^2*up1 - 2*L2^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*up1 - 6*L1*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^2*up2 + 2*L1*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u3^2*up1 + 2*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1^2*up2 - 4*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^2*up1 - 2*L1^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2*up2 + 2*L2^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*up2 + 2*L2^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2*up1 + 4*L1*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^2*up3 - 2*L1*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u3^2*up2 - 2*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1^2*up3 + 6*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^2*up2 + 2*L1^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2*up3 + 2*L1^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u3*up2 - 2*L2^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2*up2 - 2*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^2*up3 - 2*L1^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u3*up3 + 2*Ib2*L1*Mb2*k1*u1*u2^2*vpL + 2*Ib2*L1*Mb2*k1*u2^2*vL*up1 - 4*Ib2*L2^2*Mb2*k1*u1*vL*up1 + 2*Ib2*L1*Mb2*k1*u1*u3^2*vpL - 6*Ib2*L1*Mb2*k1*u2^2*vL*up2 + 2*Ib2*L1*Mb2*k1*u3^2*vL*up1 + 4*Ib2*L1*Mb2*k2*u1*u2^2*vpL + 4*Ib2*L1*Mb2*k2*u2^2*vL*up1 - 8*Ib2*L2*Mb2*k1*u1*u2^2*vpL + 4*Ib2*L2*Mb2*k1*u1^2*u2*vpL + 4*Ib2*L2*Mb2*k1*u1^2*vL*up2 - 8*Ib2*L2*Mb2*k1*u2^2*vL*up1 + 4*Ib2*L2^2*Mb2*k1*u1*u2*vpL + 4*Ib2*L2^2*Mb2*k1*u1*vL*up2 + 4*Ib2*L2^2*Mb2*k1*u2*vL*up1 - 2*Ib2*L1*Mb2*k1*u2*u3^2*vpL + 4*Ib2*L1*Mb2*k1*u2^2*u3*vpL + 4*Ib2*L1*Mb2*k1*u2^2*vL*up3 - 2*Ib2*L1*Mb2*k1*u3^2*vL*up2 + 4*Ib2*L1*Mb2*k2*u1*u3^2*vpL - 12*Ib2*L1*Mb2*k2*u2^2*vL*up2 + 4*Ib2*L1*Mb2*k2*u3^2*vL*up1 - 4*Ib2*L2*Mb2*k1*u1^2*u3*vpL - 4*Ib2*L2*Mb2*k1*u1^2*vL*up3 + 12*Ib2*L2*Mb2*k1*u2^2*vL*up2 - 4*Ib2*L2*Mb2*k2*u1*u2^2*vpL + 2*Ib2*L2*Mb2*k2*u1^2*u2*vpL + 2*Ib2*L2*Mb2*k2*u1^2*vL*up2 - 4*Ib2*L2*Mb2*k2*u2^2*vL*up1 - 4*Ib2*L1^2*Mb2*k2*u2*vL*up2 - 4*Ib2*L2^2*Mb2*k1*u2*vL*up2 - 4*Ib2*L1*Mb2*k2*u2*u3^2*vpL + 8*Ib2*L1*Mb2*k2*u2^2*u3*vpL + 8*Ib2*L1*Mb2*k2*u2^2*vL*up3 - 4*Ib2*L1*Mb2*k2*u3^2*vL*up2 - 4*Ib2*L2*Mb2*k1*u2^2*u3*vpL - 4*Ib2*L2*Mb2*k1*u2^2*vL*up3 - 2*Ib2*L2*Mb2*k2*u1^2*u3*vpL - 2*Ib2*L2*Mb2*k2*u1^2*vL*up3 + 6*Ib2*L2*Mb2*k2*u2^2*vL*up2 + 4*Ib2*L1^2*Mb2*k2*u2*u3*vpL + 4*Ib2*L1^2*Mb2*k2*u2*vL*up3 + 4*Ib2*L1^2*Mb2*k2*u3*vL*up2 - 2*Ib2*L2*Mb2*k2*u2^2*u3*vpL - 2*Ib2*L2*Mb2*k2*u2^2*vL*up3 - 4*Ib2*L1^2*Mb2*k2*u3*vL*up3 + 12*Ib2*L1*Mb2*k2*u1*vL^2*vpL - 12*Ib2*L1*Mb2*k2*u2*vL^2*vpL + 12*Ib2*L2*Mb2*k1*u2*vL^2*vpL - 12*Ib2*L2*Mb2*k1*u3*vL^2*vpL + 4*Ib2*L1*Mb2*k2*u1*wL^2*vpL + 4*Ib2*L1*Mb2*k2*vL*wL^2*up1 - 4*Ib2*L1*Mb2*k2*u2*wL^2*vpL - 4*Ib2*L1*Mb2*k2*vL*wL^2*up2 + 4*Ib2*L2*Mb2*k1*u2*wL^2*vpL + 4*Ib2*L2*Mb2*k1*vL*wL^2*up2 - 4*Ib2*L2*Mb2*k1*u3*wL^2*vpL - 4*Ib2*L2*Mb2*k1*vL*wL^2*up3 + dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1^2*u2^2*tetap2 + dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1^2*u3^2*tetap2 + dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^2*u3^2*tetap2 - 4*Ib2*L1^2*Mb2*k2*vL*wL*wpL - 4*Ib2*L2^2*Mb2*k1*vL*wL*wpL + 2*L1*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^3*tetap2 - 2*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^3*tetap2 - 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u2^3*vpL - 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^3*vL*up1 + 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*vL^3*up1 + 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*vL^3*up2 + 8*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^3*vL*up2 - 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2^3*vpL - 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*vL^3*up2 - 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2*vL^3*up1 - 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^3*vL*up1 - 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*vL^3*up3 - 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u3*vL^3*up2 - 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^3*u3*vpL - 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^3*vL*up3 + 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2*vL^3*up2 + 8*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^3*vL*up2 + 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u3*vL^3*up3 - 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^3*u3*vpL - 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^3*vL*up3 + 4*dm^3*l2^3*cos(alfam2 + teta2)*tetap2*u1*u2^3*tetapp2 + 4*dm^3*l2^3*cos(alfam2 + teta2)*tetap2*u2^3*u3*tetapp2 + 2*L1^2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*wL^3*tetap2 + 2*L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*wL^3*tetap2 - 2*L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*vL^3*tetap2 - 2*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*vL^3*tetap2 + L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*wpL + L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*wpL + L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*wpL + L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u3^2*wpL + L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*vL^2*wpL + L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*vL^2*wpL + K1*Mb2*dm*l2*sin(alfam2 + teta2)*u2^4*tetap1 - K1*Mb2*dm*l2*sin(alfam2 + teta2)*u2^4*tetap2 - K2*Mb2*dm*l2*sin(alfam2 + teta2)*u2^4*tetap2 + K2*Mb2*dm*l2*sin(alfam2 + teta2)*u2^4*tetap3 + 3*L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*wL^2*wpL + 3*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*wL^2*wpL - 2*L1^2*L2^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2*tetapp2 + 2*L1*L2^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*up1 - 2*L1*L2^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*up2 + 2*L1^2*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*up2 - 2*L1^2*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*up3 - 4*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^3*wL*tetap2 - 4*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*wL^3*tetap2 - 4*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^3*wL*tetap2 - 4*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3*wL^3*tetap2 - 4*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^3*u3*wL*tetap2 - 4*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^3*u3*wL*tetap2 - 2*L1*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u2^2*vpL - 2*L1*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^2*vL*up1 + 4*L2^2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*vL*up1 - 2*L1*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u3^2*vpL + 6*L1*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^2*vL*up2 - 2*L1*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u3^2*vL*up1 - 4*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2^2*vpL - 4*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^2*vL*up1 + 8*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u2^2*vpL - 4*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1^2*u2*vpL - 4*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1^2*vL*up2 + 8*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^2*vL*up1 - 4*L2^2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u2*vpL - 4*L2^2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*vL*up2 - 4*L2^2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*vL*up1 + 2*L1*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*u3^2*vpL - 4*L1*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^2*u3*vpL - 4*L1*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^2*vL*up3 + 2*L1*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u3^2*vL*up2 - 4*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u3^2*vpL + 12*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^2*vL*up2 - 4*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u3^2*vL*up1 + 4*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1^2*u3*vpL + 4*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1^2*vL*up3 - 12*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^2*vL*up2 + 4*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2^2*vpL - 2*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1^2*u2*vpL - 2*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1^2*vL*up2 + 4*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^2*vL*up1 + 4*L1^2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2*vL*up2 + 4*L2^2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*vL*up2 + 4*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2*u3^2*vpL - 8*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^2*u3*vpL - 8*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^2*vL*up3 + 4*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u3^2*vL*up2 + 4*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^2*u3*vpL + 4*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^2*vL*up3 + 2*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1^2*u3*vpL + 2*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1^2*vL*up3 - 6*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^2*vL*up2 - 4*L1^2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2*u3*vpL - 4*L1^2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2*vL*up3 - 4*L1^2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u3*vL*up2 + 2*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^2*u3*vpL + 2*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^2*vL*up3 + 4*L1^2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u3*vL*up3 - 12*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*vL^2*vpL + 12*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2*vL^2*vpL - 12*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*vL^2*vpL + 12*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u3*vL^2*vpL - 4*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*wL^2*vpL - 4*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*vL*wL^2*up1 + 4*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2*wL^2*vpL + 4*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*vL*wL^2*up2 - 4*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*wL^2*vpL - 4*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*vL*wL^2*up2 + 4*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u3*wL^2*vpL + 4*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*vL*wL^2*up3 + 4*L1^2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*vL*wL*wpL + 4*L2^2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*vL*wL*wpL + 4*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^3*vL*tetap2 + 4*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*vL^3*tetap2 + 4*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^3*vL*tetap2 + 4*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*vL^3*tetap2 + 4*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*u3*vL*tetap2 + 4*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*u3*vL*tetap2 + 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*wL*up1 - 6*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*wL*up2 + 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3^2*wL*up1 + 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*wL*up2 + 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*wL*up1 - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3^2*wpL + 4*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*u3*wpL + 4*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*wL*up3 - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3^2*wL*up2 - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3^2*wL*up1 - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*u3*wpL - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*wL*up3 - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3*wL*up2 + 4*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*wL*up1 - 6*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*wL*up2 + 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3^2*wL*up1 + 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*wL*up2 + 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3^2*wL*up2 + 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3*wL*up3 - 6*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*wL*up2 - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3^2*wpL + 4*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*u3*wpL + 4*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*wL*up3 - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3^2*wL*up2 - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3^2*wL*up1 - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*u3*wpL - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*wL*up3 - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3*wL*up2 + 4*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*wL*up1 + 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*wL*up3 + 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3^2*wL*up2 + 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3*wL*up3 - 6*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*wL*up2 + 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*wL*up3 + 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*vL^2*wL*up1 + 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL^2*wL*up2 - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*vL^2*wpL - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*vL^2*wL*up2 - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL^2*wL*up1 - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*vL^2*wpL - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL^2*wL*up3 - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3*vL^2*wL*up2 + 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL^2*wL*up2 + 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3*vL^2*wL*up3 - 6*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*wL^2*wpL - 6*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*wL^2*wpL + 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL*wL*vpL + 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*vL*wL*vpL + 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3^2*vL*wL*vpL + 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL*wL*vpL + 4*L1*dm^3*l2^3*cos(alfam2 + teta2)*tetap2*u1*u2^2*tetapp2 + 4*L1*dm^3*l2^3*cos(alfam2 + teta2)*tetap2*u1*u3^2*tetapp2 - 8*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2*u1*u2^2*tetapp2 + 4*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2*u1^2*u2*tetapp2 + 4*L2^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2*u1*u2*tetapp2 - 4*L1*dm^3*l2^3*cos(alfam2 + teta2)*tetap2*u2*u3^2*tetapp2 + 8*L1*dm^3*l2^3*cos(alfam2 + teta2)*tetap2*u2^2*u3*tetapp2 - 4*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2*u1^2*u3*tetapp2 + 4*L1^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2*u2*u3*tetapp2 - 4*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2*u2^2*u3*tetapp2 + 4*L1*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u2*up2 + 4*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u2*up1 - 4*L1*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u2*up3 - 4*L1*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u3*up2 - 4*L1*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2*u3*up1 - 8*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u2*up2 - 4*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u3*up1 + 4*L1*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u3*up3 + 8*L1*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2*u3*up2 + 4*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u2*up3 + 4*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u3*up2 + 4*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2*u3*up1 - 4*L1*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2*u3*up3 - 4*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2*u3*up2 - 2*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^3*up1 + 4*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^3*up2 - 2*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^3*up3 + 4*Ib2*L1*Mb2*k1*u1*u2*vL*up2 + 8*Ib2*L2*Mb2*k1*u1*u2*vL*up1 - 4*Ib2*L1*Mb2*k1*u1*u2*u3*vpL - 4*Ib2*L1*Mb2*k1*u1*u2*vL*up3 - 4*Ib2*L1*Mb2*k1*u1*u3*vL*up2 - 4*Ib2*L1*Mb2*k1*u2*u3*vL*up1 + 8*Ib2*L1*Mb2*k2*u1*u2*vL*up2 - 16*Ib2*L2*Mb2*k1*u1*u2*vL*up2 - 8*Ib2*L2*Mb2*k1*u1*u3*vL*up1 + 4*Ib2*L2*Mb2*k2*u1*u2*vL*up1 + 4*Ib2*L1*Mb2*k1*u1*u3*vL*up3 + 8*Ib2*L1*Mb2*k1*u2*u3*vL*up2 - 8*Ib2*L1*Mb2*k2*u1*u2*u3*vpL - 8*Ib2*L1*Mb2*k2*u1*u2*vL*up3 - 8*Ib2*L1*Mb2*k2*u1*u3*vL*up2 - 8*Ib2*L1*Mb2*k2*u2*u3*vL*up1 + 8*Ib2*L2*Mb2*k1*u1*u2*u3*vpL + 8*Ib2*L2*Mb2*k1*u1*u2*vL*up3 + 8*Ib2*L2*Mb2*k1*u1*u3*vL*up2 + 8*Ib2*L2*Mb2*k1*u2*u3*vL*up1 - 8*Ib2*L2*Mb2*k2*u1*u2*vL*up2 - 4*Ib2*L2*Mb2*k2*u1*u3*vL*up1 - 4*Ib2*L1*Mb2*k1*u2*u3*vL*up3 + 8*Ib2*L1*Mb2*k2*u1*u3*vL*up3 + 16*Ib2*L1*Mb2*k2*u2*u3*vL*up2 - 8*Ib2*L2*Mb2*k1*u2*u3*vL*up2 + 4*Ib2*L2*Mb2*k2*u1*u2*u3*vpL + 4*Ib2*L2*Mb2*k2*u1*u2*vL*up3 + 4*Ib2*L2*Mb2*k2*u1*u3*vL*up2 + 4*Ib2*L2*Mb2*k2*u2*u3*vL*up1 - 8*Ib2*L1*Mb2*k2*u2*u3*vL*up3 - 4*Ib2*L2*Mb2*k2*u2*u3*vL*up2 - 2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u2*u3^2*tetap2 + 4*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u2^2*u3*tetap2 - 2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1^2*u2*u3*tetap2 + 8*Ib2*L1*Mb2*k2*u1*vL*wL*wpL - 8*Ib2*L1*Mb2*k2*u2*vL*wL*wpL + 8*Ib2*L2*Mb2*k1*u2*vL*wL*wpL - 8*Ib2*L2*Mb2*k1*u3*vL*wL*wpL - Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^4*tetap2 + K1*Mb2*dm*l2*sin(alfam2 + teta2)*u1^2*u2^2*tetap1 - K1*Mb2*dm*l2*sin(alfam2 + teta2)*u1^2*u2^2*tetap2 + K1*Mb2*dm*l2*sin(alfam2 + teta2)*u1^2*u3^2*tetap1 - K1*Mb2*dm*l2*sin(alfam2 + teta2)*u1^2*u3^2*tetap2 + K1*Mb2*dm*l2*sin(alfam2 + teta2)*u2^2*u3^2*tetap1 - K2*Mb2*dm*l2*sin(alfam2 + teta2)*u1^2*u2^2*tetap2 - K1*Mb2*dm*l2*sin(alfam2 + teta2)*u2^2*u3^2*tetap2 + K2*Mb2*dm*l2*sin(alfam2 + teta2)*u1^2*u2^2*tetap3 - K2*Mb2*dm*l2*sin(alfam2 + teta2)*u1^2*u3^2*tetap2 + K2*Mb2*dm*l2*sin(alfam2 + teta2)*u1^2*u3^2*tetap3 - K2*Mb2*dm*l2*sin(alfam2 + teta2)*u2^2*u3^2*tetap2 + K2*Mb2*dm*l2*sin(alfam2 + teta2)*u2^2*u3^2*tetap3 + 2*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*u2^3*tetap1 - 2*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*u2^3*tetap2 - 2*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u2^3*tetap1 + 2*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u2^3*tetap2 - 2*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*u2^3*tetap2 + 2*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*u2^3*tetap3 + 2*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u2^3*tetap2 - 2*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u2^3*tetap3 + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u2^2*wL*tetap2 + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u3^2*wL*tetap2 + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u2^2*wL*tetap2 + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*u3^2*wL*tetap2 + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u3^2*wL*tetap2 + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*u3^2*wL*tetap2 + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*vL^2*wL*tetap2 + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*vL^2*wL*tetap2 + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u3^2*vL^2*wL*tetap2 + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*vL^2*wL*tetap2 + 2*L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^3*wL*tetap2 - 4*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*wL^3*tetap2 + 4*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*wL^3*tetap2 + 4*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^3*wL*tetap2 - 4*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*wL^3*tetap2 - 4*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^3*wL*tetap2 + 4*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u3*wL^3*tetap2 - 2*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^3*wL*tetap2 - 2*L1*L2^2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*vpL - 2*L1*L2^2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*vL*up1 - 4*L1*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^2*vpL + 2*L1*L2^2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*vpL + 2*L1*L2^2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*vL*up2 - 4*L1*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^2*vpL - 2*L1^2*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2*vpL - 2*L1^2*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*vL*up2 + 2*L1^2*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u3*vpL + 2*L1^2*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*vL*up3 - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2^2*vL*tetap2 - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3^2*vL*tetap2 - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2^2*vL*tetap2 - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3^2*vL*tetap2 - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3^2*vL*tetap2 - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3^2*vL*tetap2 - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL*wL^2*tetap2 - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*vL*wL^2*tetap2 - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3^2*vL*wL^2*tetap2 - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL*wL^2*tetap2 - 2*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*vL*tetap2 + 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*vL^3*tetap2 - 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL^3*tetap2 - 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*vL*tetap2 + 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL^3*tetap2 + 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*vL*tetap2 - 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3*vL^3*tetap2 + 2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*vL*tetap2 - L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*wpL - L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*wL*up1 + 2*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*wL*up1 - L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3^2*wpL + 3*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*wL*up2 - L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3^2*wL*up1 - 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*wpL - 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*wL*up1 + 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*wpL - 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*wpL - 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*wL*up2 + 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*wL*up1 - 2*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*wpL - 2*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*wL*up2 - 2*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*wL*up1 + L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3^2*wpL - 2*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*wpL - 2*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*wL*up3 + L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3^2*wL*up2 - 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3^2*wpL + 6*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*wL*up2 - 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u3^2*wL*up1 + 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3*wpL + 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*wL*up3 - 6*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*wL*up2 + 2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*wpL - L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*wpL - L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*wL*up2 + 2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*wL*up1 + 2*L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*wL*up2 + 2*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*wL*up2 + 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3^2*wpL - 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*wpL - 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*wL*up3 + 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u3^2*wL*up2 + 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*wpL + 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*wL*up3 + L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3*wpL + L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*wL*up3 - 3*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*wL*up2 - 2*L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*wpL - 2*L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*wL*up3 - 2*L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u3*wL*up2 + L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*wpL + L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*wL*up3 + 2*L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u3*wL*up3 - 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*vL^2*wpL - 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*vL^2*wL*up1 + 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL^2*wpL + 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*vL^2*wL*up2 - 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL^2*wpL - 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*vL^2*wL*up2 + 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3*vL^2*wpL + 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*vL^2*wL*up3 - 6*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*wL^2*wpL + 6*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*wL^2*wpL - 6*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*wL^2*wpL + 6*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3*wL^2*wpL + 2*L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*vL*wL*vpL + 2*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*vL*wL*vpL + 4*L1*L2^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2*u1*tetapp2 + 8*L1*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2*u2^2*tetapp2 - 4*L1*L2^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2*u2*tetapp2 + 4*L1^2*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2*u2*tetapp2 - 4*L1^2*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2*u3*tetapp2 - 4*L1*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*up2 - 4*L1*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2*up1 + 4*L1*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*up3 + 8*L1*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2*up2 + 4*L1*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u3*up1 - 4*L1*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2*up3 - 4*L1*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u3*up2 - 4*Ib2*L1*L2*Mb2*k1*u1*u2*vpL - 4*Ib2*L1*L2*Mb2*k1*u1*vL*up2 - 4*Ib2*L1*L2*Mb2*k1*u2*vL*up1 + 4*Ib2*L1*L2*Mb2*k1*u1*u3*vpL + 4*Ib2*L1*L2*Mb2*k1*u1*vL*up3 + 8*Ib2*L1*L2*Mb2*k1*u2*vL*up2 + 4*Ib2*L1*L2*Mb2*k1*u3*vL*up1 - 4*Ib2*L1*L2*Mb2*k2*u1*u2*vpL - 4*Ib2*L1*L2*Mb2*k2*u1*vL*up2 - 4*Ib2*L1*L2*Mb2*k2*u2*vL*up1 - 4*Ib2*L1*L2*Mb2*k1*u2*u3*vpL - 4*Ib2*L1*L2*Mb2*k1*u2*vL*up3 - 4*Ib2*L1*L2*Mb2*k1*u3*vL*up2 + 4*Ib2*L1*L2*Mb2*k2*u1*u3*vpL + 4*Ib2*L1*L2*Mb2*k2*u1*vL*up3 + 8*Ib2*L1*L2*Mb2*k2*u2*vL*up2 + 4*Ib2*L1*L2*Mb2*k2*u3*vL*up1 - 4*Ib2*L1*L2*Mb2*k2*u2*u3*vpL - 4*Ib2*L1*L2*Mb2*k2*u2*vL*up3 - 4*Ib2*L1*L2*Mb2*k2*u3*vL*up2 - 2*L1*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u2^2*tetap2 - 2*L1*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u3^2*tetap2 + 4*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u2^2*tetap2 - 2*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1^2*u2*tetap2 - 2*L2^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u2*tetap2 + 2*L1*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2*u3^2*tetap2 - 4*L1*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^2*u3*tetap2 + 2*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1^2*u3*tetap2 - 2*L1^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2*u3*tetap2 + 2*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^2*u3*tetap2 + K1*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*u2^2*tetap1 + K1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*u1^2*tetap1 - K1*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*u2^2*tetap2 + K1*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*u3^2*tetap1 - K1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*u1^2*tetap2 + K1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*u2^2*tetap1 - K1*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*u3^2*tetap2 - K1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*u2^2*tetap2 - K2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*u2^2*tetap2 - K2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*u1^2*tetap2 + K2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*u2^2*tetap3 - K2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*u3^2*tetap2 + K2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*u1^2*tetap3 - K2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*u2^2*tetap2 + K2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*u3^2*tetap3 + K2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*u2^2*tetap3 + 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u2^2*vL*up1 - 12*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u2^2*vL*up2 + 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u3^2*vL*up1 + 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1^2*u2*vL*up2 + 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2^2*vL*up1 - 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u2*u3^2*vpL + 8*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u2^2*u3*vpL + 8*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u2^2*vL*up3 - 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u3^2*vL*up2 - 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*u3^2*vL*up1 - 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1^2*u2*u3*vpL - 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1^2*u2*vL*up3 - 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1^2*u3*vL*up2 + 8*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^2*u3*vL*up1 - 12*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2^2*vL*up2 + 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u3^2*vL*up1 + 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1^2*u2*vL*up2 + 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*u3^2*vL*up2 + 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1^2*u3*vL*up3 - 12*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^2*u3*vL*up2 - 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2*u3^2*vpL + 8*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2^2*u3*vpL + 8*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2^2*vL*up3 - 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u3^2*vL*up2 - 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2*u3^2*vL*up1 - 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1^2*u2*u3*vpL - 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1^2*u2*vL*up3 - 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1^2*u3*vL*up2 + 8*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^2*u3*vL*up1 + 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^2*u3*vL*up3 + 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2*u3^2*vL*up2 + 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1^2*u3*vL*up3 - 12*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^2*u3*vL*up2 + 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^2*u3*vL*up3 - 12*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2*vL^2*vpL - 12*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*u3*vL^2*vpL + 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*vL*wL^2*up1 + 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*vL*wL^2*up2 - 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2*wL^2*vpL - 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*vL*wL^2*up2 - 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2*vL*wL^2*up1 - 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*u3*wL^2*vpL - 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*vL*wL^2*up3 - 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u3*vL*wL^2*up2 + 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2*vL*wL^2*up2 + 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u3*vL*wL^2*up3 + 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^2*vL*wL*wpL + 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1^2*vL*wL*wpL + 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u3^2*vL*wL*wpL + 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^2*vL*wL*wpL + 4*dm^3*l2^3*cos(alfam2 + teta2)*tetap2*u1*u2*u3^2*tetapp2 - 8*dm^3*l2^3*cos(alfam2 + teta2)*tetap2*u1*u2^2*u3*tetapp2 + 4*dm^3*l2^3*cos(alfam2 + teta2)*tetap2*u1^2*u2*u3*tetapp2 + 4*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u2*u3*up1 - 8*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u2*u3*up2 + 4*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u2*u3*up3 + 2*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2*u2^4*tetapp2 + 2*L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*wL*tetap2 + 2*L1^2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*wL*tetap2 + 2*L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*wL*tetap2 + 2*L1^2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u3^2*wL*tetap2 + 2*L1^2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*vL^2*wL*tetap2 + 2*L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*vL^2*wL*tetap2 + K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^4*tetap2 - K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^4*tetap2 - K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^4*tetap2 + K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^4*tetap2 + 8*Ib2*Mb2*k1*u1*u2*u3*vL*up1 - 16*Ib2*Mb2*k1*u1*u2*u3*vL*up2 + 8*Ib2*Mb2*k2*u1*u2*u3*vL*up1 + 8*Ib2*Mb2*k1*u1*u2*u3*vL*up3 - 16*Ib2*Mb2*k2*u1*u2*u3*vL*up2 + 8*Ib2*Mb2*k2*u1*u2*u3*vL*up3 + 8*Ib2*Mb2*k2*u1*u2*vL*wL*wpL + 8*Ib2*Mb2*k1*u2*u3*vL*wL*wpL - 2*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*vL*tetap2 - 2*L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL*tetap2 - 2*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL*tetap2 - 2*L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u3^2*vL*tetap2 - 2*L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*vL*wL^2*tetap2 - 2*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*vL*wL^2*tetap2 - 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^3*up1 - 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u2^3*tetap1 + 4*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^3*up2 + 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^3*up1 + 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u2^3*tetap2 - 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^3*up3 - 4*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^3*up2 - 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*u2^3*u3*tetap1 + 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^3*up1 + 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u2^3*tetap2 + 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^3*up3 + 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*u2^3*u3*tetap2 - 4*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^3*up2 - 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^3*up1 - 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u2^3*tetap3 + 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^3*up3 + 4*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^3*up2 + 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*u2^3*u3*tetap2 - 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^3*up3 - 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*u2^3*u3*tetap3 - L1*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*wpL - L1*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*wL*up1 - 2*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*wpL + L1*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*wpL + L1*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*wL*up2 - 2*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*wpL - L1^2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*wpL - L1^2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*wL*up2 + L1^2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u3*wpL + L1^2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*wL*up3 - 2*L1*L2^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*tetap2 - 4*L1*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^2*tetap2 + 2*L1*L2^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2*tetap2 - 2*L1^2*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2*tetap2 + 2*L1^2*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u3*tetap2 + K1*L1^2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap1 - K1*L1^2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2 - K2*L1^2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2 + K2*L1^2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap3 - 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*vL*wL*vpL + 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL*wL*vpL - 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL*wL*vpL + 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3*vL*wL*vpL + 2*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2*u1^2*u2^2*tetapp2 + 2*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2*u1^2*u3^2*tetapp2 + 2*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2*u2^2*u3^2*tetapp2 + 2*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u2^2*up1 - 6*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u2^2*up2 + 2*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u3^2*up1 + 2*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1^2*u2*up2 + 4*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u2^2*up3 - 2*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u3^2*up2 - 2*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2*u3^2*up1 - 2*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1^2*u2*up3 - 2*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1^2*u3*up2 + 4*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^2*u3*up1 + 2*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2*u3^2*up2 + 2*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1^2*u3*up3 - 6*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^2*u3*up2 + 2*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^2*u3*up3 - 8*L1*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2*u1*u2*tetapp2 + 8*L1*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2*u1*u3*tetapp2 - 8*L1*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2*u2*u3*tetapp2 + K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1^2*u2^2*tetap2 + K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1^2*u3^2*tetap2 - K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*u2^2*tetap2 + K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^2*u3^2*tetap2 - K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*u3^2*tetap2 - K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*u2^2*tetap2 - K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*u3^2*tetap2 - K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*u3^2*tetap2 + K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1^2*u2^2*tetap2 - K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*u3^2*tetap2 + K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1^2*u3^2*tetap2 + K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^2*u3^2*tetap2 + 4*Ib2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2*u2^3*tetapp2 - 4*Ib2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2*u2^3*tetapp2 + 2*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^3*tetap2 - 2*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^3*tetap2 - 2*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^3*tetap2 + 2*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^3*tetap2 - 2*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^3*tetap2 + 2*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^3*tetap2 + 2*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^3*tetap2 - 2*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^3*tetap2 + 4*L1*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u2*u3*tetap2 - 4*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u2*u3*tetap2 + 2*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u2^3*tetap2 + 2*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^3*u3*tetap2 - 2*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^2*up1 - 2*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u2^2*tetap1 + 2*K1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*up1 + 6*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^2*up2 - 2*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u3^2*up1 + 2*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*up1 + 2*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u2^2*tetap2 - 2*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u3^2*tetap1 - 2*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1^2*up2 + 4*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^2*up1 + 4*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u2^2*tetap1 - 2*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u1^2*u2*tetap1 + 2*K1*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2*up2 - 2*K1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*up2 - 2*K1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2*up1 - 2*K1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*up1 - 2*K1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u2*tetap1 - 4*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^2*up3 + 2*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u3^2*up2 - 6*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*up2 + 2*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u3^2*up1 + 2*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u3^2*tetap2 + 2*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*u2*u3^2*tetap1 - 4*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*u2^2*u3*tetap1 + 2*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1^2*up3 - 6*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^2*up2 + 2*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*up2 - 4*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*up1 - 4*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u2^2*tetap2 + 2*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u1^2*u2*tetap2 + 2*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u1^2*u3*tetap1 - 2*K1*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2*up3 - 2*K1*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u3*up2 - 2*K1*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*up2 - 2*K1*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*u2*u3*tetap1 + 2*K1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2*up2 + 2*K1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*up2 + 2*K1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*up1 + 2*K1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u2*tetap2 + 2*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*up1 + 2*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u2^2*tetap2 - 2*K2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*up1 + 4*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*up3 - 2*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u3^2*up2 - 2*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*u2*u3^2*tetap2 + 4*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*u2^2*u3*tetap2 + 2*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^2*up3 - 2*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*up3 + 6*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*up2 - 2*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u1^2*u3*tetap2 + 2*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u2^2*u3*tetap1 + 2*K1*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u3*up3 + 2*K1*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*up3 + 2*K1*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u3*up2 + 2*K1*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*u2*u3*tetap2 - 2*K1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*up2 - 6*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*up2 + 2*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u3^2*up1 - 2*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^2*up1 - 2*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u2^2*tetap3 + 2*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u3^2*tetap2 + 2*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*up2 - 4*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*up1 - 4*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u2^2*tetap2 + 2*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u1^2*u2*tetap2 - 2*K2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*up2 + 2*K2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*up2 + 2*K2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*up1 + 2*K2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*up1 + 2*K2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u2*tetap2 - 2*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*up3 - 2*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u2^2*u3*tetap2 - 2*K1*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u3*up3 + 4*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*up3 - 2*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u3^2*up2 + 6*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^2*up2 - 2*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u3^2*up1 - 2*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u3^2*tetap3 - 2*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*u2*u3^2*tetap2 + 4*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*u2^2*u3*tetap2 - 2*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*up3 + 6*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*up2 - 2*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1^2*up2 + 4*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^2*up1 + 4*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u2^2*tetap3 - 2*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u1^2*u2*tetap3 - 2*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u1^2*u3*tetap2 + 2*K2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*up3 + 2*K2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u3*up2 + 2*K2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2*up2 + 2*K2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*u2*u3*tetap2 - 2*K2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*up2 - 2*K2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*up2 - 2*K2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2*up1 - 2*K2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u2*tetap3 - 4*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^2*up3 + 2*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u3^2*up2 + 2*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*u2*u3^2*tetap3 - 4*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*u2^2*u3*tetap3 - 2*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*up3 + 2*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1^2*up3 - 6*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^2*up2 + 2*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u1^2*u3*tetap3 - 2*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u2^2*u3*tetap2 - 2*K2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u3*up3 - 2*K2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2*up3 - 2*K2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u3*up2 - 2*K2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*u2*u3*tetap3 + 2*K2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2*up2 + 2*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^2*up3 + 2*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u2^2*u3*tetap3 + 2*K2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u3*up3 - 8*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u2*u3*vL*up1 + 16*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u2*u3*vL*up2 - 8*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2*u3*vL*up1 - 8*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u2*u3*vL*up3 + 16*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2*u3*vL*up2 - 8*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2*u3*vL*up3 - 8*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2*vL*wL*wpL - 8*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*u3*vL*wL*wpL - Ib2*L1^2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*tetap2 - 2*L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^2*wL*tetap2 - 2*L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u3^2*wL*tetap2 - 4*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^2*wL*tetap2 + 8*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^2*wL*tetap2 - 4*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u2*wL*tetap2 - 4*L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*wL*tetap2 + 2*L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3^2*wL*tetap2 - 4*L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*u3*wL*tetap2 - 4*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u3^2*wL*tetap2 + 4*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u3*wL*tetap2 + 4*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^2*wL*tetap2 - 2*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u2*wL*tetap2 + 4*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3^2*wL*tetap2 - 8*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*u3*wL*tetap2 + 4*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*u3*wL*tetap2 + 2*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u3*wL*tetap2 - 4*L1^2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3*wL*tetap2 + 2*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*u3*wL*tetap2 - 4*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*vL^2*wL*tetap2 + 4*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*vL^2*wL*tetap2 - 4*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*vL^2*wL*tetap2 + 4*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u3*vL^2*wL*tetap2 + 2*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*vL*tetap2 + 2*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3^2*vL*tetap2 + 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*vL*tetap2 - 8*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*vL*tetap2 + 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*vL*tetap2 + 4*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*vL*tetap2 - 2*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3^2*vL*tetap2 + 4*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*vL*tetap2 + 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3^2*vL*tetap2 - 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3*vL*tetap2 - 4*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*vL*tetap2 + 2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*vL*tetap2 - 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3^2*vL*tetap2 + 8*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*vL*tetap2 - 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*vL*tetap2 - 2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3*vL*tetap2 + 4*L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*vL*tetap2 - 2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*vL*tetap2 + 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*vL*wL^2*tetap2 - 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL*wL^2*tetap2 + 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL*wL^2*tetap2 - 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3*vL*wL^2*tetap2 + 2*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*wpL + 2*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*wL*up2 + 2*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*wL*up1 - 2*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3*wpL - 2*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*wL*up3 - 4*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*wL*up2 - 2*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3*wL*up1 + 2*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*wpL + 2*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*wL*up2 + 2*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*wL*up1 + 2*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*wpL + 2*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*wL*up3 + 2*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3*wL*up2 - 2*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3*wpL - 2*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*wL*up3 - 4*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*wL*up2 - 2*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u3*wL*up1 + 2*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*wpL + 2*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*wL*up3 + 2*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u3*wL*up2 + 2*Ib2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2*u2^2*tetapp2 + 2*Ib2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2*u1^2*tetapp2 + 2*Ib2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2*u3^2*tetapp2 + 2*Ib2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2*u2^2*tetapp2 - 2*Ib2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^2*up1 + 2*Ib2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*up1 + 6*Ib2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^2*up2 - 2*Ib2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u3^2*up1 - 2*Ib2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1^2*up2 + 4*Ib2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^2*up1 + 2*Ib2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2*up2 - 2*Ib2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*up2 - 2*Ib2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2*up1 - 4*Ib2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^2*up3 + 2*Ib2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u3^2*up2 + 2*Ib2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1^2*up3 - 6*Ib2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^2*up2 - 2*Ib2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2*up3 - 2*Ib2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u3*up2 + 2*Ib2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2*up2 + 2*Ib2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^2*up3 + 2*Ib2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u3*up3 + K1*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^2*tetap2 + K1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1^2*tetap2 + K1*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u3^2*tetap2 - K1*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*tetap2 + K1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^2*tetap2 - K1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*tetap2 - K1*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u3^2*tetap2 - K1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*tetap2 - K2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*tetap2 - K2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*tetap2 - K2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u3^2*tetap2 + K2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^2*tetap2 - K2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*tetap2 + K2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1^2*tetap2 + K2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u3^2*tetap2 + K2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^2*tetap2 - Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1^2*u2^2*tetap2 - Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1^2*u3^2*tetap2 - Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^2*u3^2*tetap2 + 4*L1*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u2*tetap2 - 4*L1*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u3*tetap2 + 4*L1*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2*u3*tetap2 - 2*Ib2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^3*tetap2 + 2*Ib2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^3*tetap2 - 2*K1*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*up1 - 2*K1*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*u1*tetap1 - 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u2^2*tetap1 + 2*K1*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*up2 + 2*K1*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*up1 + 2*K1*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*u1*tetap2 + 2*K1*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*u2*tetap1 - 2*K1*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*up2 - 2*K1*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u2*tetap1 + 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u2^2*tetap2 - 2*K1*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*up2 - 2*K1*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*u2*tetap2 + 2*K1*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*up3 + 2*K1*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*up2 + 2*K1*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u2*tetap2 + 2*K1*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u3*tetap1 + 2*K2*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*up1 + 2*K2*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*u1*tetap2 - 2*K1*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*up3 - 2*K1*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u3*tetap2 + 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u2^2*tetap2 - 2*K2*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*up2 - 2*K2*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*up1 - 2*K2*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*u1*tetap3 - 2*K2*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*u2*tetap2 + 2*K2*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*up2 + 2*K2*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u2*tetap2 - 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u2^2*tetap3 + 2*K2*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*up2 + 2*K2*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*u2*tetap3 - 2*K2*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*up3 - 2*K2*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*up2 - 2*K2*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u2*tetap3 - 2*K2*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u3*tetap2 + 2*K2*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*up3 + 2*K2*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u3*tetap3 - 4*L1*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u2*vL*up2 - 8*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u2*vL*up1 + 4*L1*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u2*u3*vpL + 4*L1*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u2*vL*up3 + 4*L1*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u3*vL*up2 + 4*L1*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*u3*vL*up1 - 8*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2*vL*up2 + 16*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u2*vL*up2 + 8*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u3*vL*up1 - 4*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2*vL*up1 - 4*L1*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u3*vL*up3 - 8*L1*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*u3*vL*up2 + 8*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2*u3*vpL + 8*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2*vL*up3 + 8*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u3*vL*up2 + 8*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2*u3*vL*up1 - 8*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u2*u3*vpL - 8*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u2*vL*up3 - 8*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u3*vL*up2 - 8*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*u3*vL*up1 + 8*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2*vL*up2 + 4*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u3*vL*up1 + 4*L1*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*u3*vL*up3 - 8*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u3*vL*up3 - 16*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2*u3*vL*up2 + 8*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*u3*vL*up2 - 4*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2*u3*vpL - 4*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2*vL*up3 - 4*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u3*vL*up2 - 4*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2*u3*vL*up1 + 8*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2*u3*vL*up3 + 4*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2*u3*vL*up2 - 8*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*vL*wL*wpL + 8*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2*vL*wL*wpL - 8*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*vL*wL*wpL + 8*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u3*vL*wL*wpL - 4*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*wL*up1 + 8*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*wL*up2 - 4*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*wL*up1 - 4*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*wL*up3 + 8*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*wL*up2 - 4*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*wL*up3 - 4*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*vL*wL*vpL - 4*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*vL*wL*vpL - 8*L1*dm^3*l2^3*cos(alfam2 + teta2)*tetap2*u1*u2*u3*tetapp2 + 8*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2*u1*u2*u3*tetapp2 - 4*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2*u1*u2^3*tetapp2 - 4*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2*u2^3*u3*tetapp2 - 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u2^3*tetap2 + 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2^3*tetap2 - 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^3*u3*tetap2 + 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2^3*tetap2 + 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^3*u3*tetap2 - 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u2^3*tetap2 + 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^3*u3*tetap2 - 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^3*u3*tetap2 - 2*L1*L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*wL*tetap2 - 4*L1*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*wL*tetap2 + 2*L1*L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*wL*tetap2 - 4*L1*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*wL*tetap2 - 2*L1^2*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*wL*tetap2 + 2*L1^2*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u3*wL*tetap2 + 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u2^2*up1 - 6*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u2^2*up2 + 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u3^2*up1 + 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1^2*u2*up2 - 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2^2*up1 + 4*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u2^2*up3 - 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u3^2*up2 - 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2*u3^2*up1 - 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1^2*u2*up3 - 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1^2*u3*up2 + 4*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^2*u3*up1 + 6*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2^2*up2 - 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u3^2*up1 - 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*u2*up2 - 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u2*u3^2*tetap1 + 4*K1*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u2^2*u3*tetap1 - 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*u1^2*u2*u3*tetap1 - 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2^2*up1 + 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2*u3^2*up2 + 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1^2*u3*up3 - 6*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^2*u3*up2 - 4*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2^2*up3 + 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u3^2*up2 + 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*u3^2*up1 + 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*u2*up3 + 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*u3*up2 - 4*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*u3*up1 + 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u2*u3^2*tetap2 - 4*K1*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u2^2*u3*tetap2 + 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*u1^2*u2*u3*tetap2 + 6*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2^2*up2 - 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u3^2*up1 - 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*u2*up2 + 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u2^2*up1 + 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^2*u3*up3 - 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*u3^2*up2 - 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*u3*up3 + 6*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*u3*up2 - 4*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2^2*up3 + 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u3^2*up2 + 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*u3^2*up1 + 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*u2*up3 + 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*u3*up2 - 4*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*u3*up1 - 6*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u2^2*up2 + 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u3^2*up1 + 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1^2*u2*up2 + 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u2*u3^2*tetap2 - 4*K2*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u2^2*u3*tetap2 + 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*u1^2*u2*u3*tetap2 - 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*u3*up3 - 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*u3^2*up2 - 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*u3*up3 + 6*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*u3*up2 + 4*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u2^2*up3 - 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u3^2*up2 - 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2*u3^2*up1 - 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1^2*u2*up3 - 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1^2*u3*up2 + 4*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^2*u3*up1 - 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u2*u3^2*tetap3 + 4*K2*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u2^2*u3*tetap3 - 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*u1^2*u2*u3*tetap3 - 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*u3*up3 + 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2*u3^2*up2 + 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1^2*u3*up3 - 6*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^2*u3*up2 + 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^2*u3*up3 + 2*L1*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*vL*tetap2 + 4*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL*tetap2 - 2*L1*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL*tetap2 + 4*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL*tetap2 + 2*L1^2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL*tetap2 - 2*L1^2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u3*vL*tetap2 + 2*Ib2*L1^2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2*tetapp2 - 2*Ib2*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*up1 + 2*Ib2*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*up2 - 2*Ib2*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*up2 + 2*Ib2*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*up3 + K1*L1^2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*tetap2 - K1*L1^2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*tetap2 - K2*L1^2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*tetap2 + K2*L1^2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*tetap2 - Ib2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^2*tetap2 - Ib2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1^2*tetap2 - Ib2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u3^2*tetap2 - Ib2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^2*tetap2 - 4*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*u3^2*wL*tetap2 + 8*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^2*u3*wL*tetap2 - 4*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u2*u3*wL*tetap2 - 4*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*u3^2*wL*tetap2 + 8*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^2*u3*wL*tetap2 - 4*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u2*u3*wL*tetap2 - 4*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*vL^2*wL*tetap2 - 4*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3*vL^2*wL*tetap2 + 4*L1*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u2*vpL + 4*L1*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*vL*up2 + 4*L1*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*vL*up1 - 4*L1*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u3*vpL - 4*L1*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*vL*up3 - 8*L1*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*vL*up2 - 4*L1*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u3*vL*up1 + 4*L1*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2*vpL + 4*L1*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*vL*up2 + 4*L1*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2*vL*up1 + 4*L1*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*u3*vpL + 4*L1*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*vL*up3 + 4*L1*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u3*vL*up2 - 4*L1*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u3*vpL - 4*L1*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*vL*up3 - 8*L1*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2*vL*up2 - 4*L1*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u3*vL*up1 + 4*L1*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2*u3*vpL + 4*L1*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2*vL*up3 + 4*L1*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u3*vL*up2 + 4*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3^2*vL*tetap2 - 8*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*u3*vL*tetap2 + 4*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*u3*vL*tetap2 + 4*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3^2*vL*tetap2 - 8*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*u3*vL*tetap2 + 4*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*u3*vL*tetap2 + 4*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*vL*wL^2*tetap2 + 4*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*vL*wL^2*tetap2 - 2*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*wL*up2 - 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*wL*up1 + 2*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*wpL + 2*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*wL*up3 + 2*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3*wL*up2 + 2*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*wL*up1 - 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*wL*up2 + 8*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*wL*up2 + 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3*wL*up1 - 2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*wL*up1 - 2*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3*wL*up3 - 4*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*wL*up2 + 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*wpL + 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*wL*up3 + 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3*wL*up2 + 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*wL*up1 - 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*wpL - 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*wL*up3 - 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3*wL*up2 - 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*wL*up1 + 4*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*wL*up2 + 2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3*wL*up1 + 2*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*wL*up3 - 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3*wL*up3 - 8*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*wL*up2 + 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*wL*up2 - 2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*wpL - 2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*wL*up3 - 2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3*wL*up2 - 2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*wL*up1 + 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*wL*up3 + 2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*wL*up2 + 2*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u2*u3^2*tetap2 - 4*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u2^2*u3*tetap2 + 2*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1^2*u2*u3*tetap2 + 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*up2 + 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2*up1 + 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u2*tetap1 - 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*up3 - 8*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2*up2 - 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u3*up1 - 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*up2 - 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*up1 - 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u2*tetap2 - 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u3*tetap1 + 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2*up3 + 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u3*up2 + 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*up3 + 8*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*up2 + 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u3*up1 + 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u3*tetap2 + 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u2*u3*tetap1 - 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*up2 - 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*up1 - 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u2*tetap2 - 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*up3 - 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u3*up2 - 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u2*u3*tetap2 + 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*up3 + 8*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*up2 + 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u3*up1 + 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*up2 + 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2*up1 + 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u2*tetap3 + 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u3*tetap2 - 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*up3 - 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u3*up2 - 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*up3 - 8*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2*up2 - 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u3*up1 - 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u3*tetap3 - 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u2*u3*tetap2 + 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2*up3 + 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u3*up2 + 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u2*u3*tetap3 + 4*L1*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*wL*tetap2 - 4*L1*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u3*wL*tetap2 + 4*L1*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*wL*tetap2 + 4*L1*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3*wL*tetap2 - 4*L1*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u3*wL*tetap2 + 4*L1*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3*wL*tetap2 - 4*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u2*u3*up1 + 8*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u2*u3*up2 + 4*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2*u3*up1 - 4*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u2*u3*up3 - 8*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2*u3*up2 + 4*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2*u3*up1 + 4*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2*u3*up3 - 8*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2*u3*up2 - 4*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u2*u3*up1 + 4*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2*u3*up3 + 8*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u2*u3*up2 - 4*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u2*u3*up3 - 4*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*vL*tetap2 + 4*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3*vL*tetap2 - 4*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*vL*tetap2 - 4*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*vL*tetap2 + 4*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3*vL*tetap2 - 4*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*vL*tetap2 - 4*Ib2*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2*u1*tetapp2 - 8*Ib2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2*u2^2*tetapp2 + 4*Ib2*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2*u2*tetapp2 - 4*Ib2*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2*u2*tetapp2 + 4*Ib2*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2*u3*tetapp2 + 4*Ib2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*up2 + 4*Ib2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2*up1 - 4*Ib2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*up3 - 8*Ib2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2*up2 - 4*Ib2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u3*up1 + 4*Ib2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2*up3 + 4*Ib2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u3*up2 - 2*K1*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*tetap2 - 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^2*tetap2 + 2*K1*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2*tetap2 + 2*K1*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*tetap2 - 2*K1*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2*tetap2 + 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*tetap2 - 2*K1*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*tetap2 + 2*K1*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u3*tetap2 + 2*K1*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*tetap2 + 2*K2*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*tetap2 - 2*K1*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u3*tetap2 + 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*tetap2 - 2*K2*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*tetap2 - 2*K2*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*tetap2 + 2*K2*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*tetap2 - 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^2*tetap2 + 2*K2*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2*tetap2 - 2*K2*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u3*tetap2 - 2*K2*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2*tetap2 + 2*K2*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u3*tetap2 + 2*Ib2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u2^2*tetap2 + 2*Ib2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u3^2*tetap2 - 4*Ib2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u2^2*tetap2 + 2*Ib2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1^2*u2*tetap2 + 2*Ib2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u2*tetap2 - 2*Ib2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2*u3^2*tetap2 + 4*Ib2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^2*u3*tetap2 - 2*Ib2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1^2*u3*tetap2 + 2*Ib2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2*u3*tetap2 - 2*Ib2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^2*u3*tetap2 - 4*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2*u1*u2*u3^2*tetapp2 + 8*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2*u1*u2^2*u3*tetapp2 - 4*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2*u1^2*u2*u3*tetapp2 - 4*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u2*u3*up1 + 8*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u2*u3*up2 - 4*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u2*u3*up3 - 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u2*u3^2*tetap2 + 4*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u2^2*u3*tetap2 - 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1^2*u2*u3*tetap2 + 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2*u3^2*tetap2 - 4*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2^2*u3*tetap2 + 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*u2*u3*tetap2 + 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2*u3^2*tetap2 - 4*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2^2*u3*tetap2 + 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*u2*u3*tetap2 - 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u2*u3^2*tetap2 + 4*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u2^2*u3*tetap2 - 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1^2*u2*u3*tetap2 - 4*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u2*up2 - 4*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u2*up1 + 4*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u2*up3 + 4*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u3*up2 + 4*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2*u3*up1 + 4*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2*up2 + 4*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u2*u3*tetap1 + 8*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u2*up2 + 4*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u3*up1 + 4*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2*up1 - 4*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u3*up3 - 8*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2*u3*up2 - 4*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2*up3 - 4*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u3*up2 - 4*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*u3*up1 - 4*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u2*u3*tetap2 - 4*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u2*up3 - 4*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u3*up2 - 4*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2*u3*up1 - 8*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2*up2 - 4*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u3*up1 - 4*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u2*u3*tetap1 + 4*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2*up2 + 4*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2*up1 + 4*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2*u3*up3 + 4*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u3*up3 + 8*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*u3*up2 + 4*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2*u3*up2 + 4*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2*up3 + 4*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u3*up2 + 4*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*u3*up1 + 4*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u2*u3*tetap2 - 4*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2*up3 - 4*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u3*up2 - 4*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*u3*up1 - 4*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u2*up2 - 4*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u2*u3*tetap2 - 8*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2*up2 - 4*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u3*up1 - 4*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u2*up1 - 4*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*u3*up3 - 4*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*u3*up2 + 4*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u3*up3 + 8*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*u3*up2 + 4*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u2*up3 + 4*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u3*up2 + 4*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2*u3*up1 + 4*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u2*u3*tetap3 + 4*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2*up3 + 4*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u3*up2 + 4*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*u3*up1 + 8*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u2*up2 + 4*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u3*up1 + 4*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u2*u3*tetap2 - 4*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*u3*up3 - 4*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u3*up3 - 8*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2*u3*up2 - 4*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*u3*up2 - 4*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u2*up3 - 4*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u3*up2 - 4*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2*u3*up1 - 4*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*u1*u2*u3*tetap3 + 4*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2*u3*up3 + 4*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2*u3*up2 + 2*Ib2*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*tetap2 + 4*Ib2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^2*tetap2 - 2*Ib2*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2*tetap2 + 2*Ib2*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2*tetap2 - 2*Ib2*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u3*tetap2 + 4*L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*u3*wL*tetap2 + 8*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*u3*wL*tetap2 - 8*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*u3*wL*tetap2 - 4*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*u3*wL*tetap2 - 4*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*vL*tetap2 - 8*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*vL*tetap2 + 8*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*vL*tetap2 + 4*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*vL*tetap2 - 4*Ib2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2*u1*u2^2*tetapp2 - 4*Ib2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2*u1*u3^2*tetapp2 + 8*Ib2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2*u1*u2^2*tetapp2 - 4*Ib2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2*u1^2*u2*tetapp2 - 4*Ib2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2*u1*u2*tetapp2 + 4*Ib2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2*u2*u3^2*tetapp2 - 8*Ib2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2*u2^2*u3*tetapp2 + 4*Ib2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2*u1^2*u3*tetapp2 - 4*Ib2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2*u2*u3*tetapp2 + 4*Ib2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2*u2^2*u3*tetapp2 - 4*Ib2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u2*up2 - 4*Ib2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u2*up1 + 4*Ib2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u2*up3 + 4*Ib2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u3*up2 + 4*Ib2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2*u3*up1 + 8*Ib2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u2*up2 + 4*Ib2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u3*up1 - 4*Ib2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u3*up3 - 8*Ib2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2*u3*up2 - 4*Ib2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u2*up3 - 4*Ib2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u3*up2 - 4*Ib2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2*u3*up1 + 4*Ib2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2*u3*up3 + 4*Ib2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2*u3*up2 - 2*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u2^2*tetap2 - 2*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u3^2*tetap2 + 2*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2^2*tetap2 + 4*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u2^2*tetap2 - 2*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1^2*u2*tetap2 - 2*K1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u2*tetap2 + 2*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2*u3^2*tetap2 - 4*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^2*u3*tetap2 + 2*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u3^2*tetap2 + 2*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1^2*u3*tetap2 - 4*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2^2*tetap2 + 2*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*u2*tetap2 - 2*K1*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2*u3*tetap2 + 2*K1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2*tetap2 + 2*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2^2*tetap2 - 2*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*u3^2*tetap2 + 4*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*u3*tetap2 + 2*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^2*u3*tetap2 - 2*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*u3*tetap2 + 2*K1*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*u3*tetap2 + 2*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u3^2*tetap2 - 2*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u2^2*tetap2 - 4*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2^2*tetap2 + 2*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*u2*tetap2 + 2*K2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2*tetap2 - 2*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*u3*tetap2 - 2*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*u3^2*tetap2 + 4*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*u3*tetap2 - 2*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u3^2*tetap2 - 2*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*u3*tetap2 + 4*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u2^2*tetap2 - 2*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1^2*u2*tetap2 + 2*K2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*u3*tetap2 - 2*K2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u2*tetap2 + 2*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2*u3^2*tetap2 - 4*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^2*u3*tetap2 - 2*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*u3*tetap2 + 2*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1^2*u3*tetap2 - 2*K2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2*u3*tetap2 + 2*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^2*u3*tetap2 - 4*Ib2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u2*tetap2 + 4*Ib2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u3*tetap2 - 4*Ib2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2*u3*tetap2 + 8*Ib2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2*u1*u2*u3*tetapp2 - 8*Ib2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2*u1*u2*u3*tetapp2 + 4*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u2*u3*tetap2 - 4*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2*u3*tetap2 - 4*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u2*u3*tetap2 + 4*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2*u3*tetap2 - 4*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2*u3*tetap2 + 4*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u2*u3*tetap2 + 4*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2*u3*tetap2 - 4*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u2*u3*tetap2 + 8*Ib2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2*u1*u2*tetapp2 - 8*Ib2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2*u1*u3*tetapp2 + 8*Ib2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2*u2*u3*tetapp2 + 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u2*tetap2 - 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u3*tetap2 - 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2*tetap2 + 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2*u3*tetap2 + 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u3*tetap2 - 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2*tetap2 - 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*u3*tetap2 + 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u3*tetap2 + 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u2*tetap2 - 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*u3*tetap2 - 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u3*tetap2 + 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2*u3*tetap2 - 4*Ib2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u2*u3*tetap2 + 4*Ib2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u2*u3*tetap2)/(Mb2*(dm^2*l2^2 - Ib2*Mb2)*(L1 - u1 + u2)^2*(L2 - u2 + u3)^2) - (2*(up1 - up2)*(L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*wL^3 - 2*Ib2*L2^2*Mb2*k1*vL^3 - dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^4 - 2*Ib2*Mb2*k1*u2^4*vL - 2*Ib2*Mb2*k2*u2^4*vL - 2*Ib2*Mb2*k1*u2^2*vL^3 - 2*Ib2*Mb2*k2*u1^2*vL^3 - 2*Ib2*Mb2*k1*u3^2*vL^3 - 2*Ib2*Mb2*k2*u2^2*vL^3 - 2*Ib2*L1^2*Mb2*k2*vL^3 + L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*wL^3 - L1^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^2 - L2^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1^2 - L1^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u3^2 - L2^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^2 - 2*Ib2*L2^2*Mb2*k1*u1^2*vL - 2*Ib2*L1^2*Mb2*k2*u2^2*vL - 2*Ib2*L2^2*Mb2*k1*u2^2*vL - 2*Ib2*L1^2*Mb2*k2*u3^2*vL - 2*Ib2*L1^2*Mb2*k2*vL*wL^2 - 2*Ib2*L2^2*Mb2*k1*vL*wL^2 + 2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^2*vL^3 + 2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1^2*vL^3 + 2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u3^2*vL^3 + 2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^2*vL^3 + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^4*wL + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^4*wL + 2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u2^3 + 2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^3*u3 + 4*Ib2*Mb2*k1*u1*u2^3*vL + 4*Ib2*Mb2*k2*u1*u2*vL^3 + 4*Ib2*Mb2*k2*u1*u2^3*vL + 4*Ib2*Mb2*k1*u2*u3*vL^3 + 4*Ib2*Mb2*k1*u2^3*u3*vL + 4*Ib2*Mb2*k2*u2^3*u3*vL - L1^2*L2^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2 + 2*L1^2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*vL^3 + 2*L2^2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*vL^3 + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*wL^3 + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*wL^3 + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3^2*wL^3 + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*wL^3 - dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1^2*u2^2 - dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1^2*u3^2 - dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^2*u3^2 - 2*L1*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^3 + 2*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^3 - 2*Ib2*Mb2*k1*u1^2*u2^2*vL - 2*Ib2*Mb2*k1*u1^2*u3^2*vL - 2*Ib2*Mb2*k2*u1^2*u2^2*vL - 2*Ib2*Mb2*k1*u2^2*u3^2*vL - 2*Ib2*Mb2*k2*u1^2*u3^2*vL - 2*Ib2*Mb2*k2*u2^2*u3^2*vL - 2*Ib2*Mb2*k1*u2^2*vL*wL^2 - 2*Ib2*Mb2*k2*u1^2*vL*wL^2 - 2*Ib2*Mb2*k1*u3^2*vL*wL^2 - 2*Ib2*Mb2*k2*u2^2*vL*wL^2 - 2*Ib2*L1*Mb2*k1*u2^3*vL + 4*Ib2*L1*Mb2*k2*u1*vL^3 - 4*Ib2*L1*Mb2*k2*u2*vL^3 - 4*Ib2*L1*Mb2*k2*u2^3*vL + 4*Ib2*L2*Mb2*k1*u2*vL^3 + 4*Ib2*L2*Mb2*k1*u2^3*vL - 4*Ib2*L2*Mb2*k1*u3*vL^3 + 2*Ib2*L2*Mb2*k2*u2^3*vL + 2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^4*vL + 2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^4*vL + L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*wL + L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*wL + L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*wL + L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u3^2*wL + L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*vL^2*wL + L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*vL^2*wL + K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^4 - K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^4 - K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^4 + K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^4 + 2*L1*L2^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1 + 4*L1*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^2 - 2*L1*L2^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2 + 2*L1^2*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2 - 2*L1^2*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u3 + 2*Ib2*L1*L2^2*Mb2*k1*u1*vL + 4*Ib2*L1*L2*Mb2*k1*u2^2*vL - 2*Ib2*L1*L2^2*Mb2*k1*u2*vL + 4*Ib2*L1*L2*Mb2*k2*u2^2*vL + 2*Ib2*L1^2*L2*Mb2*k2*u2*vL - 2*Ib2*L1^2*L2*Mb2*k2*u3*vL + 2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1^2*u2^2*vL + 2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1^2*u3^2*vL + 2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1^2*u2^2*vL + 2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^2*u3^2*vL + 2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1^2*u3^2*vL + 2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^2*u3^2*vL + 2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^2*vL*wL^2 + 2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1^2*vL*wL^2 + 2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u3^2*vL*wL^2 + 2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^2*vL*wL^2 + 2*L1*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^3*vL - 4*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*vL^3 + 4*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2*vL^3 + 4*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^3*vL - 4*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*vL^3 - 4*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^3*vL + 4*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u3*vL^3 - 2*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^3*vL - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^3*wL - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*wL^3 - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^3*wL - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*wL^3 - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*u3*wL - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*u3*wL + 2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u2*u3^2 - 4*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u2^2*u3 + 2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1^2*u2*u3 + Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^4 + 4*Ib2*Mb2*k1*u1*u2*u3^2*vL - 8*Ib2*Mb2*k1*u1*u2^2*u3*vL + 4*Ib2*Mb2*k1*u1^2*u2*u3*vL + 4*Ib2*Mb2*k2*u1*u2*u3^2*vL - 8*Ib2*Mb2*k2*u1*u2^2*u3*vL + 4*Ib2*Mb2*k2*u1^2*u2*u3*vL + 4*Ib2*Mb2*k2*u1*u2*vL*wL^2 + 4*Ib2*Mb2*k1*u2*u3*vL*wL^2 + 2*L2^2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1^2*vL + 2*L1^2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^2*vL + 2*L2^2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^2*vL + 2*L1^2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u3^2*vL + 2*L1^2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*vL*wL^2 + 2*L2^2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*vL*wL^2 + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2^2*wL + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3^2*wL + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2^2*wL + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3^2*wL + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3^2*wL + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3^2*wL + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL^2*wL + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*vL^2*wL + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3^2*vL^2*wL + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL^2*wL + L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*wL - 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*wL^3 + 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*wL^3 + 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*wL - 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*wL^3 - 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*wL + 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3*wL^3 - L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*wL + 2*L1*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u2^2 + 2*L1*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u3^2 - 4*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u2^2 + 2*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1^2*u2 + 2*L2^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u2 - 2*L1*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2*u3^2 + 4*L1*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^2*u3 - 2*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1^2*u3 + 2*L1^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2*u3 - 2*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^2*u3 + 2*Ib2*L1*Mb2*k1*u1*u2^2*vL + 2*Ib2*L1*Mb2*k1*u1*u3^2*vL + 4*Ib2*L1*Mb2*k2*u1*u2^2*vL - 8*Ib2*L2*Mb2*k1*u1*u2^2*vL + 4*Ib2*L2*Mb2*k1*u1^2*u2*vL + 4*Ib2*L2^2*Mb2*k1*u1*u2*vL - 2*Ib2*L1*Mb2*k1*u2*u3^2*vL + 4*Ib2*L1*Mb2*k1*u2^2*u3*vL + 4*Ib2*L1*Mb2*k2*u1*u3^2*vL - 4*Ib2*L2*Mb2*k1*u1^2*u3*vL - 4*Ib2*L2*Mb2*k2*u1*u2^2*vL + 2*Ib2*L2*Mb2*k2*u1^2*u2*vL - 4*Ib2*L1*Mb2*k2*u2*u3^2*vL + 8*Ib2*L1*Mb2*k2*u2^2*u3*vL - 4*Ib2*L2*Mb2*k1*u2^2*u3*vL - 2*Ib2*L2*Mb2*k2*u1^2*u3*vL + 4*Ib2*L1^2*Mb2*k2*u2*u3*vL - 2*Ib2*L2*Mb2*k2*u2^2*u3*vL + 4*Ib2*L1*Mb2*k2*u1*vL*wL^2 - 4*Ib2*L1*Mb2*k2*u2*vL*wL^2 + 4*Ib2*L2*Mb2*k1*u2*vL*wL^2 - 4*Ib2*L2*Mb2*k1*u3*vL*wL^2 - 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u2^3*vL - 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2*vL^3 - 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2^3*vL - 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*u3*vL^3 - 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^3*u3*vL - 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^3*u3*vL - L1*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*wL - 2*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*wL + L1*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*wL - 2*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*wL - L1^2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*wL + L1^2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u3*wL + Ib2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^2 + Ib2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1^2 + Ib2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u3^2 + Ib2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^2 + K1*L1^2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1 - K1*L1^2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2 - K2*L1^2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2 + K2*L1^2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3 - 2*L1*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u2^2*vL - 2*L1*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u3^2*vL - 4*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2^2*vL + 8*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u2^2*vL - 4*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1^2*u2*vL - 4*L2^2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u2*vL + 2*L1*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*u3^2*vL - 4*L1*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^2*u3*vL - 4*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u3^2*vL + 4*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1^2*u3*vL + 4*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2^2*vL - 2*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1^2*u2*vL + 4*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2*u3^2*vL - 8*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^2*u3*vL + 4*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^2*u3*vL + 2*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1^2*u3*vL - 4*L1^2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2*u3*vL + 2*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^2*u3*vL - 4*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*vL*wL^2 + 4*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2*vL*wL^2 - 4*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*vL*wL^2 + 4*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u3*vL*wL^2 - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3^2*wL + 4*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*u3*wL - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*u3*wL - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3^2*wL + 4*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*u3*wL - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*u3*wL - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*vL^2*wL - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*vL^2*wL - 4*L1*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u2*u3 + 4*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u2*u3 - 2*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u2^3 - 2*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^3*u3 - 4*Ib2*L1*Mb2*k1*u1*u2*u3*vL - 8*Ib2*L1*Mb2*k2*u1*u2*u3*vL + 8*Ib2*L2*Mb2*k1*u1*u2*u3*vL + 4*Ib2*L2*Mb2*k2*u1*u2*u3*vL + K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1^2*u2^2 + K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1^2*u3^2 - K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*u2^2 + K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^2*u3^2 - K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*u3^2 - K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*u2^2 - K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*u3^2 - K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*u3^2 + K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1^2*u2^2 - K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*u3^2 + K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1^2*u3^2 + K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^2*u3^2 + 2*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^3 - 2*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^3 - 2*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^3 + 2*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^3 - 2*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^3 + 2*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^3 + 2*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^3 - 2*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^3 + Ib2*L1^2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2 - 2*L1*L2^2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*vL - 4*L1*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^2*vL + 2*L1*L2^2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*vL - 4*L1*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^2*vL - 2*L1^2*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2*vL + 2*L1^2*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u3*vL - L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*wL - L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3^2*wL - 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*wL + 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*wL - 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*wL - 2*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*wL + L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3^2*wL - 2*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*wL - 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3^2*wL + 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3*wL + 2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*wL - L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*wL + 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3^2*wL - 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*wL + 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*wL + L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3*wL - 2*L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*wL + L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*wL - 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*vL^2*wL + 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL^2*wL - 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL^2*wL + 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3*vL^2*wL + Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1^2*u2^2 + Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1^2*u3^2 + Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^2*u3^2 - 4*L1*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u2 + 4*L1*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u3 - 4*L1*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2*u3 + 2*Ib2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^3 - 2*Ib2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^3 - 4*Ib2*L1*L2*Mb2*k1*u1*u2*vL + 4*Ib2*L1*L2*Mb2*k1*u1*u3*vL - 4*Ib2*L1*L2*Mb2*k2*u1*u2*vL - 4*Ib2*L1*L2*Mb2*k1*u2*u3*vL + 4*Ib2*L1*L2*Mb2*k2*u1*u3*vL - 4*Ib2*L1*L2*Mb2*k2*u2*u3*vL + K1*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^2 + K1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1^2 + K1*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u3^2 - K1*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2 + K1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^2 - K1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2 - K1*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u3^2 - K1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2 - K2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2 - K2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2 - K2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u3^2 + K2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^2 - K2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2 + K2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1^2 + K2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u3^2 + K2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^2 - 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u2*u3^2*vL + 8*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u2^2*u3*vL - 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1^2*u2*u3*vL - 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2*u3^2*vL + 8*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2^2*u3*vL - 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1^2*u2*u3*vL - 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2*vL*wL^2 - 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*u3*vL*wL^2 - 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u2^3 + 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2^3 - 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^3*u3 + 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2^3 + 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^3*u3 - 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u2^3 + 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^3*u3 - 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^3*u3 + 4*L1*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u2*vL - 4*L1*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u3*vL + 4*L1*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2*vL + 4*L1*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*u3*vL - 4*L1*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u3*vL + 4*L1*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2*u3*vL + 2*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*wL + 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*wL - 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*wL - 2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*wL - 2*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u2*u3^2 + 4*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u2^2*u3 - 2*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1^2*u2*u3 - 2*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u2^2 - 2*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u3^2 + 2*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2^2 + 4*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u2^2 - 2*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1^2*u2 - 2*K1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u2 + 2*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2*u3^2 - 4*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^2*u3 + 2*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u3^2 + 2*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1^2*u3 - 4*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2^2 + 2*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*u2 - 2*K1*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2*u3 + 2*K1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2 + 2*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2^2 - 2*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*u3^2 + 4*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*u3 + 2*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^2*u3 - 2*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*u3 + 2*K1*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*u3 + 2*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u3^2 - 2*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u2^2 - 4*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2^2 + 2*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*u2 + 2*K2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2 - 2*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*u3 - 2*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*u3^2 + 4*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*u3 - 2*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u3^2 - 2*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*u3 + 4*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u2^2 - 2*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1^2*u2 + 2*K2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*u3 - 2*K2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u2 + 2*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2*u3^2 - 4*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^2*u3 - 2*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*u3 + 2*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1^2*u3 - 2*K2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2*u3 + 2*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^2*u3 + 2*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*wL - 2*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3*wL + 2*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*wL + 2*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*wL - 2*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3*wL + 2*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*wL - 2*Ib2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u2^2 - 2*Ib2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u3^2 + 4*Ib2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u2^2 - 2*Ib2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1^2*u2 - 2*Ib2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u2 + 2*Ib2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2*u3^2 - 4*Ib2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^2*u3 + 2*Ib2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1^2*u3 - 2*Ib2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2*u3 + 2*Ib2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^2*u3 - 2*K1*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1 - 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^2 + 2*K1*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2 + 2*K1*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1 - 2*K1*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2 + 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2 - 2*K1*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2 + 2*K1*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u3 + 2*K1*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2 + 2*K2*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1 - 2*K1*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u3 + 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2 - 2*K2*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2 - 2*K2*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1 + 2*K2*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2 - 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^2 + 2*K2*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2 - 2*K2*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u3 - 2*K2*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2 + 2*K2*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u3 + 4*L1*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u2*u3*vL + 8*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2*u3*vL - 8*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u2*u3*vL - 4*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2*u3*vL - 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u2*u3^2 + 4*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u2^2*u3 - 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1^2*u2*u3 + 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2*u3^2 - 4*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2^2*u3 + 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*u2*u3 + 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2*u3^2 - 4*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2^2*u3 + 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*u2*u3 - 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u2*u3^2 + 4*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u2^2*u3 - 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1^2*u2*u3 - 2*Ib2*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1 - 4*Ib2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^2 + 2*Ib2*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2 - 2*Ib2*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2 + 2*Ib2*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u3 + 4*Ib2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u2*u3 - 4*Ib2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u2*u3 + 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u2 - 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u3 - 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2 + 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2*u3 + 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u3 - 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2 - 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*u3 + 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u3 + 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u2 - 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*u3 - 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u3 + 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2*u3 + 4*Ib2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u2 - 4*Ib2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u3 + 4*Ib2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2*u3 + 4*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u2*u3 - 4*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2*u3 - 4*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u2*u3 + 4*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2*u3 - 4*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2*u3 + 4*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u2*u3 + 4*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2*u3 - 4*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u2*u3))/(Mb2*(dm^2*l2^2 - Ib2*Mb2)*(L1 - u1 + u2)^3*(L2 - u2 + u3)^2) - (2*(up2 - up3)*(L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*wL^3 - 2*Ib2*L2^2*Mb2*k1*vL^3 - dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^4 - 2*Ib2*Mb2*k1*u2^4*vL - 2*Ib2*Mb2*k2*u2^4*vL - 2*Ib2*Mb2*k1*u2^2*vL^3 - 2*Ib2*Mb2*k2*u1^2*vL^3 - 2*Ib2*Mb2*k1*u3^2*vL^3 - 2*Ib2*Mb2*k2*u2^2*vL^3 - 2*Ib2*L1^2*Mb2*k2*vL^3 + L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*wL^3 - L1^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^2 - L2^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1^2 - L1^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u3^2 - L2^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^2 - 2*Ib2*L2^2*Mb2*k1*u1^2*vL - 2*Ib2*L1^2*Mb2*k2*u2^2*vL - 2*Ib2*L2^2*Mb2*k1*u2^2*vL - 2*Ib2*L1^2*Mb2*k2*u3^2*vL - 2*Ib2*L1^2*Mb2*k2*vL*wL^2 - 2*Ib2*L2^2*Mb2*k1*vL*wL^2 + 2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^2*vL^3 + 2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1^2*vL^3 + 2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u3^2*vL^3 + 2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^2*vL^3 + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^4*wL + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^4*wL + 2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u2^3 + 2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^3*u3 + 4*Ib2*Mb2*k1*u1*u2^3*vL + 4*Ib2*Mb2*k2*u1*u2*vL^3 + 4*Ib2*Mb2*k2*u1*u2^3*vL + 4*Ib2*Mb2*k1*u2*u3*vL^3 + 4*Ib2*Mb2*k1*u2^3*u3*vL + 4*Ib2*Mb2*k2*u2^3*u3*vL - L1^2*L2^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2 + 2*L1^2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*vL^3 + 2*L2^2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*vL^3 + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*wL^3 + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*wL^3 + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3^2*wL^3 + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*wL^3 - dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1^2*u2^2 - dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1^2*u3^2 - dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^2*u3^2 - 2*L1*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^3 + 2*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^3 - 2*Ib2*Mb2*k1*u1^2*u2^2*vL - 2*Ib2*Mb2*k1*u1^2*u3^2*vL - 2*Ib2*Mb2*k2*u1^2*u2^2*vL - 2*Ib2*Mb2*k1*u2^2*u3^2*vL - 2*Ib2*Mb2*k2*u1^2*u3^2*vL - 2*Ib2*Mb2*k2*u2^2*u3^2*vL - 2*Ib2*Mb2*k1*u2^2*vL*wL^2 - 2*Ib2*Mb2*k2*u1^2*vL*wL^2 - 2*Ib2*Mb2*k1*u3^2*vL*wL^2 - 2*Ib2*Mb2*k2*u2^2*vL*wL^2 - 2*Ib2*L1*Mb2*k1*u2^3*vL + 4*Ib2*L1*Mb2*k2*u1*vL^3 - 4*Ib2*L1*Mb2*k2*u2*vL^3 - 4*Ib2*L1*Mb2*k2*u2^3*vL + 4*Ib2*L2*Mb2*k1*u2*vL^3 + 4*Ib2*L2*Mb2*k1*u2^3*vL - 4*Ib2*L2*Mb2*k1*u3*vL^3 + 2*Ib2*L2*Mb2*k2*u2^3*vL + 2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^4*vL + 2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^4*vL + L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*wL + L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*wL + L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*wL + L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u3^2*wL + L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*vL^2*wL + L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*vL^2*wL + K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^4 - K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^4 - K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^4 + K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^4 + 2*L1*L2^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1 + 4*L1*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^2 - 2*L1*L2^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2 + 2*L1^2*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2 - 2*L1^2*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u3 + 2*Ib2*L1*L2^2*Mb2*k1*u1*vL + 4*Ib2*L1*L2*Mb2*k1*u2^2*vL - 2*Ib2*L1*L2^2*Mb2*k1*u2*vL + 4*Ib2*L1*L2*Mb2*k2*u2^2*vL + 2*Ib2*L1^2*L2*Mb2*k2*u2*vL - 2*Ib2*L1^2*L2*Mb2*k2*u3*vL + 2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1^2*u2^2*vL + 2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1^2*u3^2*vL + 2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1^2*u2^2*vL + 2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^2*u3^2*vL + 2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1^2*u3^2*vL + 2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^2*u3^2*vL + 2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^2*vL*wL^2 + 2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1^2*vL*wL^2 + 2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u3^2*vL*wL^2 + 2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^2*vL*wL^2 + 2*L1*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^3*vL - 4*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*vL^3 + 4*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2*vL^3 + 4*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^3*vL - 4*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*vL^3 - 4*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^3*vL + 4*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u3*vL^3 - 2*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^3*vL - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^3*wL - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*wL^3 - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^3*wL - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*wL^3 - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*u3*wL - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*u3*wL + 2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u2*u3^2 - 4*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u2^2*u3 + 2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1^2*u2*u3 + Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^4 + 4*Ib2*Mb2*k1*u1*u2*u3^2*vL - 8*Ib2*Mb2*k1*u1*u2^2*u3*vL + 4*Ib2*Mb2*k1*u1^2*u2*u3*vL + 4*Ib2*Mb2*k2*u1*u2*u3^2*vL - 8*Ib2*Mb2*k2*u1*u2^2*u3*vL + 4*Ib2*Mb2*k2*u1^2*u2*u3*vL + 4*Ib2*Mb2*k2*u1*u2*vL*wL^2 + 4*Ib2*Mb2*k1*u2*u3*vL*wL^2 + 2*L2^2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1^2*vL + 2*L1^2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^2*vL + 2*L2^2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^2*vL + 2*L1^2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u3^2*vL + 2*L1^2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*vL*wL^2 + 2*L2^2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*vL*wL^2 + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2^2*wL + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3^2*wL + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2^2*wL + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3^2*wL + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3^2*wL + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3^2*wL + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL^2*wL + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*vL^2*wL + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3^2*vL^2*wL + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL^2*wL + L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*wL - 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*wL^3 + 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*wL^3 + 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*wL - 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*wL^3 - 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*wL + 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3*wL^3 - L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*wL + 2*L1*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u2^2 + 2*L1*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u3^2 - 4*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u2^2 + 2*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1^2*u2 + 2*L2^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u2 - 2*L1*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2*u3^2 + 4*L1*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^2*u3 - 2*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1^2*u3 + 2*L1^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2*u3 - 2*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^2*u3 + 2*Ib2*L1*Mb2*k1*u1*u2^2*vL + 2*Ib2*L1*Mb2*k1*u1*u3^2*vL + 4*Ib2*L1*Mb2*k2*u1*u2^2*vL - 8*Ib2*L2*Mb2*k1*u1*u2^2*vL + 4*Ib2*L2*Mb2*k1*u1^2*u2*vL + 4*Ib2*L2^2*Mb2*k1*u1*u2*vL - 2*Ib2*L1*Mb2*k1*u2*u3^2*vL + 4*Ib2*L1*Mb2*k1*u2^2*u3*vL + 4*Ib2*L1*Mb2*k2*u1*u3^2*vL - 4*Ib2*L2*Mb2*k1*u1^2*u3*vL - 4*Ib2*L2*Mb2*k2*u1*u2^2*vL + 2*Ib2*L2*Mb2*k2*u1^2*u2*vL - 4*Ib2*L1*Mb2*k2*u2*u3^2*vL + 8*Ib2*L1*Mb2*k2*u2^2*u3*vL - 4*Ib2*L2*Mb2*k1*u2^2*u3*vL - 2*Ib2*L2*Mb2*k2*u1^2*u3*vL + 4*Ib2*L1^2*Mb2*k2*u2*u3*vL - 2*Ib2*L2*Mb2*k2*u2^2*u3*vL + 4*Ib2*L1*Mb2*k2*u1*vL*wL^2 - 4*Ib2*L1*Mb2*k2*u2*vL*wL^2 + 4*Ib2*L2*Mb2*k1*u2*vL*wL^2 - 4*Ib2*L2*Mb2*k1*u3*vL*wL^2 - 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u2^3*vL - 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2*vL^3 - 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2^3*vL - 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*u3*vL^3 - 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^3*u3*vL - 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^3*u3*vL - L1*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*wL - 2*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*wL + L1*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*wL - 2*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*wL - L1^2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*wL + L1^2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u3*wL + Ib2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^2 + Ib2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1^2 + Ib2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u3^2 + Ib2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^2 + K1*L1^2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1 - K1*L1^2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2 - K2*L1^2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2 + K2*L1^2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3 - 2*L1*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u2^2*vL - 2*L1*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u3^2*vL - 4*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2^2*vL + 8*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u2^2*vL - 4*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1^2*u2*vL - 4*L2^2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u2*vL + 2*L1*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*u3^2*vL - 4*L1*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^2*u3*vL - 4*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u3^2*vL + 4*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1^2*u3*vL + 4*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2^2*vL - 2*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1^2*u2*vL + 4*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2*u3^2*vL - 8*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^2*u3*vL + 4*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^2*u3*vL + 2*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1^2*u3*vL - 4*L1^2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2*u3*vL + 2*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^2*u3*vL - 4*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*vL*wL^2 + 4*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2*vL*wL^2 - 4*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*vL*wL^2 + 4*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u3*vL*wL^2 - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3^2*wL + 4*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*u3*wL - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*u3*wL - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3^2*wL + 4*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*u3*wL - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*u3*wL - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*vL^2*wL - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*vL^2*wL - 4*L1*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u2*u3 + 4*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u2*u3 - 2*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u2^3 - 2*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^3*u3 - 4*Ib2*L1*Mb2*k1*u1*u2*u3*vL - 8*Ib2*L1*Mb2*k2*u1*u2*u3*vL + 8*Ib2*L2*Mb2*k1*u1*u2*u3*vL + 4*Ib2*L2*Mb2*k2*u1*u2*u3*vL + K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1^2*u2^2 + K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1^2*u3^2 - K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*u2^2 + K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^2*u3^2 - K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*u3^2 - K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*u2^2 - K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*u3^2 - K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*u3^2 + K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1^2*u2^2 - K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*u3^2 + K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1^2*u3^2 + K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^2*u3^2 + 2*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^3 - 2*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^3 - 2*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^3 + 2*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^3 - 2*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^3 + 2*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^3 + 2*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^3 - 2*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^3 + Ib2*L1^2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2 - 2*L1*L2^2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*vL - 4*L1*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2^2*vL + 2*L1*L2^2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*vL - 4*L1*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2^2*vL - 2*L1^2*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2*vL + 2*L1^2*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u3*vL - L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*wL - L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3^2*wL - 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*wL + 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*wL - 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*wL - 2*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*wL + L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3^2*wL - 2*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*wL - 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3^2*wL + 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3*wL + 2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*wL - L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*wL + 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3^2*wL - 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*wL + 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*wL + L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3*wL - 2*L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*wL + L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*wL - 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*vL^2*wL + 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL^2*wL - 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL^2*wL + 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3*vL^2*wL + Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1^2*u2^2 + Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1^2*u3^2 + Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^2*u3^2 - 4*L1*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u2 + 4*L1*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u3 - 4*L1*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2*u3 + 2*Ib2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^3 - 2*Ib2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^3 - 4*Ib2*L1*L2*Mb2*k1*u1*u2*vL + 4*Ib2*L1*L2*Mb2*k1*u1*u3*vL - 4*Ib2*L1*L2*Mb2*k2*u1*u2*vL - 4*Ib2*L1*L2*Mb2*k1*u2*u3*vL + 4*Ib2*L1*L2*Mb2*k2*u1*u3*vL - 4*Ib2*L1*L2*Mb2*k2*u2*u3*vL + K1*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^2 + K1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1^2 + K1*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u3^2 - K1*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2 + K1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^2 - K1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2 - K1*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u3^2 - K1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2 - K2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2 - K2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2 - K2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u3^2 + K2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^2 - K2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2 + K2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1^2 + K2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u3^2 + K2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^2 - 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u2*u3^2*vL + 8*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u2^2*u3*vL - 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1^2*u2*u3*vL - 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2*u3^2*vL + 8*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2^2*u3*vL - 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1^2*u2*u3*vL - 4*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2*vL*wL^2 - 4*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*u3*vL*wL^2 - 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u2^3 + 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2^3 - 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^3*u3 + 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2^3 + 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^3*u3 - 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u2^3 + 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^3*u3 - 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^3*u3 + 4*L1*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u2*vL - 4*L1*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u3*vL + 4*L1*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2*vL + 4*L1*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u2*u3*vL - 4*L1*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u3*vL + 4*L1*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u2*u3*vL + 2*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*wL + 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*wL - 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*wL - 2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*wL - 2*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u2*u3^2 + 4*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u2^2*u3 - 2*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1^2*u2*u3 - 2*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u2^2 - 2*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u3^2 + 2*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2^2 + 4*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u2^2 - 2*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1^2*u2 - 2*K1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u2 + 2*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2*u3^2 - 4*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^2*u3 + 2*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u3^2 + 2*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1^2*u3 - 4*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2^2 + 2*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*u2 - 2*K1*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2*u3 + 2*K1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2 + 2*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2^2 - 2*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*u3^2 + 4*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*u3 + 2*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^2*u3 - 2*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*u3 + 2*K1*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*u3 + 2*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u3^2 - 2*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u2^2 - 4*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2^2 + 2*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*u2 + 2*K2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2 - 2*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*u3 - 2*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*u3^2 + 4*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*u3 - 2*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u3^2 - 2*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*u3 + 4*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u2^2 - 2*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1^2*u2 + 2*K2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*u3 - 2*K2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u2 + 2*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2*u3^2 - 4*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^2*u3 - 2*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*u3 + 2*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1^2*u3 - 2*K2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2*u3 + 2*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^2*u3 + 2*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*wL - 2*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3*wL + 2*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*wL + 2*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*wL - 2*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3*wL + 2*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*wL - 2*Ib2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u2^2 - 2*Ib2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u3^2 + 4*Ib2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u2^2 - 2*Ib2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1^2*u2 - 2*Ib2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u2 + 2*Ib2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2*u3^2 - 4*Ib2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^2*u3 + 2*Ib2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1^2*u3 - 2*Ib2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2*u3 + 2*Ib2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^2*u3 - 2*K1*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1 - 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^2 + 2*K1*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2 + 2*K1*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1 - 2*K1*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2 + 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2 - 2*K1*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2 + 2*K1*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u3 + 2*K1*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2 + 2*K2*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1 - 2*K1*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u3 + 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2 - 2*K2*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2 - 2*K2*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1 + 2*K2*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2 - 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^2 + 2*K2*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2 - 2*K2*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u3 - 2*K2*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2 + 2*K2*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u3 + 4*L1*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u2*u3*vL + 8*L1*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2*u3*vL - 8*L2*dm^2*k1*l2^2*cos(alfam2 + teta2)^2*u1*u2*u3*vL - 4*L2*dm^2*k2*l2^2*cos(alfam2 + teta2)^2*u1*u2*u3*vL - 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u2*u3^2 + 4*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u2^2*u3 - 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1^2*u2*u3 + 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2*u3^2 - 4*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2^2*u3 + 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*u2*u3 + 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2*u3^2 - 4*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2^2*u3 + 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*u2*u3 - 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u2*u3^2 + 4*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u2^2*u3 - 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1^2*u2*u3 - 2*Ib2*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1 - 4*Ib2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^2 + 2*Ib2*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2 - 2*Ib2*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2 + 2*Ib2*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u3 + 4*Ib2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u2*u3 - 4*Ib2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u2*u3 + 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u2 - 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u3 - 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2 + 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2*u3 + 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u3 - 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2 - 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*u3 + 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u3 + 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u2 - 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*u3 - 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u3 + 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2*u3 + 4*Ib2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u2 - 4*Ib2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u3 + 4*Ib2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2*u3 + 4*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u2*u3 - 4*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2*u3 - 4*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u2*u3 + 4*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2*u3 - 4*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2*u3 + 4*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u2*u3 + 4*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2*u3 - 4*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u2*u3))/(Mb2*(dm^2*l2^2 - Ib2*Mb2)*(L1 - u1 + u2)^2*(L2 - u2 + u3)^3);
    -(dm^2*k1*l2^2*u2^4*wpL + dm^2*k2*l2^2*u2^4*wpL - 2*Ib2*Mb2*k1*u2^4*wpL - 2*Ib2*Mb2*k2*u2^4*wpL + L2^2*dm^2*k1*l2^2*u1^2*wpL + L1^2*dm^2*k2*l2^2*u2^2*wpL + L2^2*dm^2*k1*l2^2*u2^2*wpL + L1^2*dm^2*k2*l2^2*u3^2*wpL + L1^2*dm^2*k2*l2^2*vL^2*wpL + L2^2*dm^2*k1*l2^2*vL^2*wpL + 3*L1^2*dm^2*k2*l2^2*wL^2*wpL + 3*L2^2*dm^2*k1*l2^2*wL^2*wpL - 2*Ib2*L2^2*Mb2*k1*u1^2*wpL - 2*Ib2*L1^2*Mb2*k2*u2^2*wpL - 2*Ib2*L2^2*Mb2*k1*u2^2*wpL - 2*Ib2*L1^2*Mb2*k2*u3^2*wpL - 2*Ib2*L1^2*Mb2*k2*vL^2*wpL - 2*Ib2*L2^2*Mb2*k1*vL^2*wpL - 6*Ib2*L1^2*Mb2*k2*wL^2*wpL - 6*Ib2*L2^2*Mb2*k1*wL^2*wpL - dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^4*wpL - dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^4*wpL + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^4*vpL + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^4*vpL - dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^4*tetap2 - 2*dm^2*k1*l2^2*u1*u2^3*wpL - 2*dm^2*k1*l2^2*u2^3*wL*up1 + 2*dm^2*k2*l2^2*u1*wL^3*up1 + 2*dm^2*k1*l2^2*u2*wL^3*up2 + 4*dm^2*k1*l2^2*u2^3*wL*up2 - 2*dm^2*k2*l2^2*u1*u2^3*wpL - 2*dm^2*k2*l2^2*u1*wL^3*up2 - 2*dm^2*k2*l2^2*u2*wL^3*up1 - 2*dm^2*k2*l2^2*u2^3*wL*up1 - 2*dm^2*k1*l2^2*u2*wL^3*up3 - 2*dm^2*k1*l2^2*u3*wL^3*up2 - 2*dm^2*k1*l2^2*u2^3*u3*wpL - 2*dm^2*k1*l2^2*u2^3*wL*up3 + 2*dm^2*k2*l2^2*u2*wL^3*up2 + 4*dm^2*k2*l2^2*u2^3*wL*up2 + 2*dm^2*k1*l2^2*u3*wL^3*up3 - 2*dm^2*k2*l2^2*u2^3*u3*wpL - 2*dm^2*k2*l2^2*u2^3*wL*up3 + 4*Ib2*Mb2*k1*u1*u2^3*wpL + 4*Ib2*Mb2*k1*u2^3*wL*up1 - 4*Ib2*Mb2*k2*u1*wL^3*up1 - 4*Ib2*Mb2*k1*u2*wL^3*up2 - 8*Ib2*Mb2*k1*u2^3*wL*up2 + 4*Ib2*Mb2*k2*u1*u2^3*wpL + 4*Ib2*Mb2*k2*u1*wL^3*up2 + 4*Ib2*Mb2*k2*u2*wL^3*up1 + 4*Ib2*Mb2*k2*u2^3*wL*up1 + 4*Ib2*Mb2*k1*u2*wL^3*up3 + 4*Ib2*Mb2*k1*u3*wL^3*up2 + 4*Ib2*Mb2*k1*u2^3*u3*wpL + 4*Ib2*Mb2*k1*u2^3*wL*up3 - 4*Ib2*Mb2*k2*u2*wL^3*up2 - 8*Ib2*Mb2*k2*u2^3*wL*up2 - 4*Ib2*Mb2*k1*u3*wL^3*up3 + 4*Ib2*Mb2*k2*u2^3*u3*wpL + 4*Ib2*Mb2*k2*u2^3*wL*up3 + 2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^3*up1 - 4*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^3*up2 + 2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^3*up3 + dm^2*k1*l2^2*u1^2*u2^2*wpL + dm^2*k1*l2^2*u1^2*u3^2*wpL + dm^2*k2*l2^2*u1^2*u2^2*wpL + dm^2*k1*l2^2*u2^2*u3^2*wpL + dm^2*k2*l2^2*u1^2*u3^2*wpL + dm^2*k2*l2^2*u2^2*u3^2*wpL + dm^2*k1*l2^2*u2^2*vL^2*wpL + dm^2*k2*l2^2*u1^2*vL^2*wpL + dm^2*k1*l2^2*u3^2*vL^2*wpL + dm^2*k2*l2^2*u2^2*vL^2*wpL + 3*dm^2*k1*l2^2*u2^2*wL^2*wpL + 3*dm^2*k2*l2^2*u1^2*wL^2*wpL + 3*dm^2*k1*l2^2*u3^2*wL^2*wpL + 3*dm^2*k2*l2^2*u2^2*wL^2*wpL + L1*dm^2*k1*l2^2*u2^3*wpL - 2*L1*dm^2*k2*l2^2*wL^3*up1 + 2*L1*dm^2*k2*l2^2*u2^3*wpL + 2*L1*dm^2*k2*l2^2*wL^3*up2 - 2*L2*dm^2*k1*l2^2*u2^3*wpL - 2*L2*dm^2*k1*l2^2*wL^3*up2 + 2*L2*dm^2*k1*l2^2*wL^3*up3 - L2*dm^2*k2*l2^2*u2^3*wpL - 2*Ib2*Mb2*k1*u1^2*u2^2*wpL - 2*Ib2*Mb2*k1*u1^2*u3^2*wpL - 2*Ib2*Mb2*k2*u1^2*u2^2*wpL - 2*Ib2*Mb2*k1*u2^2*u3^2*wpL - 2*Ib2*Mb2*k2*u1^2*u3^2*wpL - 2*Ib2*Mb2*k2*u2^2*u3^2*wpL - 2*Ib2*Mb2*k1*u2^2*vL^2*wpL - 2*Ib2*Mb2*k2*u1^2*vL^2*wpL - 2*Ib2*Mb2*k1*u3^2*vL^2*wpL - 2*Ib2*Mb2*k2*u2^2*vL^2*wpL - 6*Ib2*Mb2*k1*u2^2*wL^2*wpL - 6*Ib2*Mb2*k2*u1^2*wL^2*wpL - 6*Ib2*Mb2*k1*u3^2*wL^2*wpL - 6*Ib2*Mb2*k2*u2^2*wL^2*wpL - 2*Ib2*L1*Mb2*k1*u2^3*wpL + 4*Ib2*L1*Mb2*k2*wL^3*up1 - 4*Ib2*L1*Mb2*k2*u2^3*wpL - 4*Ib2*L1*Mb2*k2*wL^3*up2 + 4*Ib2*L2*Mb2*k1*u2^3*wpL + 4*Ib2*L2*Mb2*k1*wL^3*up2 - 4*Ib2*L2*Mb2*k1*wL^3*up3 + 2*Ib2*L2*Mb2*k2*u2^3*wpL - 2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2*u2^4*tetapp2 + 2*Ib2*L1*L2^2*Mb2*k1*u1*wpL + 2*Ib2*L1*L2^2*Mb2*k1*wL*up1 + 4*Ib2*L1*L2*Mb2*k1*u2^2*wpL - 2*Ib2*L1*L2^2*Mb2*k1*u2*wpL - 2*Ib2*L1*L2^2*Mb2*k1*wL*up2 + 4*Ib2*L1*L2*Mb2*k2*u2^2*wpL + 2*Ib2*L1^2*L2*Mb2*k2*u2*wpL + 2*Ib2*L1^2*L2*Mb2*k2*wL*up2 - 2*Ib2*L1^2*L2*Mb2*k2*u3*wpL - 2*Ib2*L1^2*L2*Mb2*k2*wL*up3 - 2*L1^2*L2^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2*tetapp2 + 2*L1*L2^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*up1 - 2*L1*L2^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*up2 + 2*L1^2*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*up2 - 2*L1^2*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*up3 + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^4*vL*tetap2 + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^4*vL*tetap2 + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^3*wpL + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^3*wL*up1 - 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*wL^3*up1 - 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*wL^3*up2 - 4*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^3*wL*up2 + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^3*wpL + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*wL^3*up2 + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*wL^3*up1 + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^3*wL*up1 + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*wL^3*up3 + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u3*wL^3*up2 + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^3*u3*wpL + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^3*wL*up3 - 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*wL^3*up2 - 4*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^3*wL*up2 - 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u3*wL^3*up3 + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^3*u3*wpL + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^3*wL*up3 - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^3*vpL - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*vL*up1 + 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*vL^3*up1 + 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL^3*up2 + 4*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*vL*up2 - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^3*vpL - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*vL^3*up2 - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL^3*up1 - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*vL*up1 - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL^3*up3 - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3*vL^3*up2 - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*u3*vpL - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*vL*up3 + 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL^3*up2 + 4*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*vL*up2 + 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3*vL^3*up3 - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*u3*vpL - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*vL*up3 + 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^4*wL*tetap2 + 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^4*wL*tetap2 + 2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u2^3*tetap2 + 2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^3*u3*tetap2 + 2*dm^2*k1*l2^2*u1*u2^2*wL*up1 - 6*dm^2*k1*l2^2*u1*u2^2*wL*up2 + 2*dm^2*k1*l2^2*u1*u3^2*wL*up1 + 2*dm^2*k1*l2^2*u1^2*u2*wL*up2 + 2*dm^2*k2*l2^2*u1*u2^2*wL*up1 - 2*dm^2*k1*l2^2*u1*u2*u3^2*wpL + 4*dm^2*k1*l2^2*u1*u2^2*u3*wpL + 4*dm^2*k1*l2^2*u1*u2^2*wL*up3 - 2*dm^2*k1*l2^2*u1*u3^2*wL*up2 - 2*dm^2*k1*l2^2*u2*u3^2*wL*up1 - 2*dm^2*k1*l2^2*u1^2*u2*u3*wpL - 2*dm^2*k1*l2^2*u1^2*u2*wL*up3 - 2*dm^2*k1*l2^2*u1^2*u3*wL*up2 + 4*dm^2*k1*l2^2*u2^2*u3*wL*up1 - 6*dm^2*k2*l2^2*u1*u2^2*wL*up2 + 2*dm^2*k2*l2^2*u1*u3^2*wL*up1 + 2*dm^2*k2*l2^2*u1^2*u2*wL*up2 + 2*dm^2*k1*l2^2*u2*u3^2*wL*up2 + 2*dm^2*k1*l2^2*u1^2*u3*wL*up3 - 6*dm^2*k1*l2^2*u2^2*u3*wL*up2 - 2*dm^2*k2*l2^2*u1*u2*u3^2*wpL + 4*dm^2*k2*l2^2*u1*u2^2*u3*wpL + 4*dm^2*k2*l2^2*u1*u2^2*wL*up3 - 2*dm^2*k2*l2^2*u1*u3^2*wL*up2 - 2*dm^2*k2*l2^2*u2*u3^2*wL*up1 - 2*dm^2*k2*l2^2*u1^2*u2*u3*wpL - 2*dm^2*k2*l2^2*u1^2*u2*wL*up3 - 2*dm^2*k2*l2^2*u1^2*u3*wL*up2 + 4*dm^2*k2*l2^2*u2^2*u3*wL*up1 + 2*dm^2*k1*l2^2*u2^2*u3*wL*up3 + 2*dm^2*k2*l2^2*u2*u3^2*wL*up2 + 2*dm^2*k2*l2^2*u1^2*u3*wL*up3 - 6*dm^2*k2*l2^2*u2^2*u3*wL*up2 + 2*dm^2*k2*l2^2*u2^2*u3*wL*up3 + 2*dm^2*k2*l2^2*u1*vL^2*wL*up1 + 2*dm^2*k1*l2^2*u2*vL^2*wL*up2 - 2*dm^2*k2*l2^2*u1*u2*vL^2*wpL - 2*dm^2*k2*l2^2*u1*vL^2*wL*up2 - 2*dm^2*k2*l2^2*u2*vL^2*wL*up1 - 2*dm^2*k1*l2^2*u2*u3*vL^2*wpL - 2*dm^2*k1*l2^2*u2*vL^2*wL*up3 - 2*dm^2*k1*l2^2*u3*vL^2*wL*up2 + 2*dm^2*k2*l2^2*u2*vL^2*wL*up2 + 2*dm^2*k1*l2^2*u3*vL^2*wL*up3 - 6*dm^2*k2*l2^2*u1*u2*wL^2*wpL - 6*dm^2*k1*l2^2*u2*u3*wL^2*wpL + 2*dm^2*k1*l2^2*u2^2*vL*wL*vpL + 2*dm^2*k2*l2^2*u1^2*vL*wL*vpL + 2*dm^2*k1*l2^2*u3^2*vL*wL*vpL + 2*dm^2*k2*l2^2*u2^2*vL*wL*vpL - 4*Ib2*Mb2*k1*u1*u2^2*wL*up1 + 12*Ib2*Mb2*k1*u1*u2^2*wL*up2 - 4*Ib2*Mb2*k1*u1*u3^2*wL*up1 - 4*Ib2*Mb2*k1*u1^2*u2*wL*up2 - 4*Ib2*Mb2*k2*u1*u2^2*wL*up1 + 4*Ib2*Mb2*k1*u1*u2*u3^2*wpL - 8*Ib2*Mb2*k1*u1*u2^2*u3*wpL - 8*Ib2*Mb2*k1*u1*u2^2*wL*up3 + 4*Ib2*Mb2*k1*u1*u3^2*wL*up2 + 4*Ib2*Mb2*k1*u2*u3^2*wL*up1 + 4*Ib2*Mb2*k1*u1^2*u2*u3*wpL + 4*Ib2*Mb2*k1*u1^2*u2*wL*up3 + 4*Ib2*Mb2*k1*u1^2*u3*wL*up2 - 8*Ib2*Mb2*k1*u2^2*u3*wL*up1 + 12*Ib2*Mb2*k2*u1*u2^2*wL*up2 - 4*Ib2*Mb2*k2*u1*u3^2*wL*up1 - 4*Ib2*Mb2*k2*u1^2*u2*wL*up2 - 4*Ib2*Mb2*k1*u2*u3^2*wL*up2 - 4*Ib2*Mb2*k1*u1^2*u3*wL*up3 + 12*Ib2*Mb2*k1*u2^2*u3*wL*up2 + 4*Ib2*Mb2*k2*u1*u2*u3^2*wpL - 8*Ib2*Mb2*k2*u1*u2^2*u3*wpL - 8*Ib2*Mb2*k2*u1*u2^2*wL*up3 + 4*Ib2*Mb2*k2*u1*u3^2*wL*up2 + 4*Ib2*Mb2*k2*u2*u3^2*wL*up1 + 4*Ib2*Mb2*k2*u1^2*u2*u3*wpL + 4*Ib2*Mb2*k2*u1^2*u2*wL*up3 + 4*Ib2*Mb2*k2*u1^2*u3*wL*up2 - 8*Ib2*Mb2*k2*u2^2*u3*wL*up1 - 4*Ib2*Mb2*k1*u2^2*u3*wL*up3 - 4*Ib2*Mb2*k2*u2*u3^2*wL*up2 - 4*Ib2*Mb2*k2*u1^2*u3*wL*up3 + 12*Ib2*Mb2*k2*u2^2*u3*wL*up2 - 4*Ib2*Mb2*k2*u2^2*u3*wL*up3 - 4*Ib2*Mb2*k2*u1*vL^2*wL*up1 - 4*Ib2*Mb2*k1*u2*vL^2*wL*up2 + 4*Ib2*Mb2*k2*u1*u2*vL^2*wpL + 4*Ib2*Mb2*k2*u1*vL^2*wL*up2 + 4*Ib2*Mb2*k2*u2*vL^2*wL*up1 + 4*Ib2*Mb2*k1*u2*u3*vL^2*wpL + 4*Ib2*Mb2*k1*u2*vL^2*wL*up3 + 4*Ib2*Mb2*k1*u3*vL^2*wL*up2 - 4*Ib2*Mb2*k2*u2*vL^2*wL*up2 - 4*Ib2*Mb2*k1*u3*vL^2*wL*up3 + 12*Ib2*Mb2*k2*u1*u2*wL^2*wpL + 12*Ib2*Mb2*k1*u2*u3*wL^2*wpL - 4*Ib2*Mb2*k1*u2^2*vL*wL*vpL - 4*Ib2*Mb2*k2*u1^2*vL*wL*vpL - 4*Ib2*Mb2*k1*u3^2*vL*wL*vpL - 4*Ib2*Mb2*k2*u2^2*vL*wL*vpL - 2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2*u1^2*u2^2*tetapp2 - 2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2*u1^2*u3^2*tetapp2 - 2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2*u2^2*u3^2*tetapp2 - 2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u2^2*up1 + 6*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u2^2*up2 - 2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u3^2*up1 - 2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1^2*u2*up2 - 4*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u2^2*up3 + 2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u3^2*up2 + 2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2*u3^2*up1 + 2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1^2*u2*up3 + 2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1^2*u3*up2 - 4*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^2*u3*up1 - 2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2*u3^2*up2 - 2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1^2*u3*up3 + 6*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^2*u3*up2 - 2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^2*u3*up3 - 4*L1*dm^3*l2^3*sin(alfam2 + teta2)*tetap2*u2^3*tetapp2 + 4*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2*u2^3*tetapp2 - L1^2*L2^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*tetap2 + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*vL^3*tetap2 + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*vL^3*tetap2 + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u3^2*vL^3*tetap2 + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*vL^3*tetap2 - dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u2^2*wpL - dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u3^2*wpL - dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u2^2*wpL - dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*u3^2*wpL - dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u3^2*wpL - dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*u3^2*wpL - dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*vL^2*wpL - dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*vL^2*wpL - dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u3^2*vL^2*wpL - dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*vL^2*wpL - 3*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*wL^2*wpL - 3*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*wL^2*wpL - 3*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u3^2*wL^2*wpL - 3*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*wL^2*wpL - L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^3*wpL + 2*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*wL^3*up1 - 2*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^3*wpL - 2*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*wL^3*up2 + 2*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^3*wpL + 2*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*wL^3*up2 - 2*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*wL^3*up3 + L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^3*wpL + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2^2*vpL + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3^2*vpL + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2^2*vpL + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3^2*vpL + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3^2*vpL + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3^2*vpL + 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*wL^3*tetap2 + 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*wL^3*tetap2 + 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3^2*wL^3*tetap2 + 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*wL^3*tetap2 + 3*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL^2*vpL + 3*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*vL^2*vpL + 3*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3^2*vL^2*vpL + 3*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL^2*vpL + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*wL^2*vpL + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*wL^2*vpL + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3^2*wL^2*vpL + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*wL^2*vpL + L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*vpL - 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*vL^3*up1 + 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*vpL + 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*vL^3*up2 - 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*vpL - 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*vL^3*up2 + 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*vL^3*up3 - L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*vpL - dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1^2*u2^2*tetap2 - dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1^2*u3^2*tetap2 - dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^2*u3^2*tetap2 - 2*L1*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^3*tetap2 + 2*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^3*tetap2 - L1*dm^2*k1*l2^2*u1*u2^2*wpL - L1*dm^2*k1*l2^2*u2^2*wL*up1 + 2*L2^2*dm^2*k1*l2^2*u1*wL*up1 - L1*dm^2*k1*l2^2*u1*u3^2*wpL + 3*L1*dm^2*k1*l2^2*u2^2*wL*up2 - L1*dm^2*k1*l2^2*u3^2*wL*up1 - 2*L1*dm^2*k2*l2^2*u1*u2^2*wpL - 2*L1*dm^2*k2*l2^2*u2^2*wL*up1 + 4*L2*dm^2*k1*l2^2*u1*u2^2*wpL - 2*L2*dm^2*k1*l2^2*u1^2*u2*wpL - 2*L2*dm^2*k1*l2^2*u1^2*wL*up2 + 4*L2*dm^2*k1*l2^2*u2^2*wL*up1 - 2*L2^2*dm^2*k1*l2^2*u1*u2*wpL - 2*L2^2*dm^2*k1*l2^2*u1*wL*up2 - 2*L2^2*dm^2*k1*l2^2*u2*wL*up1 + L1*dm^2*k1*l2^2*u2*u3^2*wpL - 2*L1*dm^2*k1*l2^2*u2^2*u3*wpL - 2*L1*dm^2*k1*l2^2*u2^2*wL*up3 + L1*dm^2*k1*l2^2*u3^2*wL*up2 - 2*L1*dm^2*k2*l2^2*u1*u3^2*wpL + 6*L1*dm^2*k2*l2^2*u2^2*wL*up2 - 2*L1*dm^2*k2*l2^2*u3^2*wL*up1 + 2*L2*dm^2*k1*l2^2*u1^2*u3*wpL + 2*L2*dm^2*k1*l2^2*u1^2*wL*up3 - 6*L2*dm^2*k1*l2^2*u2^2*wL*up2 + 2*L2*dm^2*k2*l2^2*u1*u2^2*wpL - L2*dm^2*k2*l2^2*u1^2*u2*wpL - L2*dm^2*k2*l2^2*u1^2*wL*up2 + 2*L2*dm^2*k2*l2^2*u2^2*wL*up1 + 2*L1^2*dm^2*k2*l2^2*u2*wL*up2 + 2*L2^2*dm^2*k1*l2^2*u2*wL*up2 + 2*L1*dm^2*k2*l2^2*u2*u3^2*wpL - 4*L1*dm^2*k2*l2^2*u2^2*u3*wpL - 4*L1*dm^2*k2*l2^2*u2^2*wL*up3 + 2*L1*dm^2*k2*l2^2*u3^2*wL*up2 + 2*L2*dm^2*k1*l2^2*u2^2*u3*wpL + 2*L2*dm^2*k1*l2^2*u2^2*wL*up3 + L2*dm^2*k2*l2^2*u1^2*u3*wpL + L2*dm^2*k2*l2^2*u1^2*wL*up3 - 3*L2*dm^2*k2*l2^2*u2^2*wL*up2 - 2*L1^2*dm^2*k2*l2^2*u2*u3*wpL - 2*L1^2*dm^2*k2*l2^2*u2*wL*up3 - 2*L1^2*dm^2*k2*l2^2*u3*wL*up2 + L2*dm^2*k2*l2^2*u2^2*u3*wpL + L2*dm^2*k2*l2^2*u2^2*wL*up3 + 2*L1^2*dm^2*k2*l2^2*u3*wL*up3 - 2*L1*dm^2*k2*l2^2*u1*vL^2*wpL - 2*L1*dm^2*k2*l2^2*vL^2*wL*up1 + 2*L1*dm^2*k2*l2^2*u2*vL^2*wpL + 2*L1*dm^2*k2*l2^2*vL^2*wL*up2 - 2*L2*dm^2*k1*l2^2*u2*vL^2*wpL - 2*L2*dm^2*k1*l2^2*vL^2*wL*up2 + 2*L2*dm^2*k1*l2^2*u3*vL^2*wpL + 2*L2*dm^2*k1*l2^2*vL^2*wL*up3 - 6*L1*dm^2*k2*l2^2*u1*wL^2*wpL + 6*L1*dm^2*k2*l2^2*u2*wL^2*wpL - 6*L2*dm^2*k1*l2^2*u2*wL^2*wpL + 6*L2*dm^2*k1*l2^2*u3*wL^2*wpL + 2*L1^2*dm^2*k2*l2^2*vL*wL*vpL + 2*L2^2*dm^2*k1*l2^2*vL*wL*vpL + 2*Ib2*L1*Mb2*k1*u1*u2^2*wpL + 2*Ib2*L1*Mb2*k1*u2^2*wL*up1 - 4*Ib2*L2^2*Mb2*k1*u1*wL*up1 + 2*Ib2*L1*Mb2*k1*u1*u3^2*wpL - 6*Ib2*L1*Mb2*k1*u2^2*wL*up2 + 2*Ib2*L1*Mb2*k1*u3^2*wL*up1 + 4*Ib2*L1*Mb2*k2*u1*u2^2*wpL + 4*Ib2*L1*Mb2*k2*u2^2*wL*up1 - 8*Ib2*L2*Mb2*k1*u1*u2^2*wpL + 4*Ib2*L2*Mb2*k1*u1^2*u2*wpL + 4*Ib2*L2*Mb2*k1*u1^2*wL*up2 - 8*Ib2*L2*Mb2*k1*u2^2*wL*up1 + 4*Ib2*L2^2*Mb2*k1*u1*u2*wpL + 4*Ib2*L2^2*Mb2*k1*u1*wL*up2 + 4*Ib2*L2^2*Mb2*k1*u2*wL*up1 - 2*Ib2*L1*Mb2*k1*u2*u3^2*wpL + 4*Ib2*L1*Mb2*k1*u2^2*u3*wpL + 4*Ib2*L1*Mb2*k1*u2^2*wL*up3 - 2*Ib2*L1*Mb2*k1*u3^2*wL*up2 + 4*Ib2*L1*Mb2*k2*u1*u3^2*wpL - 12*Ib2*L1*Mb2*k2*u2^2*wL*up2 + 4*Ib2*L1*Mb2*k2*u3^2*wL*up1 - 4*Ib2*L2*Mb2*k1*u1^2*u3*wpL - 4*Ib2*L2*Mb2*k1*u1^2*wL*up3 + 12*Ib2*L2*Mb2*k1*u2^2*wL*up2 - 4*Ib2*L2*Mb2*k2*u1*u2^2*wpL + 2*Ib2*L2*Mb2*k2*u1^2*u2*wpL + 2*Ib2*L2*Mb2*k2*u1^2*wL*up2 - 4*Ib2*L2*Mb2*k2*u2^2*wL*up1 - 4*Ib2*L1^2*Mb2*k2*u2*wL*up2 - 4*Ib2*L2^2*Mb2*k1*u2*wL*up2 - 4*Ib2*L1*Mb2*k2*u2*u3^2*wpL + 8*Ib2*L1*Mb2*k2*u2^2*u3*wpL + 8*Ib2*L1*Mb2*k2*u2^2*wL*up3 - 4*Ib2*L1*Mb2*k2*u3^2*wL*up2 - 4*Ib2*L2*Mb2*k1*u2^2*u3*wpL - 4*Ib2*L2*Mb2*k1*u2^2*wL*up3 - 2*Ib2*L2*Mb2*k2*u1^2*u3*wpL - 2*Ib2*L2*Mb2*k2*u1^2*wL*up3 + 6*Ib2*L2*Mb2*k2*u2^2*wL*up2 + 4*Ib2*L1^2*Mb2*k2*u2*u3*wpL + 4*Ib2*L1^2*Mb2*k2*u2*wL*up3 + 4*Ib2*L1^2*Mb2*k2*u3*wL*up2 - 2*Ib2*L2*Mb2*k2*u2^2*u3*wpL - 2*Ib2*L2*Mb2*k2*u2^2*wL*up3 - 4*Ib2*L1^2*Mb2*k2*u3*wL*up3 + 4*Ib2*L1*Mb2*k2*u1*vL^2*wpL + 4*Ib2*L1*Mb2*k2*vL^2*wL*up1 - 4*Ib2*L1*Mb2*k2*u2*vL^2*wpL - 4*Ib2*L1*Mb2*k2*vL^2*wL*up2 + 4*Ib2*L2*Mb2*k1*u2*vL^2*wpL + 4*Ib2*L2*Mb2*k1*vL^2*wL*up2 - 4*Ib2*L2*Mb2*k1*u3*vL^2*wpL - 4*Ib2*L2*Mb2*k1*vL^2*wL*up3 + 12*Ib2*L1*Mb2*k2*u1*wL^2*wpL - 12*Ib2*L1*Mb2*k2*u2*wL^2*wpL + 12*Ib2*L2*Mb2*k1*u2*wL^2*wpL - 12*Ib2*L2*Mb2*k1*u3*wL^2*wpL - 4*Ib2*L1^2*Mb2*k2*vL*wL*vpL - 4*Ib2*L2^2*Mb2*k1*vL*wL*vpL - 2*L1^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2*u2^2*tetapp2 - 2*L2^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2*u1^2*tetapp2 - 2*L1^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2*u3^2*tetapp2 - 2*L2^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2*u2^2*tetapp2 + 2*L1*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^2*up1 - 2*L2^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*up1 - 6*L1*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^2*up2 + 2*L1*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u3^2*up1 + 2*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1^2*up2 - 4*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^2*up1 - 2*L1^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2*up2 + 2*L2^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*up2 + 2*L2^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2*up1 + 4*L1*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^2*up3 - 2*L1*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u3^2*up2 - 2*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1^2*up3 + 6*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^2*up2 + 2*L1^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2*up3 + 2*L1^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u3*up2 - 2*L2^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2*up2 - 2*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^2*up3 - 2*L1^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u3*up3 + 2*L1^2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*vL^3*tetap2 + 2*L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*vL^3*tetap2 - L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*wpL - L1^2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*wpL - L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*wpL - L1^2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u3^2*wpL - L1^2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*vL^2*wpL - L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*vL^2*wpL - K1*Mb2*dm*l2*cos(alfam2 + teta2)*u2^4*tetap1 + K1*Mb2*dm*l2*cos(alfam2 + teta2)*u2^4*tetap2 + K2*Mb2*dm*l2*cos(alfam2 + teta2)*u2^4*tetap2 - K2*Mb2*dm*l2*cos(alfam2 + teta2)*u2^4*tetap3 - 3*L1^2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*wL^2*wpL - 3*L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*wL^2*wpL + 4*dm^3*l2^3*sin(alfam2 + teta2)*tetap2*u1*u2^3*tetapp2 + 4*dm^3*l2^3*sin(alfam2 + teta2)*tetap2*u2^3*u3*tetapp2 + L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*vpL + L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vpL + L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vpL + L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u3^2*vpL + 2*L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*wL^3*tetap2 + 2*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*wL^3*tetap2 + 3*L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*vL^2*vpL + 3*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*vL^2*vpL + L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*wL^2*vpL + L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*wL^2*vpL - L1^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^2*tetap2 - L2^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1^2*tetap2 - L1^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u3^2*tetap2 - L2^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^2*tetap2 - L1*L2^2*dm^2*k1*l2^2*u1*wpL - L1*L2^2*dm^2*k1*l2^2*wL*up1 - 2*L1*L2*dm^2*k1*l2^2*u2^2*wpL + L1*L2^2*dm^2*k1*l2^2*u2*wpL + L1*L2^2*dm^2*k1*l2^2*wL*up2 - 2*L1*L2*dm^2*k2*l2^2*u2^2*wpL - L1^2*L2*dm^2*k2*l2^2*u2*wpL - L1^2*L2*dm^2*k2*l2^2*wL*up2 + L1^2*L2*dm^2*k2*l2^2*u3*wpL + L1^2*L2*dm^2*k2*l2^2*wL*up3 - 4*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^3*vL*tetap2 - 4*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*vL^3*tetap2 - 4*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^3*vL*tetap2 - 4*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3*vL^3*tetap2 - 4*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^3*u3*vL*tetap2 - 4*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^3*u3*vL*tetap2 - 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^2*wL*up1 + 6*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^2*wL*up2 - 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u3^2*wL*up1 - 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u2*wL*up2 - 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^2*wL*up1 + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*u3^2*wpL - 4*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^2*u3*wpL - 4*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^2*wL*up3 + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u3^2*wL*up2 + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3^2*wL*up1 + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u2*u3*wpL + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u2*wL*up3 + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u3*wL*up2 - 4*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*u3*wL*up1 + 6*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^2*wL*up2 - 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u3^2*wL*up1 - 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u2*wL*up2 - 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3^2*wL*up2 - 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u3*wL*up3 + 6*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*u3*wL*up2 + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*u3^2*wpL - 4*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^2*u3*wpL - 4*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^2*wL*up3 + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u3^2*wL*up2 + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3^2*wL*up1 + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u2*u3*wpL + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u2*wL*up3 + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u3*wL*up2 - 4*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*u3*wL*up1 - 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*u3*wL*up3 - 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3^2*wL*up2 - 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u3*wL*up3 + 6*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*u3*wL*up2 - 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*u3*wL*up3 - 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*vL^2*wL*up1 - 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*vL^2*wL*up2 + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*vL^2*wpL + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*vL^2*wL*up2 + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*vL^2*wL*up1 + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3*vL^2*wpL + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*vL^2*wL*up3 + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u3*vL^2*wL*up2 - 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*vL^2*wL*up2 - 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u3*vL^2*wL*up3 + 6*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*wL^2*wpL + 6*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3*wL^2*wpL - 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*vL*wL*vpL - 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*vL*wL*vpL - 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u3^2*vL*wL*vpL - 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*vL*wL*vpL + 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*vL*up1 - 6*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*vL*up2 + 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3^2*vL*up1 + 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*vL*up2 + 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*vL*up1 - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3^2*vpL + 4*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*u3*vpL + 4*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*vL*up3 - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3^2*vL*up2 - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3^2*vL*up1 - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*u3*vpL - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*vL*up3 - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3*vL*up2 + 4*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*vL*up1 - 6*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*vL*up2 + 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3^2*vL*up1 + 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*vL*up2 + 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3^2*vL*up2 + 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3*vL*up3 - 6*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*vL*up2 - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3^2*vpL + 4*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*u3*vpL + 4*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*vL*up3 - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3^2*vL*up2 - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3^2*vL*up1 - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*u3*vpL - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*vL*up3 - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3*vL*up2 + 4*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*vL*up1 + 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*vL*up3 + 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3^2*vL*up2 + 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3*vL*up3 - 6*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*vL*up2 + 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*vL*up3 - 4*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^3*wL*tetap2 - 4*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*wL^3*tetap2 - 4*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^3*wL*tetap2 - 4*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*wL^3*tetap2 - 4*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*u3*wL*tetap2 - 4*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*u3*wL*tetap2 - 6*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*vL^2*vpL - 6*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*vL^2*vpL + 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*vL*wL^2*up1 + 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL*wL^2*up2 - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*wL^2*vpL - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*vL*wL^2*up2 - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL*wL^2*up1 - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*wL^2*vpL - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL*wL^2*up3 - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3*vL*wL^2*up2 + 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL*wL^2*up2 + 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3*vL*wL^2*up3 + 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL*wL*wpL + 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*vL*wL*wpL + 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3^2*vL*wL*wpL + 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL*wL*wpL + 2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u2*u3^2*tetap2 - 4*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u2^2*u3*tetap2 + 2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1^2*u2*u3*tetap2 + Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^4*tetap2 - 2*L1*dm^2*k1*l2^2*u1*u2*wL*up2 - 4*L2*dm^2*k1*l2^2*u1*u2*wL*up1 + 2*L1*dm^2*k1*l2^2*u1*u2*u3*wpL + 2*L1*dm^2*k1*l2^2*u1*u2*wL*up3 + 2*L1*dm^2*k1*l2^2*u1*u3*wL*up2 + 2*L1*dm^2*k1*l2^2*u2*u3*wL*up1 - 4*L1*dm^2*k2*l2^2*u1*u2*wL*up2 + 8*L2*dm^2*k1*l2^2*u1*u2*wL*up2 + 4*L2*dm^2*k1*l2^2*u1*u3*wL*up1 - 2*L2*dm^2*k2*l2^2*u1*u2*wL*up1 - 2*L1*dm^2*k1*l2^2*u1*u3*wL*up3 - 4*L1*dm^2*k1*l2^2*u2*u3*wL*up2 + 4*L1*dm^2*k2*l2^2*u1*u2*u3*wpL + 4*L1*dm^2*k2*l2^2*u1*u2*wL*up3 + 4*L1*dm^2*k2*l2^2*u1*u3*wL*up2 + 4*L1*dm^2*k2*l2^2*u2*u3*wL*up1 - 4*L2*dm^2*k1*l2^2*u1*u2*u3*wpL - 4*L2*dm^2*k1*l2^2*u1*u2*wL*up3 - 4*L2*dm^2*k1*l2^2*u1*u3*wL*up2 - 4*L2*dm^2*k1*l2^2*u2*u3*wL*up1 + 4*L2*dm^2*k2*l2^2*u1*u2*wL*up2 + 2*L2*dm^2*k2*l2^2*u1*u3*wL*up1 + 2*L1*dm^2*k1*l2^2*u2*u3*wL*up3 - 4*L1*dm^2*k2*l2^2*u1*u3*wL*up3 - 8*L1*dm^2*k2*l2^2*u2*u3*wL*up2 + 4*L2*dm^2*k1*l2^2*u2*u3*wL*up2 - 2*L2*dm^2*k2*l2^2*u1*u2*u3*wpL - 2*L2*dm^2*k2*l2^2*u1*u2*wL*up3 - 2*L2*dm^2*k2*l2^2*u1*u3*wL*up2 - 2*L2*dm^2*k2*l2^2*u2*u3*wL*up1 + 4*L1*dm^2*k2*l2^2*u2*u3*wL*up3 + 2*L2*dm^2*k2*l2^2*u2*u3*wL*up2 - K1*Mb2*dm*l2*cos(alfam2 + teta2)*u1^2*u2^2*tetap1 + K1*Mb2*dm*l2*cos(alfam2 + teta2)*u1^2*u2^2*tetap2 - K1*Mb2*dm*l2*cos(alfam2 + teta2)*u1^2*u3^2*tetap1 + K1*Mb2*dm*l2*cos(alfam2 + teta2)*u1^2*u3^2*tetap2 - K1*Mb2*dm*l2*cos(alfam2 + teta2)*u2^2*u3^2*tetap1 + K2*Mb2*dm*l2*cos(alfam2 + teta2)*u1^2*u2^2*tetap2 + K1*Mb2*dm*l2*cos(alfam2 + teta2)*u2^2*u3^2*tetap2 - K2*Mb2*dm*l2*cos(alfam2 + teta2)*u1^2*u2^2*tetap3 + K2*Mb2*dm*l2*cos(alfam2 + teta2)*u1^2*u3^2*tetap2 - K2*Mb2*dm*l2*cos(alfam2 + teta2)*u1^2*u3^2*tetap3 + K2*Mb2*dm*l2*cos(alfam2 + teta2)*u2^2*u3^2*tetap2 - K2*Mb2*dm*l2*cos(alfam2 + teta2)*u2^2*u3^2*tetap3 - 4*L1*dm^2*k2*l2^2*u1*vL*wL*vpL + 4*L1*dm^2*k2*l2^2*u2*vL*wL*vpL - 4*L2*dm^2*k1*l2^2*u2*vL*wL*vpL + 4*L2*dm^2*k1*l2^2*u3*vL*wL*vpL - 2*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*u2^3*tetap1 + 2*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*u2^3*tetap2 + 2*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u2^3*tetap1 - 2*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u2^3*tetap2 + 2*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*u2^3*tetap2 - 2*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*u2^3*tetap3 - 2*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u2^3*tetap2 + 2*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u2^3*tetap3 + 4*Ib2*L1*Mb2*k1*u1*u2*wL*up2 + 8*Ib2*L2*Mb2*k1*u1*u2*wL*up1 - 4*Ib2*L1*Mb2*k1*u1*u2*u3*wpL - 4*Ib2*L1*Mb2*k1*u1*u2*wL*up3 - 4*Ib2*L1*Mb2*k1*u1*u3*wL*up2 - 4*Ib2*L1*Mb2*k1*u2*u3*wL*up1 + 8*Ib2*L1*Mb2*k2*u1*u2*wL*up2 - 16*Ib2*L2*Mb2*k1*u1*u2*wL*up2 - 8*Ib2*L2*Mb2*k1*u1*u3*wL*up1 + 4*Ib2*L2*Mb2*k2*u1*u2*wL*up1 + 4*Ib2*L1*Mb2*k1*u1*u3*wL*up3 + 8*Ib2*L1*Mb2*k1*u2*u3*wL*up2 - 8*Ib2*L1*Mb2*k2*u1*u2*u3*wpL - 8*Ib2*L1*Mb2*k2*u1*u2*wL*up3 - 8*Ib2*L1*Mb2*k2*u1*u3*wL*up2 - 8*Ib2*L1*Mb2*k2*u2*u3*wL*up1 + 8*Ib2*L2*Mb2*k1*u1*u2*u3*wpL + 8*Ib2*L2*Mb2*k1*u1*u2*wL*up3 + 8*Ib2*L2*Mb2*k1*u1*u3*wL*up2 + 8*Ib2*L2*Mb2*k1*u2*u3*wL*up1 - 8*Ib2*L2*Mb2*k2*u1*u2*wL*up2 - 4*Ib2*L2*Mb2*k2*u1*u3*wL*up1 - 4*Ib2*L1*Mb2*k1*u2*u3*wL*up3 + 8*Ib2*L1*Mb2*k2*u1*u3*wL*up3 + 16*Ib2*L1*Mb2*k2*u2*u3*wL*up2 - 8*Ib2*L2*Mb2*k1*u2*u3*wL*up2 + 4*Ib2*L2*Mb2*k2*u1*u2*u3*wpL + 4*Ib2*L2*Mb2*k2*u1*u2*wL*up3 + 4*Ib2*L2*Mb2*k2*u1*u3*wL*up2 + 4*Ib2*L2*Mb2*k2*u2*u3*wL*up1 - 8*Ib2*L1*Mb2*k2*u2*u3*wL*up3 - 4*Ib2*L2*Mb2*k2*u2*u3*wL*up2 + 8*Ib2*L1*Mb2*k2*u1*vL*wL*vpL - 8*Ib2*L1*Mb2*k2*u2*vL*wL*vpL + 8*Ib2*L2*Mb2*k1*u2*vL*wL*vpL - 8*Ib2*L2*Mb2*k1*u3*vL*wL*vpL + 4*L1*dm^3*l2^3*sin(alfam2 + teta2)*tetap2*u1*u2^2*tetapp2 + 4*L1*dm^3*l2^3*sin(alfam2 + teta2)*tetap2*u1*u3^2*tetapp2 - 8*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2*u1*u2^2*tetapp2 + 4*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2*u1^2*u2*tetapp2 + 4*L2^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2*u1*u2*tetapp2 - 4*L1*dm^3*l2^3*sin(alfam2 + teta2)*tetap2*u2*u3^2*tetapp2 + 8*L1*dm^3*l2^3*sin(alfam2 + teta2)*tetap2*u2^2*u3*tetapp2 - 4*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2*u1^2*u3*tetapp2 + 4*L1^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2*u2*u3*tetapp2 - 4*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2*u2^2*u3*tetapp2 + 4*L1*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u2*up2 + 4*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u2*up1 - 4*L1*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u2*up3 - 4*L1*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u3*up2 - 4*L1*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2*u3*up1 - 8*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u2*up2 - 4*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u3*up1 + 4*L1*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u3*up3 + 8*L1*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2*u3*up2 + 4*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u2*up3 + 4*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u3*up2 + 4*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2*u3*up1 - 4*L1*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2*u3*up3 - 4*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2*u3*up2 - 2*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^3*up1 + 4*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^3*up2 - 2*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^3*up3 + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u2^2*vL*tetap2 + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u3^2*vL*tetap2 + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u2^2*vL*tetap2 + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*u3^2*vL*tetap2 + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u3^2*vL*tetap2 + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*u3^2*vL*tetap2 + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*vL*wL^2*tetap2 + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*vL*wL^2*tetap2 + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u3^2*vL*wL^2*tetap2 + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*vL*wL^2*tetap2 + 2*L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^3*vL*tetap2 - 4*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*vL^3*tetap2 + 4*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*vL^3*tetap2 + 4*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^3*vL*tetap2 - 4*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*vL^3*tetap2 - 4*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^3*vL*tetap2 + 4*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u3*vL^3*tetap2 - 2*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^3*vL*tetap2 + L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^2*wpL + L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*wL*up1 - 2*L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*wL*up1 + L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u3^2*wpL - 3*L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*wL*up2 + L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u3^2*wL*up1 + 2*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^2*wpL + 2*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*wL*up1 - 4*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^2*wpL + 2*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u2*wpL + 2*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*wL*up2 - 4*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*wL*up1 + 2*L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*wpL + 2*L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*wL*up2 + 2*L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*wL*up1 - L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3^2*wpL + 2*L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*u3*wpL + 2*L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*wL*up3 - L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u3^2*wL*up2 + 2*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u3^2*wpL - 6*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*wL*up2 + 2*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u3^2*wL*up1 - 2*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u3*wpL - 2*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*wL*up3 + 6*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*wL*up2 - 2*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^2*wpL + L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u2*wpL + L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*wL*up2 - 2*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*wL*up1 - 2*L1^2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*wL*up2 - 2*L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*wL*up2 - 2*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3^2*wpL + 4*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*u3*wpL + 4*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*wL*up3 - 2*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u3^2*wL*up2 - 2*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*u3*wpL - 2*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*wL*up3 - L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u3*wpL - L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*wL*up3 + 3*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*wL*up2 + 2*L1^2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3*wpL + 2*L1^2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*wL*up3 + 2*L1^2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u3*wL*up2 - L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*u3*wpL - L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*wL*up3 - 2*L1^2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u3*wL*up3 + 2*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*vL^2*wpL + 2*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*vL^2*wL*up1 - 2*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*vL^2*wpL - 2*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*vL^2*wL*up2 + 2*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*vL^2*wpL + 2*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*vL^2*wL*up2 - 2*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u3*vL^2*wpL - 2*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*vL^2*wL*up3 + 6*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*wL^2*wpL - 6*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*wL^2*wpL + 6*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*wL^2*wpL - 6*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u3*wL^2*wpL - 2*L1^2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*vL*wL*vpL - 2*L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*vL*wL*vpL + 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2^2*wL*tetap2 + 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3^2*wL*tetap2 + 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2^2*wL*tetap2 + 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3^2*wL*tetap2 + 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3^2*wL*tetap2 + 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3^2*wL*tetap2 + 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL^2*wL*tetap2 + 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*vL^2*wL*tetap2 + 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3^2*vL^2*wL*tetap2 + 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL^2*wL*tetap2 - L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*vpL - L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL*up1 + 2*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*vL*up1 - L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3^2*vpL + 3*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL*up2 - L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3^2*vL*up1 - 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*vpL - 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL*up1 + 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*vpL - 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*vpL - 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*vL*up2 + 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL*up1 - 2*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*vpL - 2*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*vL*up2 - 2*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL*up1 + L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3^2*vpL - 2*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*vpL - 2*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL*up3 + L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3^2*vL*up2 - 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3^2*vpL + 6*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL*up2 - 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u3^2*vL*up1 + 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3*vpL + 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*vL*up3 - 6*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL*up2 + 2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*vpL - L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*vpL - L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*vL*up2 + 2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL*up1 + 2*L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL*up2 + 2*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL*up2 + 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3^2*vpL - 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*vpL - 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL*up3 + 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u3^2*vL*up2 + 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*vpL + 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL*up3 + L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3*vpL + L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*vL*up3 - 3*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL*up2 - 2*L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*vpL - 2*L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL*up3 - 2*L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u3*vL*up2 + L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*vpL + L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL*up3 + 2*L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u3*vL*up3 + 2*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*wL*tetap2 - 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*wL^3*tetap2 + 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*wL^3*tetap2 + 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*wL*tetap2 - 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*wL^3*tetap2 - 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*wL*tetap2 + 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3*wL^3*tetap2 - 2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*wL*tetap2 - 6*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*vL^2*vpL + 6*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL^2*vpL - 6*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL^2*vpL + 6*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3*vL^2*vpL - 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*wL^2*vpL - 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*vL*wL^2*up1 + 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*wL^2*vpL + 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*vL*wL^2*up2 - 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*wL^2*vpL - 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*vL*wL^2*up2 + 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3*wL^2*vpL + 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*vL*wL^2*up3 + 2*L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*vL*wL*wpL + 2*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*vL*wL*wpL + 2*L1*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u2^2*tetap2 + 2*L1*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u3^2*tetap2 - 4*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u2^2*tetap2 + 2*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1^2*u2*tetap2 + 2*L2^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u2*tetap2 - 2*L1*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2*u3^2*tetap2 + 4*L1*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^2*u3*tetap2 - 2*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1^2*u3*tetap2 + 2*L1^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2*u3*tetap2 - 2*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^2*u3*tetap2 + 2*L1*L2*dm^2*k1*l2^2*u1*u2*wpL + 2*L1*L2*dm^2*k1*l2^2*u1*wL*up2 + 2*L1*L2*dm^2*k1*l2^2*u2*wL*up1 - 2*L1*L2*dm^2*k1*l2^2*u1*u3*wpL - 2*L1*L2*dm^2*k1*l2^2*u1*wL*up3 - 4*L1*L2*dm^2*k1*l2^2*u2*wL*up2 - 2*L1*L2*dm^2*k1*l2^2*u3*wL*up1 + 2*L1*L2*dm^2*k2*l2^2*u1*u2*wpL + 2*L1*L2*dm^2*k2*l2^2*u1*wL*up2 + 2*L1*L2*dm^2*k2*l2^2*u2*wL*up1 + 2*L1*L2*dm^2*k1*l2^2*u2*u3*wpL + 2*L1*L2*dm^2*k1*l2^2*u2*wL*up3 + 2*L1*L2*dm^2*k1*l2^2*u3*wL*up2 - 2*L1*L2*dm^2*k2*l2^2*u1*u3*wpL - 2*L1*L2*dm^2*k2*l2^2*u1*wL*up3 - 4*L1*L2*dm^2*k2*l2^2*u2*wL*up2 - 2*L1*L2*dm^2*k2*l2^2*u3*wL*up1 + 2*L1*L2*dm^2*k2*l2^2*u2*u3*wpL + 2*L1*L2*dm^2*k2*l2^2*u2*wL*up3 + 2*L1*L2*dm^2*k2*l2^2*u3*wL*up2 - K1*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*u2^2*tetap1 - K1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*u1^2*tetap1 + K1*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*u2^2*tetap2 - K1*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*u3^2*tetap1 + K1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*u1^2*tetap2 - K1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*u2^2*tetap1 + K1*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*u3^2*tetap2 + K1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*u2^2*tetap2 + K2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*u2^2*tetap2 + K2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*u1^2*tetap2 - K2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*u2^2*tetap3 + K2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*u3^2*tetap2 - K2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*u1^2*tetap3 + K2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*u2^2*tetap2 - K2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*u3^2*tetap3 - K2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*u2^2*tetap3 - 4*Ib2*L1*L2*Mb2*k1*u1*u2*wpL - 4*Ib2*L1*L2*Mb2*k1*u1*wL*up2 - 4*Ib2*L1*L2*Mb2*k1*u2*wL*up1 + 4*Ib2*L1*L2*Mb2*k1*u1*u3*wpL + 4*Ib2*L1*L2*Mb2*k1*u1*wL*up3 + 8*Ib2*L1*L2*Mb2*k1*u2*wL*up2 + 4*Ib2*L1*L2*Mb2*k1*u3*wL*up1 - 4*Ib2*L1*L2*Mb2*k2*u1*u2*wpL - 4*Ib2*L1*L2*Mb2*k2*u1*wL*up2 - 4*Ib2*L1*L2*Mb2*k2*u2*wL*up1 - 4*Ib2*L1*L2*Mb2*k1*u2*u3*wpL - 4*Ib2*L1*L2*Mb2*k1*u2*wL*up3 - 4*Ib2*L1*L2*Mb2*k1*u3*wL*up2 + 4*Ib2*L1*L2*Mb2*k2*u1*u3*wpL + 4*Ib2*L1*L2*Mb2*k2*u1*wL*up3 + 8*Ib2*L1*L2*Mb2*k2*u2*wL*up2 + 4*Ib2*L1*L2*Mb2*k2*u3*wL*up1 - 4*Ib2*L1*L2*Mb2*k2*u2*u3*wpL - 4*Ib2*L1*L2*Mb2*k2*u2*wL*up3 - 4*Ib2*L1*L2*Mb2*k2*u3*wL*up2 + 4*L1*L2^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2*u1*tetapp2 + 8*L1*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2*u2^2*tetapp2 - 4*L1*L2^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2*u2*tetapp2 + 4*L1^2*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2*u2*tetapp2 - 4*L1^2*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2*u3*tetapp2 - 4*L1*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*up2 - 4*L1*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2*up1 + 4*L1*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*up3 + 8*L1*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2*up2 + 4*L1*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u3*up1 - 4*L1*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2*up3 - 4*L1*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u3*up2 - 4*dm^2*k1*l2^2*u1*u2*u3*wL*up1 + 8*dm^2*k1*l2^2*u1*u2*u3*wL*up2 - 4*dm^2*k2*l2^2*u1*u2*u3*wL*up1 - 4*dm^2*k1*l2^2*u1*u2*u3*wL*up3 + 8*dm^2*k2*l2^2*u1*u2*u3*wL*up2 - 4*dm^2*k2*l2^2*u1*u2*u3*wL*up3 - 4*dm^2*k2*l2^2*u1*u2*vL*wL*vpL - 4*dm^2*k1*l2^2*u2*u3*vL*wL*vpL + 2*L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*vL*tetap2 + 2*L1^2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*vL*tetap2 + 2*L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*vL*tetap2 + 2*L1^2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u3^2*vL*tetap2 + 2*L1^2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*vL*wL^2*tetap2 + 2*L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*vL*wL^2*tetap2 + 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^3*up1 + 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u2^3*tetap1 - 4*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^3*up2 - 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^3*up1 - 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u2^3*tetap2 + 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^3*up3 + 4*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^3*up2 + 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*u2^3*u3*tetap1 - 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^3*up1 - 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u2^3*tetap2 - 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^3*up3 - 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*u2^3*u3*tetap2 + 4*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^3*up2 + 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^3*up1 + 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u2^3*tetap3 - 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^3*up3 - 4*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^3*up2 - 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*u2^3*u3*tetap2 + 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^3*up3 + 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*u2^3*u3*tetap3 + 8*Ib2*Mb2*k1*u1*u2*u3*wL*up1 - 16*Ib2*Mb2*k1*u1*u2*u3*wL*up2 + 8*Ib2*Mb2*k2*u1*u2*u3*wL*up1 + 8*Ib2*Mb2*k1*u1*u2*u3*wL*up3 - 16*Ib2*Mb2*k2*u1*u2*u3*wL*up2 + 8*Ib2*Mb2*k2*u1*u2*u3*wL*up3 + L1*L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*wpL + L1*L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*wL*up1 + 2*L1*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*wpL - L1*L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*wpL - L1*L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*wL*up2 + 2*L1*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*wpL + L1^2*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*wpL + L1^2*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*wL*up2 - L1^2*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u3*wpL - L1^2*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*wL*up3 + 8*Ib2*Mb2*k2*u1*u2*vL*wL*vpL + 8*Ib2*Mb2*k1*u2*u3*vL*wL*vpL + 4*dm^3*l2^3*sin(alfam2 + teta2)*tetap2*u1*u2*u3^2*tetapp2 - 8*dm^3*l2^3*sin(alfam2 + teta2)*tetap2*u1*u2^2*u3*tetapp2 + 4*dm^3*l2^3*sin(alfam2 + teta2)*tetap2*u1^2*u2*u3*tetapp2 + 4*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u2*u3*up1 - 8*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u2*u3*up2 + 4*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u2*u3*up3 + 2*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2*u2^4*tetapp2 + 2*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*wL*tetap2 + 2*L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*wL*tetap2 + 2*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*wL*tetap2 + 2*L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u3^2*wL*tetap2 + 2*L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*vL^2*wL*tetap2 + 2*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*vL^2*wL*tetap2 + K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^4*tetap2 - K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^4*tetap2 - K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^4*tetap2 + K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^4*tetap2 - L1*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*vpL - L1*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*vL*up1 - 2*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vpL + L1*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*vpL + L1*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*vL*up2 - 2*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vpL - L1^2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*vpL - L1^2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*vL*up2 + L1^2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u3*vpL + L1^2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*vL*up3 + 2*L1*L2^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*tetap2 + 4*L1*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2^2*tetap2 - 2*L1*L2^2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2*tetap2 + 2*L1^2*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2*tetap2 - 2*L1^2*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u3*tetap2 - K1*L1^2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap1 + K1*L1^2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2 + K2*L1^2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2 - K2*L1^2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap3 - 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*vL*wL*wpL + 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL*wL*wpL - 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL*wL*wpL + 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3*vL*wL*wpL - 4*L1*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u2*u3*tetap2 + 4*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u2*u3*tetap2 - 2*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u2^3*tetap2 - 2*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^3*u3*tetap2 + 2*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^2*up1 + 2*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u2^2*tetap1 - 2*K1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*up1 - 6*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^2*up2 + 2*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u3^2*up1 - 2*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*up1 - 2*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u2^2*tetap2 + 2*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u3^2*tetap1 + 2*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1^2*up2 - 4*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^2*up1 - 4*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u2^2*tetap1 + 2*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u1^2*u2*tetap1 - 2*K1*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2*up2 + 2*K1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*up2 + 2*K1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2*up1 + 2*K1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*up1 + 2*K1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u2*tetap1 + 4*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^2*up3 - 2*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u3^2*up2 + 6*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*up2 - 2*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u3^2*up1 - 2*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u3^2*tetap2 - 2*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*u2*u3^2*tetap1 + 4*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*u2^2*u3*tetap1 - 2*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1^2*up3 + 6*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^2*up2 - 2*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*up2 + 4*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*up1 + 4*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u2^2*tetap2 - 2*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u1^2*u2*tetap2 - 2*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u1^2*u3*tetap1 + 2*K1*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2*up3 + 2*K1*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u3*up2 + 2*K1*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*up2 + 2*K1*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*u2*u3*tetap1 - 2*K1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2*up2 - 2*K1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*up2 - 2*K1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*up1 - 2*K1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u2*tetap2 - 2*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*up1 - 2*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u2^2*tetap2 + 2*K2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*up1 - 4*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*up3 + 2*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u3^2*up2 + 2*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*u2*u3^2*tetap2 - 4*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*u2^2*u3*tetap2 - 2*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^2*up3 + 2*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*up3 - 6*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*up2 + 2*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u1^2*u3*tetap2 - 2*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u2^2*u3*tetap1 - 2*K1*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u3*up3 - 2*K1*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*up3 - 2*K1*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u3*up2 - 2*K1*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*u2*u3*tetap2 + 2*K1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*up2 + 6*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*up2 - 2*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u3^2*up1 + 2*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^2*up1 + 2*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u2^2*tetap3 - 2*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u3^2*tetap2 - 2*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*up2 + 4*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*up1 + 4*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u2^2*tetap2 - 2*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u1^2*u2*tetap2 + 2*K2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*up2 - 2*K2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*up2 - 2*K2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*up1 - 2*K2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*up1 - 2*K2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u2*tetap2 + 2*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*up3 + 2*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u2^2*u3*tetap2 + 2*K1*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u3*up3 - 4*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*up3 + 2*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u3^2*up2 - 6*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^2*up2 + 2*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u3^2*up1 + 2*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u3^2*tetap3 + 2*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*u2*u3^2*tetap2 - 4*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*u2^2*u3*tetap2 + 2*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*up3 - 6*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*up2 + 2*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1^2*up2 - 4*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^2*up1 - 4*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u2^2*tetap3 + 2*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u1^2*u2*tetap3 + 2*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u1^2*u3*tetap2 - 2*K2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*up3 - 2*K2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u3*up2 - 2*K2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2*up2 - 2*K2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*u2*u3*tetap2 + 2*K2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*up2 + 2*K2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*up2 + 2*K2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2*up1 + 2*K2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u2*tetap3 + 4*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^2*up3 - 2*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u3^2*up2 - 2*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*u2*u3^2*tetap3 + 4*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*u2^2*u3*tetap3 + 2*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*up3 - 2*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1^2*up3 + 6*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^2*up2 - 2*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u1^2*u3*tetap3 + 2*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u2^2*u3*tetap2 + 2*K2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u3*up3 + 2*K2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2*up3 + 2*K2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u3*up2 + 2*K2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*u2*u3*tetap3 - 2*K2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2*up2 - 2*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^2*up3 - 2*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u2^2*u3*tetap3 - 2*K2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u3*up3 + 2*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2*u1^2*u2^2*tetapp2 + 2*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2*u1^2*u3^2*tetapp2 + 2*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2*u2^2*u3^2*tetapp2 + 2*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u2^2*up1 - 6*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u2^2*up2 + 2*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u3^2*up1 + 2*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1^2*u2*up2 + 4*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u2^2*up3 - 2*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u3^2*up2 - 2*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2*u3^2*up1 - 2*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1^2*u2*up3 - 2*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1^2*u3*up2 + 4*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^2*u3*up1 + 2*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2*u3^2*up2 + 2*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1^2*u3*up3 - 6*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^2*u3*up2 + 2*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^2*u3*up3 - 8*L1*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2*u1*u2*tetapp2 + 8*L1*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2*u1*u3*tetapp2 - 8*L1*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2*u2*u3*tetapp2 + K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1^2*u2^2*tetap2 + K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1^2*u3^2*tetap2 - K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*u2^2*tetap2 + K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^2*u3^2*tetap2 - K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*u3^2*tetap2 - K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*u2^2*tetap2 - K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*u3^2*tetap2 - K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*u3^2*tetap2 + K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1^2*u2^2*tetap2 - K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*u3^2*tetap2 + K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1^2*u3^2*tetap2 + K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^2*u3^2*tetap2 + 4*Ib2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2*u2^3*tetapp2 - 4*Ib2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2*u2^3*tetapp2 + 2*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^3*tetap2 - 2*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^3*tetap2 - 2*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^3*tetap2 + 2*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^3*tetap2 - 2*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^3*tetap2 + 2*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^3*tetap2 + 2*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^3*tetap2 - 2*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^3*tetap2 + Ib2*L1^2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*tetap2 - 2*L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^2*vL*tetap2 - 2*L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u3^2*vL*tetap2 - 4*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^2*vL*tetap2 + 8*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^2*vL*tetap2 - 4*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u2*vL*tetap2 - 4*L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*vL*tetap2 + 2*L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3^2*vL*tetap2 - 4*L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*u3*vL*tetap2 - 4*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u3^2*vL*tetap2 + 4*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u3*vL*tetap2 + 4*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^2*vL*tetap2 - 2*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u2*vL*tetap2 + 4*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3^2*vL*tetap2 - 8*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*u3*vL*tetap2 + 4*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*u3*vL*tetap2 + 2*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u3*vL*tetap2 - 4*L1^2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3*vL*tetap2 + 2*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*u3*vL*tetap2 - 4*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*vL*wL^2*tetap2 + 4*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*vL*wL^2*tetap2 - 4*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*vL*wL^2*tetap2 + 4*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u3*vL*wL^2*tetap2 - 2*L1*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*wpL - 2*L1*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*wL*up2 - 2*L1*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*wL*up1 + 2*L1*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u3*wpL + 2*L1*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*wL*up3 + 4*L1*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*wL*up2 + 2*L1*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u3*wL*up1 - 2*L1*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*wpL - 2*L1*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*wL*up2 - 2*L1*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*wL*up1 - 2*L1*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3*wpL - 2*L1*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*wL*up3 - 2*L1*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u3*wL*up2 + 2*L1*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u3*wpL + 2*L1*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*wL*up3 + 4*L1*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*wL*up2 + 2*L1*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u3*wL*up1 - 2*L1*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3*wpL - 2*L1*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*wL*up3 - 2*L1*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u3*wL*up2 - 2*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*wL*tetap2 - 2*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3^2*wL*tetap2 - 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*wL*tetap2 + 8*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*wL*tetap2 - 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*wL*tetap2 - 4*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*wL*tetap2 + 2*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3^2*wL*tetap2 - 4*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*wL*tetap2 - 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3^2*wL*tetap2 + 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3*wL*tetap2 + 4*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*wL*tetap2 - 2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*wL*tetap2 + 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3^2*wL*tetap2 - 8*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*wL*tetap2 + 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*wL*tetap2 + 2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3*wL*tetap2 - 4*L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*wL*tetap2 + 2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*wL*tetap2 - 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*vL^2*wL*tetap2 + 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL^2*wL*tetap2 - 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL^2*wL*tetap2 + 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3*vL^2*wL*tetap2 + 2*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*vpL + 2*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*vL*up2 + 2*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL*up1 - 2*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3*vpL - 2*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*vL*up3 - 4*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL*up2 - 2*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3*vL*up1 + 2*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*vpL + 2*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*vL*up2 + 2*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL*up1 + 2*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*vpL + 2*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL*up3 + 2*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3*vL*up2 - 2*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3*vpL - 2*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*vL*up3 - 4*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL*up2 - 2*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u3*vL*up1 + 2*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*vpL + 2*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL*up3 + 2*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u3*vL*up2 + Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1^2*u2^2*tetap2 + Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1^2*u3^2*tetap2 + Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^2*u3^2*tetap2 - 4*L1*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u2*tetap2 + 4*L1*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u1*u3*tetap2 - 4*L1*L2*dm^3*l2^3*cos(alfam2 + teta2)*tetap2^2*u2*u3*tetap2 + 2*Ib2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^3*tetap2 - 2*Ib2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^3*tetap2 + 2*K1*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*up1 + 2*K1*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*u1*tetap1 + 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u2^2*tetap1 - 2*K1*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*up2 - 2*K1*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*up1 - 2*K1*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*u1*tetap2 - 2*K1*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*u2*tetap1 + 2*K1*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*up2 + 2*K1*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u2*tetap1 - 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u2^2*tetap2 + 2*K1*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*up2 + 2*K1*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*u2*tetap2 - 2*K1*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*up3 - 2*K1*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*up2 - 2*K1*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u2*tetap2 - 2*K1*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u3*tetap1 - 2*K2*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*up1 - 2*K2*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*u1*tetap2 + 2*K1*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*up3 + 2*K1*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u3*tetap2 - 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u2^2*tetap2 + 2*K2*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*up2 + 2*K2*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*up1 + 2*K2*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*u1*tetap3 + 2*K2*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*u2*tetap2 - 2*K2*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*up2 - 2*K2*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u2*tetap2 + 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u2^2*tetap3 - 2*K2*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*up2 - 2*K2*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*u2*tetap3 + 2*K2*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*up3 + 2*K2*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*up2 + 2*K2*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u2*tetap3 + 2*K2*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u3*tetap2 - 2*K2*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*up3 - 2*K2*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u3*tetap3 + 2*Ib2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2*u2^2*tetapp2 + 2*Ib2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2*u1^2*tetapp2 + 2*Ib2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2*u3^2*tetapp2 + 2*Ib2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2*u2^2*tetapp2 - 2*Ib2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^2*up1 + 2*Ib2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*up1 + 6*Ib2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^2*up2 - 2*Ib2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u3^2*up1 - 2*Ib2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1^2*up2 + 4*Ib2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^2*up1 + 2*Ib2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2*up2 - 2*Ib2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*up2 - 2*Ib2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2*up1 - 4*Ib2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^2*up3 + 2*Ib2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u3^2*up2 + 2*Ib2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1^2*up3 - 6*Ib2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^2*up2 - 2*Ib2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2*up3 - 2*Ib2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u3*up2 + 2*Ib2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2*up2 + 2*Ib2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^2*up3 + 2*Ib2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u3*up3 + K1*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^2*tetap2 + K1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1^2*tetap2 + K1*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u3^2*tetap2 - K1*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*tetap2 + K1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^2*tetap2 - K1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*tetap2 - K1*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u3^2*tetap2 - K1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*tetap2 - K2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*tetap2 - K2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*tetap2 - K2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u3^2*tetap2 + K2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^2*tetap2 - K2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*tetap2 + K2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1^2*tetap2 + K2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u3^2*tetap2 + K2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^2*tetap2 + 4*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*u3*wL*up1 - 8*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*u3*wL*up2 + 4*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*u3*wL*up1 + 4*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*u3*wL*up3 - 8*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*u3*wL*up2 + 4*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*u3*wL*up3 + 4*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*vL*wL*vpL + 4*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3*vL*wL*vpL - 4*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*vL*up1 + 8*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*vL*up2 - 4*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*vL*up1 - 4*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*vL*up3 + 8*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*vL*up2 - 4*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*vL*up3 - 4*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*vL*wL*wpL - 4*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*vL*wL*wpL - 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u2^2*up1 + 6*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u2^2*up2 - 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u3^2*up1 - 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1^2*u2*up2 + 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2^2*up1 - 4*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u2^2*up3 + 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u3^2*up2 + 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2*u3^2*up1 + 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1^2*u2*up3 + 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1^2*u3*up2 - 4*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^2*u3*up1 - 6*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2^2*up2 + 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u3^2*up1 + 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*u2*up2 + 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u2*u3^2*tetap1 - 4*K1*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u2^2*u3*tetap1 + 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*u1^2*u2*u3*tetap1 + 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2^2*up1 - 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2*u3^2*up2 - 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1^2*u3*up3 + 6*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^2*u3*up2 + 4*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2^2*up3 - 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u3^2*up2 - 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*u3^2*up1 - 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*u2*up3 - 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*u3*up2 + 4*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*u3*up1 - 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u2*u3^2*tetap2 + 4*K1*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u2^2*u3*tetap2 - 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*u1^2*u2*u3*tetap2 - 6*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2^2*up2 + 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u3^2*up1 + 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*u2*up2 - 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u2^2*up1 - 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^2*u3*up3 + 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*u3^2*up2 + 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*u3*up3 - 6*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*u3*up2 + 4*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2^2*up3 - 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u3^2*up2 - 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*u3^2*up1 - 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*u2*up3 - 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*u3*up2 + 4*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*u3*up1 + 6*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u2^2*up2 - 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u3^2*up1 - 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1^2*u2*up2 - 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u2*u3^2*tetap2 + 4*K2*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u2^2*u3*tetap2 - 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*u1^2*u2*u3*tetap2 + 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*u3*up3 + 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*u3^2*up2 + 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*u3*up3 - 6*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*u3*up2 - 4*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u2^2*up3 + 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u3^2*up2 + 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2*u3^2*up1 + 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1^2*u2*up3 + 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1^2*u3*up2 - 4*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^2*u3*up1 + 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u2*u3^2*tetap3 - 4*K2*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u2^2*u3*tetap3 + 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*u1^2*u2*u3*tetap3 + 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*u3*up3 - 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2*u3^2*up2 - 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1^2*u3*up3 + 6*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^2*u3*up2 - 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^2*u3*up3 - 2*L1*L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*vL*tetap2 - 4*L1*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*vL*tetap2 + 2*L1*L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*vL*tetap2 - 4*L1*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*vL*tetap2 - 2*L1^2*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*vL*tetap2 + 2*L1^2*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u3*vL*tetap2 - 8*L1*dm^3*l2^3*sin(alfam2 + teta2)*tetap2*u1*u2*u3*tetapp2 + 8*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2*u1*u2*u3*tetapp2 - 4*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2*u1*u2^3*tetapp2 - 4*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2*u2^3*u3*tetapp2 - 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u2^3*tetap2 + 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2^3*tetap2 - 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^3*u3*tetap2 + 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2^3*tetap2 + 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^3*u3*tetap2 - 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u2^3*tetap2 + 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^3*u3*tetap2 - 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^3*u3*tetap2 - 2*L1*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*wL*tetap2 - 4*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*wL*tetap2 + 2*L1*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*wL*tetap2 - 4*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*wL*tetap2 - 2*L1^2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*wL*tetap2 + 2*L1^2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u3*wL*tetap2 + Ib2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^2*tetap2 + Ib2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1^2*tetap2 + Ib2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u3^2*tetap2 + Ib2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^2*tetap2 + 2*Ib2*L1^2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2*tetapp2 - 2*Ib2*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*up1 + 2*Ib2*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*up2 - 2*Ib2*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*up2 + 2*Ib2*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*up3 + K1*L1^2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*tetap2 - K1*L1^2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*tetap2 - K2*L1^2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*tetap2 + K2*L1^2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*tetap2 - 4*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*u3^2*vL*tetap2 + 8*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^2*u3*vL*tetap2 - 4*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u2*u3*vL*tetap2 - 4*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*u3^2*vL*tetap2 + 8*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^2*u3*vL*tetap2 - 4*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u2*u3*vL*tetap2 - 4*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*vL*wL^2*tetap2 - 4*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3*vL*wL^2*tetap2 + 2*L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*wL*up2 + 4*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*wL*up1 - 2*L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*u3*wpL - 2*L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*wL*up3 - 2*L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u3*wL*up2 - 2*L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3*wL*up1 + 4*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*wL*up2 - 8*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*wL*up2 - 4*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u3*wL*up1 + 2*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*wL*up1 + 2*L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u3*wL*up3 + 4*L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3*wL*up2 - 4*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*u3*wpL - 4*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*wL*up3 - 4*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u3*wL*up2 - 4*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3*wL*up1 + 4*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*u3*wpL + 4*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*wL*up3 + 4*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u3*wL*up2 + 4*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3*wL*up1 - 4*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*wL*up2 - 2*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u3*wL*up1 - 2*L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3*wL*up3 + 4*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u3*wL*up3 + 8*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3*wL*up2 - 4*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3*wL*up2 + 2*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*u3*wpL + 2*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*wL*up3 + 2*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u3*wL*up2 + 2*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3*wL*up1 - 4*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3*wL*up3 - 2*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3*wL*up2 + 4*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*vL*wL*vpL - 4*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*vL*wL*vpL + 4*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*vL*wL*vpL - 4*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u3*vL*wL*vpL - 4*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3^2*wL*tetap2 + 8*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*u3*wL*tetap2 - 4*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*u3*wL*tetap2 - 4*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3^2*wL*tetap2 + 8*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*u3*wL*tetap2 - 4*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*u3*wL*tetap2 - 4*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*vL^2*wL*tetap2 - 4*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*vL^2*wL*tetap2 - 2*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*vL*up2 - 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*vL*up1 + 2*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*vpL + 2*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*vL*up3 + 2*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3*vL*up2 + 2*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*vL*up1 - 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*vL*up2 + 8*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*vL*up2 + 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3*vL*up1 - 2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*vL*up1 - 2*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3*vL*up3 - 4*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*vL*up2 + 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*vpL + 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*vL*up3 + 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3*vL*up2 + 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*vL*up1 - 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*vpL - 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*vL*up3 - 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3*vL*up2 - 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*vL*up1 + 4*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*vL*up2 + 2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3*vL*up1 + 2*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*vL*up3 - 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3*vL*up3 - 8*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*vL*up2 + 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*vL*up2 - 2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*vpL - 2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*vL*up3 - 2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3*vL*up2 - 2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*vL*up1 + 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*vL*up3 + 2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*vL*up2 - 4*Ib2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2*u1*u2^2*tetapp2 - 4*Ib2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2*u1*u3^2*tetapp2 + 8*Ib2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2*u1*u2^2*tetapp2 - 4*Ib2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2*u1^2*u2*tetapp2 - 4*Ib2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2*u1*u2*tetapp2 + 4*Ib2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2*u2*u3^2*tetapp2 - 8*Ib2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2*u2^2*u3*tetapp2 + 4*Ib2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2*u1^2*u3*tetapp2 - 4*Ib2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2*u2*u3*tetapp2 + 4*Ib2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2*u2^2*u3*tetapp2 - 4*Ib2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u2*up2 - 4*Ib2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u2*up1 + 4*Ib2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u2*up3 + 4*Ib2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u3*up2 + 4*Ib2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2*u3*up1 + 8*Ib2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u2*up2 + 4*Ib2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u3*up1 - 4*Ib2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u3*up3 - 8*Ib2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2*u3*up2 - 4*Ib2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u2*up3 - 4*Ib2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u3*up2 - 4*Ib2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2*u3*up1 + 4*Ib2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2*u3*up3 + 4*Ib2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2*u3*up2 - 2*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u2^2*tetap2 - 2*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u3^2*tetap2 + 2*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2^2*tetap2 + 4*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u2^2*tetap2 - 2*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1^2*u2*tetap2 - 2*K1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u2*tetap2 + 2*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2*u3^2*tetap2 - 4*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^2*u3*tetap2 + 2*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u3^2*tetap2 + 2*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1^2*u3*tetap2 - 4*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2^2*tetap2 + 2*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*u2*tetap2 - 2*K1*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2*u3*tetap2 + 2*K1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2*tetap2 + 2*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2^2*tetap2 - 2*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*u3^2*tetap2 + 4*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*u3*tetap2 + 2*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^2*u3*tetap2 - 2*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*u3*tetap2 + 2*K1*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*u3*tetap2 + 2*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u3^2*tetap2 - 2*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u2^2*tetap2 - 4*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2^2*tetap2 + 2*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*u2*tetap2 + 2*K2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2*tetap2 - 2*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*u3*tetap2 - 2*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*u3^2*tetap2 + 4*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*u3*tetap2 - 2*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u3^2*tetap2 - 2*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*u3*tetap2 + 4*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u2^2*tetap2 - 2*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1^2*u2*tetap2 + 2*K2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*u3*tetap2 - 2*K2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u2*tetap2 + 2*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2*u3^2*tetap2 - 4*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^2*u3*tetap2 - 2*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*u3*tetap2 + 2*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1^2*u3*tetap2 - 2*K2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2*u3*tetap2 + 2*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^2*u3*tetap2 + 4*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u2*u3*up1 - 8*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u2*u3*up2 - 4*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2*u3*up1 + 4*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u2*u3*up3 + 8*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2*u3*up2 - 4*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2*u3*up1 - 4*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2*u3*up3 + 8*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2*u3*up2 + 4*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u2*u3*up1 - 4*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2*u3*up3 - 8*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u2*u3*up2 + 4*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u2*u3*up3 + 4*L1*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*vL*tetap2 - 4*L1*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u3*vL*tetap2 + 4*L1*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*vL*tetap2 + 4*L1*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3*vL*tetap2 - 4*L1*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u3*vL*tetap2 + 4*L1*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3*vL*tetap2 + 4*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*wL*tetap2 - 4*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3*wL*tetap2 + 4*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*wL*tetap2 + 4*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*wL*tetap2 - 4*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3*wL*tetap2 + 4*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*wL*tetap2 - 2*Ib2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u2^2*tetap2 - 2*Ib2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u3^2*tetap2 + 4*Ib2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u2^2*tetap2 - 2*Ib2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1^2*u2*tetap2 - 2*Ib2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u2*tetap2 + 2*Ib2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2*u3^2*tetap2 - 4*Ib2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^2*u3*tetap2 + 2*Ib2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1^2*u3*tetap2 - 2*Ib2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2*u3*tetap2 + 2*Ib2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^2*u3*tetap2 - 4*Ib2*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2*u1*tetapp2 - 8*Ib2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2*u2^2*tetapp2 + 4*Ib2*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2*u2*tetapp2 - 4*Ib2*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2*u2*tetapp2 + 4*Ib2*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2*u3*tetapp2 + 4*Ib2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*up2 + 4*Ib2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2*up1 - 4*Ib2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*up3 - 8*Ib2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2*up2 - 4*Ib2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u3*up1 + 4*Ib2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2*up3 + 4*Ib2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u3*up2 - 2*K1*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*tetap2 - 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2^2*tetap2 + 2*K1*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2*tetap2 + 2*K1*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*tetap2 - 2*K1*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2*tetap2 + 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*tetap2 - 2*K1*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*tetap2 + 2*K1*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u3*tetap2 + 2*K1*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*tetap2 + 2*K2*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*tetap2 - 2*K1*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u3*tetap2 + 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2^2*tetap2 - 2*K2*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*tetap2 - 2*K2*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*tetap2 + 2*K2*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*tetap2 - 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2^2*tetap2 + 2*K2*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2*tetap2 - 2*K2*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u3*tetap2 - 2*K2*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2*tetap2 + 2*K2*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u3*tetap2 + 4*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u2*up2 + 4*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u2*up1 - 4*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u2*up3 - 4*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u3*up2 - 4*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2*u3*up1 - 4*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2*up2 - 4*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u2*u3*tetap1 - 8*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u2*up2 - 4*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u3*up1 - 4*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2*up1 + 4*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u3*up3 + 8*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2*u3*up2 + 4*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2*up3 + 4*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u3*up2 + 4*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*u3*up1 + 4*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u2*u3*tetap2 + 4*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u2*up3 + 4*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u3*up2 + 4*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2*u3*up1 + 8*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2*up2 + 4*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u3*up1 + 4*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u2*u3*tetap1 - 4*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2*up2 - 4*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2*up1 - 4*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2*u3*up3 - 4*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u3*up3 - 8*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*u3*up2 - 4*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2*u3*up2 - 4*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2*up3 - 4*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u3*up2 - 4*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*u3*up1 - 4*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u2*u3*tetap2 + 4*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2*up3 + 4*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u3*up2 + 4*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*u3*up1 + 4*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u2*up2 + 4*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u2*u3*tetap2 + 8*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2*up2 + 4*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u3*up1 + 4*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u2*up1 + 4*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*u3*up3 + 4*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*u3*up2 - 4*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u3*up3 - 8*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*u3*up2 - 4*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u2*up3 - 4*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u3*up2 - 4*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2*u3*up1 - 4*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u2*u3*tetap3 - 4*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2*up3 - 4*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u3*up2 - 4*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*u3*up1 - 8*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u2*up2 - 4*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u3*up1 - 4*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u2*u3*tetap2 + 4*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*u3*up3 + 4*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u3*up3 + 8*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2*u3*up2 + 4*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*u3*up2 + 4*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u2*up3 + 4*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u3*up2 + 4*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2*u3*up1 + 4*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u2*u3*tetap3 - 4*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2*u3*up3 - 4*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2*u3*up2 - 4*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2*u1*u2*u3^2*tetapp2 + 8*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2*u1*u2^2*u3*tetapp2 - 4*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2*u1^2*u2*u3*tetapp2 - 4*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u2*u3*up1 + 8*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u2*u3*up2 - 4*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u2*u3*up3 - 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u2*u3^2*tetap2 + 4*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u2^2*u3*tetap2 - 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1^2*u2*u3*tetap2 + 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2*u3^2*tetap2 - 4*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2^2*u3*tetap2 + 2*K1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*u2*u3*tetap2 + 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2*u3^2*tetap2 - 4*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2^2*u3*tetap2 + 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1^2*u2*u3*tetap2 - 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u2*u3^2*tetap2 + 4*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u2^2*u3*tetap2 - 2*K2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1^2*u2*u3*tetap2 - 2*Ib2*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*tetap2 - 4*Ib2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2^2*tetap2 + 2*Ib2*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2*tetap2 - 2*Ib2*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2*tetap2 + 2*Ib2*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u3*tetap2 + 4*L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*u3*vL*tetap2 + 8*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*u3*vL*tetap2 - 8*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*u3*vL*tetap2 - 4*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*u3*vL*tetap2 + 4*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*wL*tetap2 + 8*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*wL*tetap2 - 8*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*wL*tetap2 - 4*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*wL*tetap2 - 2*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u2*u3^2*tetap2 + 4*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u2^2*u3*tetap2 - 2*Ib2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1^2*u2*u3*tetap2 - 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*up2 - 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2*up1 - 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u2*tetap1 + 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*up3 + 8*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2*up2 + 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u3*up1 + 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*up2 + 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*up1 + 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u2*tetap2 + 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u3*tetap1 - 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2*up3 - 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u3*up2 - 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*up3 - 8*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*up2 - 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u3*up1 - 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u3*tetap2 - 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u2*u3*tetap1 + 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*up2 + 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*up1 + 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u2*tetap2 + 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*up3 + 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u3*up2 + 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u2*u3*tetap2 - 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*up3 - 8*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*up2 - 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u3*up1 - 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*up2 - 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2*up1 - 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u2*tetap3 - 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u3*tetap2 + 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*up3 + 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u3*up2 + 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*up3 + 8*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2*up2 + 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u3*up1 + 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u1*u3*tetap3 + 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u2*u3*tetap2 - 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2*up3 - 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u3*up2 - 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*u2*u3*tetap3 + 4*Ib2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u2*tetap2 - 4*Ib2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u3*tetap2 + 4*Ib2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u2*u3*tetap2 + 8*Ib2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2*u1*u2*u3*tetapp2 - 8*Ib2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2*u1*u2*u3*tetapp2 + 4*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u2*u3*tetap2 - 4*K1*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2*u3*tetap2 - 4*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u2*u3*tetap2 + 4*K1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2*u3*tetap2 - 4*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2*u3*tetap2 + 4*K2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u2*u3*tetap2 + 4*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2*u3*tetap2 - 4*K2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u2*u3*tetap2 + 4*Ib2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u2*u3*tetap2 - 4*Ib2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*tetap2^2*u1*u2*u3*tetap2 + 8*Ib2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2*u1*u2*tetapp2 - 8*Ib2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2*u1*u3*tetapp2 + 8*Ib2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2*u2*u3*tetapp2 + 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u2*tetap2 - 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u1*u3*tetap2 - 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2*tetap2 + 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta1*u2*u3*tetap2 + 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u3*tetap2 - 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u2*tetap2 - 4*K1*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*u3*tetap2 + 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u1*u3*tetap2 + 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u2*tetap2 - 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta2*u2*u3*tetap2 - 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u1*u3*tetap2 + 4*K2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*teta3*u2*u3*tetap2)/(Mb2*(dm^2*l2^2 - Ib2*Mb2)*(L1 - u1 + u2)^2*(L2 - u2 + u3)^2) - (2*(up1 - up2)*(L1^2*dm^2*k2*l2^2*wL^3 + L2^2*dm^2*k1*l2^2*wL^3 - 2*Ib2*L1^2*Mb2*k2*wL^3 - 2*Ib2*L2^2*Mb2*k1*wL^3 + dm^2*k1*l2^2*u2^4*wL + dm^2*k2*l2^2*u2^4*wL - 2*Ib2*Mb2*k1*u2^4*wL - 2*Ib2*Mb2*k2*u2^4*wL - dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^4 + dm^2*k1*l2^2*u2^2*wL^3 + dm^2*k2*l2^2*u1^2*wL^3 + dm^2*k1*l2^2*u3^2*wL^3 + dm^2*k2*l2^2*u2^2*wL^3 - 2*Ib2*Mb2*k1*u2^2*wL^3 - 2*Ib2*Mb2*k2*u1^2*wL^3 - 2*Ib2*Mb2*k1*u3^2*wL^3 - 2*Ib2*Mb2*k2*u2^2*wL^3 - L1^2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*wL^3 - L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*wL^3 + L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*vL^3 + L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*vL^3 + L2^2*dm^2*k1*l2^2*u1^2*wL + L1^2*dm^2*k2*l2^2*u2^2*wL + L2^2*dm^2*k1*l2^2*u2^2*wL + L1^2*dm^2*k2*l2^2*u3^2*wL + L1^2*dm^2*k2*l2^2*vL^2*wL + L2^2*dm^2*k1*l2^2*vL^2*wL - 2*Ib2*L2^2*Mb2*k1*u1^2*wL - 2*Ib2*L1^2*Mb2*k2*u2^2*wL - 2*Ib2*L2^2*Mb2*k1*u2^2*wL - 2*Ib2*L1^2*Mb2*k2*u3^2*wL - 2*Ib2*L1^2*Mb2*k2*vL^2*wL - 2*Ib2*L2^2*Mb2*k1*vL^2*wL - L1^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^2 - L2^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1^2 - L1^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u3^2 - L2^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^2 - dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^4*wL - dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^4*wL + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^4*vL + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^4*vL - 2*dm^2*k1*l2^2*u1*u2^3*wL - 2*dm^2*k2*l2^2*u1*u2*wL^3 - 2*dm^2*k2*l2^2*u1*u2^3*wL - 2*dm^2*k1*l2^2*u2*u3*wL^3 - 2*dm^2*k1*l2^2*u2^3*u3*wL - 2*dm^2*k2*l2^2*u2^3*u3*wL + 4*Ib2*Mb2*k1*u1*u2^3*wL + 4*Ib2*Mb2*k2*u1*u2*wL^3 + 4*Ib2*Mb2*k2*u1*u2^3*wL + 4*Ib2*Mb2*k1*u2*u3*wL^3 + 4*Ib2*Mb2*k1*u2^3*u3*wL + 4*Ib2*Mb2*k2*u2^3*u3*wL + 2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u2^3 + 2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^3*u3 - L1^2*L2^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2 - dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*wL^3 - dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*wL^3 - dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u3^2*wL^3 - dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*wL^3 + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL^3 + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*vL^3 + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3^2*vL^3 + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL^3 + dm^2*k1*l2^2*u1^2*u2^2*wL + dm^2*k1*l2^2*u1^2*u3^2*wL + dm^2*k2*l2^2*u1^2*u2^2*wL + dm^2*k1*l2^2*u2^2*u3^2*wL + dm^2*k2*l2^2*u1^2*u3^2*wL + dm^2*k2*l2^2*u2^2*u3^2*wL + dm^2*k1*l2^2*u2^2*vL^2*wL + dm^2*k2*l2^2*u1^2*vL^2*wL + dm^2*k1*l2^2*u3^2*vL^2*wL + dm^2*k2*l2^2*u2^2*vL^2*wL + L1*dm^2*k1*l2^2*u2^3*wL - 2*L1*dm^2*k2*l2^2*u1*wL^3 + 2*L1*dm^2*k2*l2^2*u2*wL^3 + 2*L1*dm^2*k2*l2^2*u2^3*wL - 2*L2*dm^2*k1*l2^2*u2*wL^3 - 2*L2*dm^2*k1*l2^2*u2^3*wL + 2*L2*dm^2*k1*l2^2*u3*wL^3 - L2*dm^2*k2*l2^2*u2^3*wL - 2*Ib2*Mb2*k1*u1^2*u2^2*wL - 2*Ib2*Mb2*k1*u1^2*u3^2*wL - 2*Ib2*Mb2*k2*u1^2*u2^2*wL - 2*Ib2*Mb2*k1*u2^2*u3^2*wL - 2*Ib2*Mb2*k2*u1^2*u3^2*wL - 2*Ib2*Mb2*k2*u2^2*u3^2*wL - 2*Ib2*Mb2*k1*u2^2*vL^2*wL - 2*Ib2*Mb2*k2*u1^2*vL^2*wL - 2*Ib2*Mb2*k1*u3^2*vL^2*wL - 2*Ib2*Mb2*k2*u2^2*vL^2*wL - 2*Ib2*L1*Mb2*k1*u2^3*wL + 4*Ib2*L1*Mb2*k2*u1*wL^3 - 4*Ib2*L1*Mb2*k2*u2*wL^3 - 4*Ib2*L1*Mb2*k2*u2^3*wL + 4*Ib2*L2*Mb2*k1*u2*wL^3 + 4*Ib2*L2*Mb2*k1*u2^3*wL - 4*Ib2*L2*Mb2*k1*u3*wL^3 + 2*Ib2*L2*Mb2*k2*u2^3*wL - dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1^2*u2^2 - dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1^2*u3^2 - dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^2*u3^2 - 2*L1*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^3 + 2*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^3 - L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*wL - L1^2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*wL - L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*wL - L1^2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u3^2*wL - L1^2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*vL^2*wL - L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*vL^2*wL - K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^4 + K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^4 + K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^4 - K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^4 + L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*vL + L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL + L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL + L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u3^2*vL + L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*vL*wL^2 + L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*vL*wL^2 - L1*L2^2*dm^2*k1*l2^2*u1*wL - 2*L1*L2*dm^2*k1*l2^2*u2^2*wL + L1*L2^2*dm^2*k1*l2^2*u2*wL - 2*L1*L2*dm^2*k2*l2^2*u2^2*wL - L1^2*L2*dm^2*k2*l2^2*u2*wL + L1^2*L2*dm^2*k2*l2^2*u3*wL + 2*Ib2*L1*L2^2*Mb2*k1*u1*wL + 4*Ib2*L1*L2*Mb2*k1*u2^2*wL - 2*Ib2*L1*L2^2*Mb2*k1*u2*wL + 4*Ib2*L1*L2*Mb2*k2*u2^2*wL + 2*Ib2*L1^2*L2*Mb2*k2*u2*wL - 2*Ib2*L1^2*L2*Mb2*k2*u3*wL + 2*L1*L2^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1 + 4*L1*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^2 - 2*L1*L2^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2 + 2*L1^2*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2 - 2*L1^2*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u3 + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^3*wL + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*wL^3 + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^3*wL + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3*wL^3 + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^3*u3*wL + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^3*u3*wL - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^3*vL - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*vL^3 - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^3*vL - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*vL^3 - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*u3*vL - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*u3*vL - 2*dm^2*k1*l2^2*u1*u2*u3^2*wL + 4*dm^2*k1*l2^2*u1*u2^2*u3*wL - 2*dm^2*k1*l2^2*u1^2*u2*u3*wL - 2*dm^2*k2*l2^2*u1*u2*u3^2*wL + 4*dm^2*k2*l2^2*u1*u2^2*u3*wL - 2*dm^2*k2*l2^2*u1^2*u2*u3*wL - 2*dm^2*k2*l2^2*u1*u2*vL^2*wL - 2*dm^2*k1*l2^2*u2*u3*vL^2*wL + 4*Ib2*Mb2*k1*u1*u2*u3^2*wL - 8*Ib2*Mb2*k1*u1*u2^2*u3*wL + 4*Ib2*Mb2*k1*u1^2*u2*u3*wL + 4*Ib2*Mb2*k2*u1*u2*u3^2*wL - 8*Ib2*Mb2*k2*u1*u2^2*u3*wL + 4*Ib2*Mb2*k2*u1^2*u2*u3*wL + 4*Ib2*Mb2*k2*u1*u2*vL^2*wL + 4*Ib2*Mb2*k1*u2*u3*vL^2*wL + 2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u2*u3^2 - 4*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u2^2*u3 + 2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1^2*u2*u3 + Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^4 - dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u2^2*wL - dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u3^2*wL - dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u2^2*wL - dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*u3^2*wL - dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u3^2*wL - dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*u3^2*wL - dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*vL^2*wL - dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*vL^2*wL - dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u3^2*vL^2*wL - dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*vL^2*wL - L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^3*wL + 2*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*wL^3 - 2*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*wL^3 - 2*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^3*wL + 2*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*wL^3 + 2*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^3*wL - 2*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u3*wL^3 + L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^3*wL + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2^2*vL + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3^2*vL + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2^2*vL + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3^2*vL + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3^2*vL + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3^2*vL + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL*wL^2 + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*vL*wL^2 + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3^2*vL*wL^2 + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL*wL^2 + L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*vL - 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*vL^3 + 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL^3 + 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*vL - 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL^3 - 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*vL + 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3*vL^3 - L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*vL - L1*dm^2*k1*l2^2*u1*u2^2*wL - L1*dm^2*k1*l2^2*u1*u3^2*wL - 2*L1*dm^2*k2*l2^2*u1*u2^2*wL + 4*L2*dm^2*k1*l2^2*u1*u2^2*wL - 2*L2*dm^2*k1*l2^2*u1^2*u2*wL - 2*L2^2*dm^2*k1*l2^2*u1*u2*wL + L1*dm^2*k1*l2^2*u2*u3^2*wL - 2*L1*dm^2*k1*l2^2*u2^2*u3*wL - 2*L1*dm^2*k2*l2^2*u1*u3^2*wL + 2*L2*dm^2*k1*l2^2*u1^2*u3*wL + 2*L2*dm^2*k2*l2^2*u1*u2^2*wL - L2*dm^2*k2*l2^2*u1^2*u2*wL + 2*L1*dm^2*k2*l2^2*u2*u3^2*wL - 4*L1*dm^2*k2*l2^2*u2^2*u3*wL + 2*L2*dm^2*k1*l2^2*u2^2*u3*wL + L2*dm^2*k2*l2^2*u1^2*u3*wL - 2*L1^2*dm^2*k2*l2^2*u2*u3*wL + L2*dm^2*k2*l2^2*u2^2*u3*wL - 2*L1*dm^2*k2*l2^2*u1*vL^2*wL + 2*L1*dm^2*k2*l2^2*u2*vL^2*wL - 2*L2*dm^2*k1*l2^2*u2*vL^2*wL + 2*L2*dm^2*k1*l2^2*u3*vL^2*wL + 2*Ib2*L1*Mb2*k1*u1*u2^2*wL + 2*Ib2*L1*Mb2*k1*u1*u3^2*wL + 4*Ib2*L1*Mb2*k2*u1*u2^2*wL - 8*Ib2*L2*Mb2*k1*u1*u2^2*wL + 4*Ib2*L2*Mb2*k1*u1^2*u2*wL + 4*Ib2*L2^2*Mb2*k1*u1*u2*wL - 2*Ib2*L1*Mb2*k1*u2*u3^2*wL + 4*Ib2*L1*Mb2*k1*u2^2*u3*wL + 4*Ib2*L1*Mb2*k2*u1*u3^2*wL - 4*Ib2*L2*Mb2*k1*u1^2*u3*wL - 4*Ib2*L2*Mb2*k2*u1*u2^2*wL + 2*Ib2*L2*Mb2*k2*u1^2*u2*wL - 4*Ib2*L1*Mb2*k2*u2*u3^2*wL + 8*Ib2*L1*Mb2*k2*u2^2*u3*wL - 4*Ib2*L2*Mb2*k1*u2^2*u3*wL - 2*Ib2*L2*Mb2*k2*u1^2*u3*wL + 4*Ib2*L1^2*Mb2*k2*u2*u3*wL - 2*Ib2*L2*Mb2*k2*u2^2*u3*wL + 4*Ib2*L1*Mb2*k2*u1*vL^2*wL - 4*Ib2*L1*Mb2*k2*u2*vL^2*wL + 4*Ib2*L2*Mb2*k1*u2*vL^2*wL - 4*Ib2*L2*Mb2*k1*u3*vL^2*wL + 2*L1*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u2^2 + 2*L1*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u3^2 - 4*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u2^2 + 2*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1^2*u2 + 2*L2^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u2 - 2*L1*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2*u3^2 + 4*L1*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^2*u3 - 2*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1^2*u3 + 2*L1^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2*u3 - 2*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^2*u3 - K1*L1^2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1 + K1*L1^2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2 + K2*L1^2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2 - K2*L1^2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3 + Ib2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^2 + Ib2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1^2 + Ib2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u3^2 + Ib2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^2 + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*u3^2*wL - 4*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^2*u3*wL + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u2*u3*wL + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*u3^2*wL - 4*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^2*u3*wL + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u2*u3*wL + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*vL^2*wL + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3*vL^2*wL - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3^2*vL + 4*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*u3*vL - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*u3*vL - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3^2*vL + 4*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*u3*vL - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*u3*vL - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*vL*wL^2 - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*vL*wL^2 + 2*L1*dm^2*k1*l2^2*u1*u2*u3*wL + 4*L1*dm^2*k2*l2^2*u1*u2*u3*wL - 4*L2*dm^2*k1*l2^2*u1*u2*u3*wL - 2*L2*dm^2*k2*l2^2*u1*u2*u3*wL - K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1^2*u2^2 - K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1^2*u3^2 + K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*u2^2 - K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^2*u3^2 + K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*u3^2 + K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*u2^2 + K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*u3^2 + K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*u3^2 - K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1^2*u2^2 + K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*u3^2 - K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1^2*u3^2 - K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^2*u3^2 - 2*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^3 + 2*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^3 + 2*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^3 - 2*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^3 + 2*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^3 - 2*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^3 - 2*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^3 + 2*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^3 - 4*Ib2*L1*Mb2*k1*u1*u2*u3*wL - 8*Ib2*L1*Mb2*k2*u1*u2*u3*wL + 8*Ib2*L2*Mb2*k1*u1*u2*u3*wL + 4*Ib2*L2*Mb2*k2*u1*u2*u3*wL - 4*L1*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u2*u3 + 4*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u2*u3 - 2*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u2^3 - 2*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^3*u3 + Ib2*L1^2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2 + L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^2*wL + L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u3^2*wL + 2*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^2*wL - 4*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^2*wL + 2*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u2*wL + 2*L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*wL - L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3^2*wL + 2*L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*u3*wL + 2*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u3^2*wL - 2*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u3*wL - 2*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^2*wL + L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u2*wL - 2*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3^2*wL + 4*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*u3*wL - 2*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*u3*wL - L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u3*wL + 2*L1^2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3*wL - L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*u3*wL + 2*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*vL^2*wL - 2*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*vL^2*wL + 2*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*vL^2*wL - 2*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u3*vL^2*wL - L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*vL - L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3^2*vL - 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*vL + 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*vL - 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*vL - 2*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*vL + L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3^2*vL - 2*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*vL - 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3^2*vL + 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3*vL + 2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*vL - L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*vL + 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3^2*vL - 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*vL + 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*vL + L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3*vL - 2*L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*vL + L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*vL - 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*vL*wL^2 + 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL*wL^2 - 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL*wL^2 + 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3*vL*wL^2 + 2*L1*L2*dm^2*k1*l2^2*u1*u2*wL - 2*L1*L2*dm^2*k1*l2^2*u1*u3*wL + 2*L1*L2*dm^2*k2*l2^2*u1*u2*wL + 2*L1*L2*dm^2*k1*l2^2*u2*u3*wL - 2*L1*L2*dm^2*k2*l2^2*u1*u3*wL + 2*L1*L2*dm^2*k2*l2^2*u2*u3*wL - K1*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^2 - K1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1^2 - K1*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u3^2 + K1*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2 - K1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^2 + K1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2 + K1*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u3^2 + K1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2 + K2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2 + K2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2 + K2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u3^2 - K2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^2 + K2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2 - K2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1^2 - K2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u3^2 - K2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^2 - 4*Ib2*L1*L2*Mb2*k1*u1*u2*wL + 4*Ib2*L1*L2*Mb2*k1*u1*u3*wL - 4*Ib2*L1*L2*Mb2*k2*u1*u2*wL - 4*Ib2*L1*L2*Mb2*k1*u2*u3*wL + 4*Ib2*L1*L2*Mb2*k2*u1*u3*wL - 4*Ib2*L1*L2*Mb2*k2*u2*u3*wL + Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1^2*u2^2 + Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1^2*u3^2 + Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^2*u3^2 - 4*L1*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u2 + 4*L1*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u3 - 4*L1*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2*u3 + 2*Ib2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^3 - 2*Ib2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^3 + 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u2^3 - 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2^3 + 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^3*u3 - 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2^3 - 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^3*u3 + 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u2^3 - 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^3*u3 + 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^3*u3 + L1*L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*wL + 2*L1*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*wL - L1*L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*wL + 2*L1*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*wL + L1^2*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*wL - L1^2*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u3*wL - L1*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*vL - 2*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL + L1*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL - 2*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL - L1^2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL + L1^2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u3*vL - 2*Ib2*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1 - 4*Ib2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^2 + 2*Ib2*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2 - 2*Ib2*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2 + 2*Ib2*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u3 - 2*L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*u3*wL - 4*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*u3*wL + 4*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*u3*wL + 2*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*u3*wL + 2*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*vL + 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*vL - 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*vL - 2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*vL + 2*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u2^2 + 2*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u3^2 - 2*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2^2 - 4*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u2^2 + 2*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1^2*u2 + 2*K1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u2 - 2*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2*u3^2 + 4*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^2*u3 - 2*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u3^2 - 2*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1^2*u3 + 4*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2^2 - 2*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*u2 + 2*K1*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2*u3 - 2*K1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2 - 2*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2^2 + 2*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*u3^2 - 4*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*u3 - 2*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^2*u3 + 2*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*u3 - 2*K1*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*u3 - 2*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u3^2 + 2*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u2^2 + 4*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2^2 - 2*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*u2 - 2*K2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2 + 2*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*u3 + 2*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*u3^2 - 4*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*u3 + 2*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u3^2 + 2*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*u3 - 4*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u2^2 + 2*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1^2*u2 - 2*K2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*u3 + 2*K2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u2 - 2*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2*u3^2 + 4*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^2*u3 + 2*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*u3 - 2*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1^2*u3 + 2*K2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2*u3 - 2*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^2*u3 - 2*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u2*u3^2 + 4*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u2^2*u3 - 2*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1^2*u2*u3 - 2*L1*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*wL + 2*L1*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u3*wL - 2*L1*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*wL - 2*L1*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3*wL + 2*L1*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u3*wL - 2*L1*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3*wL + 2*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*vL - 2*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3*vL + 2*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*vL + 2*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*vL - 2*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3*vL + 2*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*vL + 2*K1*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1 + 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^2 - 2*K1*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2 - 2*K1*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1 + 2*K1*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2 - 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2 + 2*K1*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2 - 2*K1*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u3 - 2*K1*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2 - 2*K2*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1 + 2*K1*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u3 - 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2 + 2*K2*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2 + 2*K2*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1 - 2*K2*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2 + 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^2 - 2*K2*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2 + 2*K2*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u3 + 2*K2*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2 - 2*K2*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u3 - 2*Ib2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u2^2 - 2*Ib2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u3^2 + 4*Ib2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u2^2 - 2*Ib2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1^2*u2 - 2*Ib2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u2 + 2*Ib2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2*u3^2 - 4*Ib2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^2*u3 + 2*Ib2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1^2*u3 - 2*Ib2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2*u3 + 2*Ib2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^2*u3 + 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u2*u3^2 - 4*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u2^2*u3 + 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1^2*u2*u3 - 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2*u3^2 + 4*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2^2*u3 - 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*u2*u3 - 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2*u3^2 + 4*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2^2*u3 - 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*u2*u3 + 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u2*u3^2 - 4*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u2^2*u3 + 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1^2*u2*u3 - 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u2 + 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u3 + 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2 - 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2*u3 - 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u3 + 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2 + 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*u3 - 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u3 - 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u2 + 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*u3 + 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u3 - 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2*u3 + 4*Ib2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u2*u3 - 4*Ib2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u2*u3 + 4*Ib2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u2 - 4*Ib2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u3 + 4*Ib2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2*u3 - 4*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u2*u3 + 4*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2*u3 + 4*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u2*u3 - 4*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2*u3 + 4*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2*u3 - 4*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u2*u3 - 4*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2*u3 + 4*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u2*u3))/(Mb2*(dm^2*l2^2 - Ib2*Mb2)*(L1 - u1 + u2)^3*(L2 - u2 + u3)^2) - (2*(up2 - up3)*(L1^2*dm^2*k2*l2^2*wL^3 + L2^2*dm^2*k1*l2^2*wL^3 - 2*Ib2*L1^2*Mb2*k2*wL^3 - 2*Ib2*L2^2*Mb2*k1*wL^3 + dm^2*k1*l2^2*u2^4*wL + dm^2*k2*l2^2*u2^4*wL - 2*Ib2*Mb2*k1*u2^4*wL - 2*Ib2*Mb2*k2*u2^4*wL - dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^4 + dm^2*k1*l2^2*u2^2*wL^3 + dm^2*k2*l2^2*u1^2*wL^3 + dm^2*k1*l2^2*u3^2*wL^3 + dm^2*k2*l2^2*u2^2*wL^3 - 2*Ib2*Mb2*k1*u2^2*wL^3 - 2*Ib2*Mb2*k2*u1^2*wL^3 - 2*Ib2*Mb2*k1*u3^2*wL^3 - 2*Ib2*Mb2*k2*u2^2*wL^3 - L1^2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*wL^3 - L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*wL^3 + L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*vL^3 + L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*vL^3 + L2^2*dm^2*k1*l2^2*u1^2*wL + L1^2*dm^2*k2*l2^2*u2^2*wL + L2^2*dm^2*k1*l2^2*u2^2*wL + L1^2*dm^2*k2*l2^2*u3^2*wL + L1^2*dm^2*k2*l2^2*vL^2*wL + L2^2*dm^2*k1*l2^2*vL^2*wL - 2*Ib2*L2^2*Mb2*k1*u1^2*wL - 2*Ib2*L1^2*Mb2*k2*u2^2*wL - 2*Ib2*L2^2*Mb2*k1*u2^2*wL - 2*Ib2*L1^2*Mb2*k2*u3^2*wL - 2*Ib2*L1^2*Mb2*k2*vL^2*wL - 2*Ib2*L2^2*Mb2*k1*vL^2*wL - L1^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^2 - L2^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1^2 - L1^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u3^2 - L2^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^2 - dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^4*wL - dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^4*wL + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^4*vL + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^4*vL - 2*dm^2*k1*l2^2*u1*u2^3*wL - 2*dm^2*k2*l2^2*u1*u2*wL^3 - 2*dm^2*k2*l2^2*u1*u2^3*wL - 2*dm^2*k1*l2^2*u2*u3*wL^3 - 2*dm^2*k1*l2^2*u2^3*u3*wL - 2*dm^2*k2*l2^2*u2^3*u3*wL + 4*Ib2*Mb2*k1*u1*u2^3*wL + 4*Ib2*Mb2*k2*u1*u2*wL^3 + 4*Ib2*Mb2*k2*u1*u2^3*wL + 4*Ib2*Mb2*k1*u2*u3*wL^3 + 4*Ib2*Mb2*k1*u2^3*u3*wL + 4*Ib2*Mb2*k2*u2^3*u3*wL + 2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u2^3 + 2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^3*u3 - L1^2*L2^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2 - dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*wL^3 - dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*wL^3 - dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u3^2*wL^3 - dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*wL^3 + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL^3 + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*vL^3 + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3^2*vL^3 + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL^3 + dm^2*k1*l2^2*u1^2*u2^2*wL + dm^2*k1*l2^2*u1^2*u3^2*wL + dm^2*k2*l2^2*u1^2*u2^2*wL + dm^2*k1*l2^2*u2^2*u3^2*wL + dm^2*k2*l2^2*u1^2*u3^2*wL + dm^2*k2*l2^2*u2^2*u3^2*wL + dm^2*k1*l2^2*u2^2*vL^2*wL + dm^2*k2*l2^2*u1^2*vL^2*wL + dm^2*k1*l2^2*u3^2*vL^2*wL + dm^2*k2*l2^2*u2^2*vL^2*wL + L1*dm^2*k1*l2^2*u2^3*wL - 2*L1*dm^2*k2*l2^2*u1*wL^3 + 2*L1*dm^2*k2*l2^2*u2*wL^3 + 2*L1*dm^2*k2*l2^2*u2^3*wL - 2*L2*dm^2*k1*l2^2*u2*wL^3 - 2*L2*dm^2*k1*l2^2*u2^3*wL + 2*L2*dm^2*k1*l2^2*u3*wL^3 - L2*dm^2*k2*l2^2*u2^3*wL - 2*Ib2*Mb2*k1*u1^2*u2^2*wL - 2*Ib2*Mb2*k1*u1^2*u3^2*wL - 2*Ib2*Mb2*k2*u1^2*u2^2*wL - 2*Ib2*Mb2*k1*u2^2*u3^2*wL - 2*Ib2*Mb2*k2*u1^2*u3^2*wL - 2*Ib2*Mb2*k2*u2^2*u3^2*wL - 2*Ib2*Mb2*k1*u2^2*vL^2*wL - 2*Ib2*Mb2*k2*u1^2*vL^2*wL - 2*Ib2*Mb2*k1*u3^2*vL^2*wL - 2*Ib2*Mb2*k2*u2^2*vL^2*wL - 2*Ib2*L1*Mb2*k1*u2^3*wL + 4*Ib2*L1*Mb2*k2*u1*wL^3 - 4*Ib2*L1*Mb2*k2*u2*wL^3 - 4*Ib2*L1*Mb2*k2*u2^3*wL + 4*Ib2*L2*Mb2*k1*u2*wL^3 + 4*Ib2*L2*Mb2*k1*u2^3*wL - 4*Ib2*L2*Mb2*k1*u3*wL^3 + 2*Ib2*L2*Mb2*k2*u2^3*wL - dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1^2*u2^2 - dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1^2*u3^2 - dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^2*u3^2 - 2*L1*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^3 + 2*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^3 - L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*wL - L1^2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*wL - L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*wL - L1^2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u3^2*wL - L1^2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*vL^2*wL - L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*vL^2*wL - K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^4 + K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^4 + K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^4 - K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^4 + L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*vL + L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL + L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL + L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u3^2*vL + L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*vL*wL^2 + L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*vL*wL^2 - L1*L2^2*dm^2*k1*l2^2*u1*wL - 2*L1*L2*dm^2*k1*l2^2*u2^2*wL + L1*L2^2*dm^2*k1*l2^2*u2*wL - 2*L1*L2*dm^2*k2*l2^2*u2^2*wL - L1^2*L2*dm^2*k2*l2^2*u2*wL + L1^2*L2*dm^2*k2*l2^2*u3*wL + 2*Ib2*L1*L2^2*Mb2*k1*u1*wL + 4*Ib2*L1*L2*Mb2*k1*u2^2*wL - 2*Ib2*L1*L2^2*Mb2*k1*u2*wL + 4*Ib2*L1*L2*Mb2*k2*u2^2*wL + 2*Ib2*L1^2*L2*Mb2*k2*u2*wL - 2*Ib2*L1^2*L2*Mb2*k2*u3*wL + 2*L1*L2^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1 + 4*L1*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^2 - 2*L1*L2^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2 + 2*L1^2*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2 - 2*L1^2*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u3 + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^3*wL + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*wL^3 + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^3*wL + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3*wL^3 + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^3*u3*wL + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^3*u3*wL - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^3*vL - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*vL^3 - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^3*vL - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*vL^3 - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*u3*vL - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*u3*vL - 2*dm^2*k1*l2^2*u1*u2*u3^2*wL + 4*dm^2*k1*l2^2*u1*u2^2*u3*wL - 2*dm^2*k1*l2^2*u1^2*u2*u3*wL - 2*dm^2*k2*l2^2*u1*u2*u3^2*wL + 4*dm^2*k2*l2^2*u1*u2^2*u3*wL - 2*dm^2*k2*l2^2*u1^2*u2*u3*wL - 2*dm^2*k2*l2^2*u1*u2*vL^2*wL - 2*dm^2*k1*l2^2*u2*u3*vL^2*wL + 4*Ib2*Mb2*k1*u1*u2*u3^2*wL - 8*Ib2*Mb2*k1*u1*u2^2*u3*wL + 4*Ib2*Mb2*k1*u1^2*u2*u3*wL + 4*Ib2*Mb2*k2*u1*u2*u3^2*wL - 8*Ib2*Mb2*k2*u1*u2^2*u3*wL + 4*Ib2*Mb2*k2*u1^2*u2*u3*wL + 4*Ib2*Mb2*k2*u1*u2*vL^2*wL + 4*Ib2*Mb2*k1*u2*u3*vL^2*wL + 2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u2*u3^2 - 4*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u2^2*u3 + 2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1^2*u2*u3 + Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^4 - dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u2^2*wL - dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u3^2*wL - dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u2^2*wL - dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*u3^2*wL - dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u3^2*wL - dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*u3^2*wL - dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*vL^2*wL - dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*vL^2*wL - dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u3^2*vL^2*wL - dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*vL^2*wL - L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^3*wL + 2*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*wL^3 - 2*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*wL^3 - 2*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^3*wL + 2*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*wL^3 + 2*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^3*wL - 2*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u3*wL^3 + L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^3*wL + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2^2*vL + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3^2*vL + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2^2*vL + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3^2*vL + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3^2*vL + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3^2*vL + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL*wL^2 + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*vL*wL^2 + dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3^2*vL*wL^2 + dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL*wL^2 + L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*vL - 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*vL^3 + 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL^3 + 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*vL - 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL^3 - 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*vL + 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3*vL^3 - L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^3*vL - L1*dm^2*k1*l2^2*u1*u2^2*wL - L1*dm^2*k1*l2^2*u1*u3^2*wL - 2*L1*dm^2*k2*l2^2*u1*u2^2*wL + 4*L2*dm^2*k1*l2^2*u1*u2^2*wL - 2*L2*dm^2*k1*l2^2*u1^2*u2*wL - 2*L2^2*dm^2*k1*l2^2*u1*u2*wL + L1*dm^2*k1*l2^2*u2*u3^2*wL - 2*L1*dm^2*k1*l2^2*u2^2*u3*wL - 2*L1*dm^2*k2*l2^2*u1*u3^2*wL + 2*L2*dm^2*k1*l2^2*u1^2*u3*wL + 2*L2*dm^2*k2*l2^2*u1*u2^2*wL - L2*dm^2*k2*l2^2*u1^2*u2*wL + 2*L1*dm^2*k2*l2^2*u2*u3^2*wL - 4*L1*dm^2*k2*l2^2*u2^2*u3*wL + 2*L2*dm^2*k1*l2^2*u2^2*u3*wL + L2*dm^2*k2*l2^2*u1^2*u3*wL - 2*L1^2*dm^2*k2*l2^2*u2*u3*wL + L2*dm^2*k2*l2^2*u2^2*u3*wL - 2*L1*dm^2*k2*l2^2*u1*vL^2*wL + 2*L1*dm^2*k2*l2^2*u2*vL^2*wL - 2*L2*dm^2*k1*l2^2*u2*vL^2*wL + 2*L2*dm^2*k1*l2^2*u3*vL^2*wL + 2*Ib2*L1*Mb2*k1*u1*u2^2*wL + 2*Ib2*L1*Mb2*k1*u1*u3^2*wL + 4*Ib2*L1*Mb2*k2*u1*u2^2*wL - 8*Ib2*L2*Mb2*k1*u1*u2^2*wL + 4*Ib2*L2*Mb2*k1*u1^2*u2*wL + 4*Ib2*L2^2*Mb2*k1*u1*u2*wL - 2*Ib2*L1*Mb2*k1*u2*u3^2*wL + 4*Ib2*L1*Mb2*k1*u2^2*u3*wL + 4*Ib2*L1*Mb2*k2*u1*u3^2*wL - 4*Ib2*L2*Mb2*k1*u1^2*u3*wL - 4*Ib2*L2*Mb2*k2*u1*u2^2*wL + 2*Ib2*L2*Mb2*k2*u1^2*u2*wL - 4*Ib2*L1*Mb2*k2*u2*u3^2*wL + 8*Ib2*L1*Mb2*k2*u2^2*u3*wL - 4*Ib2*L2*Mb2*k1*u2^2*u3*wL - 2*Ib2*L2*Mb2*k2*u1^2*u3*wL + 4*Ib2*L1^2*Mb2*k2*u2*u3*wL - 2*Ib2*L2*Mb2*k2*u2^2*u3*wL + 4*Ib2*L1*Mb2*k2*u1*vL^2*wL - 4*Ib2*L1*Mb2*k2*u2*vL^2*wL + 4*Ib2*L2*Mb2*k1*u2*vL^2*wL - 4*Ib2*L2*Mb2*k1*u3*vL^2*wL + 2*L1*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u2^2 + 2*L1*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u3^2 - 4*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u2^2 + 2*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1^2*u2 + 2*L2^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u2 - 2*L1*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2*u3^2 + 4*L1*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^2*u3 - 2*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1^2*u3 + 2*L1^2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2*u3 - 2*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2^2*u3 - K1*L1^2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1 + K1*L1^2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2 + K2*L1^2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2 - K2*L1^2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3 + Ib2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^2 + Ib2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1^2 + Ib2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u3^2 + Ib2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^2 + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*u3^2*wL - 4*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^2*u3*wL + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u2*u3*wL + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*u3^2*wL - 4*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^2*u3*wL + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u2*u3*wL + 2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*vL^2*wL + 2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3*vL^2*wL - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3^2*vL + 4*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*u3*vL - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*u3*vL - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3^2*vL + 4*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*u3*vL - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*u3*vL - 2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*vL*wL^2 - 2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*vL*wL^2 + 2*L1*dm^2*k1*l2^2*u1*u2*u3*wL + 4*L1*dm^2*k2*l2^2*u1*u2*u3*wL - 4*L2*dm^2*k1*l2^2*u1*u2*u3*wL - 2*L2*dm^2*k2*l2^2*u1*u2*u3*wL - K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1^2*u2^2 - K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1^2*u3^2 + K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*u2^2 - K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^2*u3^2 + K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*u3^2 + K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*u2^2 + K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*u3^2 + K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*u3^2 - K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1^2*u2^2 + K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*u3^2 - K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1^2*u3^2 - K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^2*u3^2 - 2*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^3 + 2*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^3 + 2*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^3 - 2*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^3 + 2*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^3 - 2*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^3 - 2*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^3 + 2*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^3 - 4*Ib2*L1*Mb2*k1*u1*u2*u3*wL - 8*Ib2*L1*Mb2*k2*u1*u2*u3*wL + 8*Ib2*L2*Mb2*k1*u1*u2*u3*wL + 4*Ib2*L2*Mb2*k2*u1*u2*u3*wL - 4*L1*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u2*u3 + 4*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u2*u3 - 2*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u2^3 - 2*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^3*u3 + Ib2*L1^2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2 + L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^2*wL + L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u3^2*wL + 2*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^2*wL - 4*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^2*wL + 2*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u2*wL + 2*L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*wL - L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3^2*wL + 2*L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*u3*wL + 2*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u3^2*wL - 2*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u3*wL - 2*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2^2*wL + L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u2*wL - 2*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3^2*wL + 4*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*u3*wL - 2*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*u3*wL - L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1^2*u3*wL + 2*L1^2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3*wL - L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*u3*wL + 2*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*vL^2*wL - 2*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*vL^2*wL + 2*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*vL^2*wL - 2*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u3*vL^2*wL - L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*vL - L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3^2*vL - 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*vL + 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*vL - 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*vL - 2*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*vL + L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3^2*vL - 2*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*vL - 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3^2*vL + 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3*vL + 2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2^2*vL - L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u2*vL + 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3^2*vL - 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*vL + 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*vL + L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1^2*u3*vL - 2*L1^2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*vL + L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*u3*vL - 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*vL*wL^2 + 2*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL*wL^2 - 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL*wL^2 + 2*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u3*vL*wL^2 + 2*L1*L2*dm^2*k1*l2^2*u1*u2*wL - 2*L1*L2*dm^2*k1*l2^2*u1*u3*wL + 2*L1*L2*dm^2*k2*l2^2*u1*u2*wL + 2*L1*L2*dm^2*k1*l2^2*u2*u3*wL - 2*L1*L2*dm^2*k2*l2^2*u1*u3*wL + 2*L1*L2*dm^2*k2*l2^2*u2*u3*wL - K1*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^2 - K1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1^2 - K1*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u3^2 + K1*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2 - K1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^2 + K1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2 + K1*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u3^2 + K1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2 + K2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2 + K2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2 + K2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u3^2 - K2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^2 + K2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2 - K2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1^2 - K2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u3^2 - K2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^2 - 4*Ib2*L1*L2*Mb2*k1*u1*u2*wL + 4*Ib2*L1*L2*Mb2*k1*u1*u3*wL - 4*Ib2*L1*L2*Mb2*k2*u1*u2*wL - 4*Ib2*L1*L2*Mb2*k1*u2*u3*wL + 4*Ib2*L1*L2*Mb2*k2*u1*u3*wL - 4*Ib2*L1*L2*Mb2*k2*u2*u3*wL + Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1^2*u2^2 + Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1^2*u3^2 + Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^2*u3^2 - 4*L1*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u2 + 4*L1*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u1*u3 - 4*L1*L2*dm^3*l2^3*sin(alfam2 + teta2)*tetap2^2*u2*u3 + 2*Ib2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^3 - 2*Ib2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^3 + 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u2^3 - 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2^3 + 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^3*u3 - 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2^3 - 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^3*u3 + 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u2^3 - 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^3*u3 + 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^3*u3 + L1*L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*wL + 2*L1*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*wL - L1*L2^2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*wL + 2*L1*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2^2*wL + L1^2*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*wL - L1^2*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u3*wL - L1*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*vL - 2*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL + L1*L2^2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL - 2*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2^2*vL - L1^2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*vL + L1^2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u3*vL - 2*Ib2*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1 - 4*Ib2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^2 + 2*Ib2*L1*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2 - 2*Ib2*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2 + 2*Ib2*L1^2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u3 - 2*L1*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*u3*wL - 4*L1*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*u3*wL + 4*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*u3*wL + 2*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*u3*wL + 2*L1*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*vL + 4*L1*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*vL - 4*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*vL - 2*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*u3*vL + 2*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u2^2 + 2*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u3^2 - 2*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2^2 - 4*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u2^2 + 2*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1^2*u2 + 2*K1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u2 - 2*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2*u3^2 + 4*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^2*u3 - 2*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u3^2 - 2*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1^2*u3 + 4*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2^2 - 2*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*u2 + 2*K1*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2*u3 - 2*K1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2 - 2*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2^2 + 2*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*u3^2 - 4*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*u3 - 2*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^2*u3 + 2*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*u3 - 2*K1*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*u3 - 2*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u3^2 + 2*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u2^2 + 4*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2^2 - 2*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*u2 - 2*K2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2 + 2*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*u3 + 2*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*u3^2 - 4*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*u3 + 2*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u3^2 + 2*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*u3 - 4*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u2^2 + 2*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1^2*u2 - 2*K2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*u3 + 2*K2*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u2 - 2*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2*u3^2 + 4*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^2*u3 + 2*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2*u3 - 2*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1^2*u3 + 2*K2*L1^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2*u3 - 2*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^2*u3 - 2*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u2*u3^2 + 4*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u2^2*u3 - 2*Ib2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1^2*u2*u3 - 2*L1*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*wL + 2*L1*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u1*u3*wL - 2*L1*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u2*wL - 2*L1*L2*dm^2*k1*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3*wL + 2*L1*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u1*u3*wL - 2*L1*L2*dm^2*k2*l2^2*cos(2*alfam2 + 2*teta2)*u2*u3*wL + 2*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*vL - 2*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3*vL + 2*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u2*vL + 2*L1*L2*dm^2*k1*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*vL - 2*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u1*u3*vL + 2*L1*L2*dm^2*k2*l2^2*sin(2*alfam2 + 2*teta2)*u2*u3*vL + 2*K1*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1 + 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2^2 - 2*K1*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2 - 2*K1*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1 + 2*K1*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2 - 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2 + 2*K1*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2 - 2*K1*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u3 - 2*K1*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2 - 2*K2*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1 + 2*K1*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u3 - 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2^2 + 2*K2*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2 + 2*K2*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1 - 2*K2*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2 + 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2^2 - 2*K2*L1*L2^2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2 + 2*K2*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u3 + 2*K2*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2 - 2*K2*L1^2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u3 - 2*Ib2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u2^2 - 2*Ib2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u3^2 + 4*Ib2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u2^2 - 2*Ib2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1^2*u2 - 2*Ib2*L2^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u2 + 2*Ib2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2*u3^2 - 4*Ib2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^2*u3 + 2*Ib2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1^2*u3 - 2*Ib2*L1^2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2*u3 + 2*Ib2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2^2*u3 + 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u2*u3^2 - 4*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u2^2*u3 + 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1^2*u2*u3 - 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2*u3^2 + 4*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2^2*u3 - 2*K1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*u2*u3 - 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2*u3^2 + 4*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2^2*u3 - 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1^2*u2*u3 + 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u2*u3^2 - 4*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u2^2*u3 + 2*K2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1^2*u2*u3 - 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u2 + 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u3 + 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2 - 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u2*u3 - 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u3 + 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2 + 4*K1*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*u3 - 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u3 - 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u2 + 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u2*u3 + 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u3 - 4*K2*L1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u2*u3 + 4*Ib2*L1*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u2*u3 - 4*Ib2*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u2*u3 + 4*Ib2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u2 - 4*Ib2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u1*u3 + 4*Ib2*L1*L2*Mb2*dm*l2*sin(alfam2 + teta2)*tetap2^2*u2*u3 - 4*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u2*u3 + 4*K1*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2*u3 + 4*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta1*u1*u2*u3 - 4*K1*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2*u3 + 4*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2*u3 - 4*K2*L1*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u2*u3 - 4*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta2*u1*u2*u3 + 4*K2*L2*Mb2*dm*l2*cos(alfam2 + teta2)*teta3*u1*u2*u3))/(Mb2*(dm^2*l2^2 - Ib2*Mb2)*(L1 - u1 + u2)^2*(L2 - u2 + u3)^3);
    (K1*Mb2*u2^4*tetap2 - K1*Mb2*u2^4*tetap1 + K2*Mb2*u2^4*tetap2 - K2*Mb2*u2^4*tetap3 - K1*L1^2*L2^2*Mb2*tetap1 + K1*L1^2*L2^2*Mb2*tetap2 + K2*L1^2*L2^2*Mb2*tetap2 - K2*L1^2*L2^2*Mb2*tetap3 - K1*Mb2*u1^2*u2^2*tetap1 + K1*Mb2*u1^2*u2^2*tetap2 - K1*Mb2*u1^2*u3^2*tetap1 + K1*Mb2*u1^2*u3^2*tetap2 - K1*Mb2*u2^2*u3^2*tetap1 + K2*Mb2*u1^2*u2^2*tetap2 + K1*Mb2*u2^2*u3^2*tetap2 - K2*Mb2*u1^2*u2^2*tetap3 + K2*Mb2*u1^2*u3^2*tetap2 - K2*Mb2*u1^2*u3^2*tetap3 + K2*Mb2*u2^2*u3^2*tetap2 - K2*Mb2*u2^2*u3^2*tetap3 - 2*K1*L1*Mb2*u2^3*tetap1 + 2*K1*L1*Mb2*u2^3*tetap2 + 2*K1*L2*Mb2*u2^3*tetap1 - 2*K1*L2*Mb2*u2^3*tetap2 + 2*K2*L1*Mb2*u2^3*tetap2 - 2*K2*L1*Mb2*u2^3*tetap3 - 2*K2*L2*Mb2*u2^3*tetap2 + 2*K2*L2*Mb2*u2^3*tetap3 - K1*L1^2*Mb2*u2^2*tetap1 - K1*L2^2*Mb2*u1^2*tetap1 + K1*L1^2*Mb2*u2^2*tetap2 - K1*L1^2*Mb2*u3^2*tetap1 + K1*L2^2*Mb2*u1^2*tetap2 - K1*L2^2*Mb2*u2^2*tetap1 + K1*L1^2*Mb2*u3^2*tetap2 + K1*L2^2*Mb2*u2^2*tetap2 + K2*L1^2*Mb2*u2^2*tetap2 + K2*L2^2*Mb2*u1^2*tetap2 - K2*L1^2*Mb2*u2^2*tetap3 + K2*L1^2*Mb2*u3^2*tetap2 - K2*L2^2*Mb2*u1^2*tetap3 + K2*L2^2*Mb2*u2^2*tetap2 - K2*L1^2*Mb2*u3^2*tetap3 - K2*L2^2*Mb2*u2^2*tetap3 + 2*K1*Mb2*teta1*u2^3*up1 + 2*K1*Mb2*u1*u2^3*tetap1 - 4*K1*Mb2*teta1*u2^3*up2 - 2*K1*Mb2*teta2*u2^3*up1 - 2*K1*Mb2*u1*u2^3*tetap2 + 2*K1*Mb2*teta1*u2^3*up3 + 4*K1*Mb2*teta2*u2^3*up2 + 2*K1*Mb2*u2^3*u3*tetap1 - 2*K2*Mb2*teta2*u2^3*up1 - 2*K2*Mb2*u1*u2^3*tetap2 - 2*K1*Mb2*teta2*u2^3*up3 - 2*K1*Mb2*u2^3*u3*tetap2 + 4*K2*Mb2*teta2*u2^3*up2 + 2*K2*Mb2*teta3*u2^3*up1 + 2*K2*Mb2*u1*u2^3*tetap3 - 2*K2*Mb2*teta2*u2^3*up3 - 4*K2*Mb2*teta3*u2^3*up2 - 2*K2*Mb2*u2^3*u3*tetap2 + 2*K2*Mb2*teta3*u2^3*up3 + 2*K2*Mb2*u2^3*u3*tetap3 + 2*K1*L1*Mb2*teta1*u2^2*up1 + 2*K1*L1*Mb2*u1*u2^2*tetap1 - 2*K1*L2^2*Mb2*teta1*u1*up1 - 6*K1*L1*Mb2*teta1*u2^2*up2 + 2*K1*L1*Mb2*teta1*u3^2*up1 - 2*K1*L1*Mb2*teta2*u2^2*up1 - 2*K1*L1*Mb2*u1*u2^2*tetap2 + 2*K1*L1*Mb2*u1*u3^2*tetap1 + 2*K1*L2*Mb2*teta1*u1^2*up2 - 4*K1*L2*Mb2*teta1*u2^2*up1 - 4*K1*L2*Mb2*u1*u2^2*tetap1 + 2*K1*L2*Mb2*u1^2*u2*tetap1 - 2*K1*L1^2*Mb2*teta1*u2*up2 + 2*K1*L2^2*Mb2*teta1*u1*up2 + 2*K1*L2^2*Mb2*teta1*u2*up1 + 2*K1*L2^2*Mb2*teta2*u1*up1 + 2*K1*L2^2*Mb2*u1*u2*tetap1 + 4*K1*L1*Mb2*teta1*u2^2*up3 - 2*K1*L1*Mb2*teta1*u3^2*up2 + 6*K1*L1*Mb2*teta2*u2^2*up2 - 2*K1*L1*Mb2*teta2*u3^2*up1 - 2*K1*L1*Mb2*u1*u3^2*tetap2 - 2*K1*L1*Mb2*u2*u3^2*tetap1 + 4*K1*L1*Mb2*u2^2*u3*tetap1 - 2*K1*L2*Mb2*teta1*u1^2*up3 + 6*K1*L2*Mb2*teta1*u2^2*up2 - 2*K1*L2*Mb2*teta2*u1^2*up2 + 4*K1*L2*Mb2*teta2*u2^2*up1 + 4*K1*L2*Mb2*u1*u2^2*tetap2 - 2*K1*L2*Mb2*u1^2*u2*tetap2 - 2*K1*L2*Mb2*u1^2*u3*tetap1 + 2*K1*L1^2*Mb2*teta1*u2*up3 + 2*K1*L1^2*Mb2*teta1*u3*up2 + 2*K1*L1^2*Mb2*teta2*u2*up2 + 2*K1*L1^2*Mb2*u2*u3*tetap1 - 2*K1*L2^2*Mb2*teta1*u2*up2 - 2*K1*L2^2*Mb2*teta2*u1*up2 - 2*K1*L2^2*Mb2*teta2*u2*up1 - 2*K1*L2^2*Mb2*u1*u2*tetap2 - 2*K2*L1*Mb2*teta2*u2^2*up1 - 2*K2*L1*Mb2*u1*u2^2*tetap2 + 2*K2*L2^2*Mb2*teta2*u1*up1 - 4*K1*L1*Mb2*teta2*u2^2*up3 + 2*K1*L1*Mb2*teta2*u3^2*up2 + 2*K1*L1*Mb2*u2*u3^2*tetap2 - 4*K1*L1*Mb2*u2^2*u3*tetap2 - 2*K1*L2*Mb2*teta1*u2^2*up3 + 2*K1*L2*Mb2*teta2*u1^2*up3 - 6*K1*L2*Mb2*teta2*u2^2*up2 + 2*K1*L2*Mb2*u1^2*u3*tetap2 - 2*K1*L2*Mb2*u2^2*u3*tetap1 - 2*K1*L1^2*Mb2*teta1*u3*up3 - 2*K1*L1^2*Mb2*teta2*u2*up3 - 2*K1*L1^2*Mb2*teta2*u3*up2 - 2*K1*L1^2*Mb2*u2*u3*tetap2 + 2*K1*L2^2*Mb2*teta2*u2*up2 + 6*K2*L1*Mb2*teta2*u2^2*up2 - 2*K2*L1*Mb2*teta2*u3^2*up1 + 2*K2*L1*Mb2*teta3*u2^2*up1 + 2*K2*L1*Mb2*u1*u2^2*tetap3 - 2*K2*L1*Mb2*u1*u3^2*tetap2 - 2*K2*L2*Mb2*teta2*u1^2*up2 + 4*K2*L2*Mb2*teta2*u2^2*up1 + 4*K2*L2*Mb2*u1*u2^2*tetap2 - 2*K2*L2*Mb2*u1^2*u2*tetap2 + 2*K2*L1^2*Mb2*teta2*u2*up2 - 2*K2*L2^2*Mb2*teta2*u1*up2 - 2*K2*L2^2*Mb2*teta2*u2*up1 - 2*K2*L2^2*Mb2*teta3*u1*up1 - 2*K2*L2^2*Mb2*u1*u2*tetap2 + 2*K1*L2*Mb2*teta2*u2^2*up3 + 2*K1*L2*Mb2*u2^2*u3*tetap2 + 2*K1*L1^2*Mb2*teta2*u3*up3 - 4*K2*L1*Mb2*teta2*u2^2*up3 + 2*K2*L1*Mb2*teta2*u3^2*up2 - 6*K2*L1*Mb2*teta3*u2^2*up2 + 2*K2*L1*Mb2*teta3*u3^2*up1 + 2*K2*L1*Mb2*u1*u3^2*tetap3 + 2*K2*L1*Mb2*u2*u3^2*tetap2 - 4*K2*L1*Mb2*u2^2*u3*tetap2 + 2*K2*L2*Mb2*teta2*u1^2*up3 - 6*K2*L2*Mb2*teta2*u2^2*up2 + 2*K2*L2*Mb2*teta3*u1^2*up2 - 4*K2*L2*Mb2*teta3*u2^2*up1 - 4*K2*L2*Mb2*u1*u2^2*tetap3 + 2*K2*L2*Mb2*u1^2*u2*tetap3 + 2*K2*L2*Mb2*u1^2*u3*tetap2 - 2*K2*L1^2*Mb2*teta2*u2*up3 - 2*K2*L1^2*Mb2*teta2*u3*up2 - 2*K2*L1^2*Mb2*teta3*u2*up2 - 2*K2*L1^2*Mb2*u2*u3*tetap2 + 2*K2*L2^2*Mb2*teta2*u2*up2 + 2*K2*L2^2*Mb2*teta3*u1*up2 + 2*K2*L2^2*Mb2*teta3*u2*up1 + 2*K2*L2^2*Mb2*u1*u2*tetap3 + 4*K2*L1*Mb2*teta3*u2^2*up3 - 2*K2*L1*Mb2*teta3*u3^2*up2 - 2*K2*L1*Mb2*u2*u3^2*tetap3 + 4*K2*L1*Mb2*u2^2*u3*tetap3 + 2*K2*L2*Mb2*teta2*u2^2*up3 - 2*K2*L2*Mb2*teta3*u1^2*up3 + 6*K2*L2*Mb2*teta3*u2^2*up2 - 2*K2*L2*Mb2*u1^2*u3*tetap3 + 2*K2*L2*Mb2*u2^2*u3*tetap2 + 2*K2*L1^2*Mb2*teta2*u3*up3 + 2*K2*L1^2*Mb2*teta3*u2*up3 + 2*K2*L1^2*Mb2*teta3*u3*up2 + 2*K2*L1^2*Mb2*u2*u3*tetap3 - 2*K2*L2^2*Mb2*teta3*u2*up2 - 2*K2*L2*Mb2*teta3*u2^2*up3 - 2*K2*L2*Mb2*u2^2*u3*tetap3 - 2*K2*L1^2*Mb2*teta3*u3*up3 + 2*K1*L1*L2^2*Mb2*teta1*up1 + 2*K1*L1*L2^2*Mb2*u1*tetap1 + 4*K1*L1*L2*Mb2*u2^2*tetap1 - 2*K1*L1*L2^2*Mb2*teta1*up2 - 2*K1*L1*L2^2*Mb2*teta2*up1 - 2*K1*L1*L2^2*Mb2*u1*tetap2 - 2*K1*L1*L2^2*Mb2*u2*tetap1 + 2*K1*L1^2*L2*Mb2*teta1*up2 + 2*K1*L1^2*L2*Mb2*u2*tetap1 - 4*K1*L1*L2*Mb2*u2^2*tetap2 + 2*K1*L1*L2^2*Mb2*teta2*up2 + 2*K1*L1*L2^2*Mb2*u2*tetap2 - 2*K1*L1^2*L2*Mb2*teta1*up3 - 2*K1*L1^2*L2*Mb2*teta2*up2 - 2*K1*L1^2*L2*Mb2*u2*tetap2 - 2*K1*L1^2*L2*Mb2*u3*tetap1 - 2*K2*L1*L2^2*Mb2*teta2*up1 - 2*K2*L1*L2^2*Mb2*u1*tetap2 + 2*K1*L1^2*L2*Mb2*teta2*up3 + 2*K1*L1^2*L2*Mb2*u3*tetap2 - 4*K2*L1*L2*Mb2*u2^2*tetap2 + 2*K2*L1*L2^2*Mb2*teta2*up2 + 2*K2*L1*L2^2*Mb2*teta3*up1 + 2*K2*L1*L2^2*Mb2*u1*tetap3 + 2*K2*L1*L2^2*Mb2*u2*tetap2 - 2*K2*L1^2*L2*Mb2*teta2*up2 - 2*K2*L1^2*L2*Mb2*u2*tetap2 + 4*K2*L1*L2*Mb2*u2^2*tetap3 - 2*K2*L1*L2^2*Mb2*teta3*up2 - 2*K2*L1*L2^2*Mb2*u2*tetap3 + 2*K2*L1^2*L2*Mb2*teta2*up3 + 2*K2*L1^2*L2*Mb2*teta3*up2 + 2*K2*L1^2*L2*Mb2*u2*tetap3 + 2*K2*L1^2*L2*Mb2*u3*tetap2 - 2*K2*L1^2*L2*Mb2*teta3*up3 - 2*K2*L1^2*L2*Mb2*u3*tetap3 - 2*dm*k1*l2*cos(alfam2 + teta2)*u2^4*wpL - 2*dm*k2*l2*cos(alfam2 + teta2)*u2^4*wpL + 2*dm*k1*l2*sin(alfam2 + teta2)*u2^4*vpL + 2*dm*k2*l2*sin(alfam2 + teta2)*u2^4*vpL - 2*K1*Mb2*teta1*u1*u2^2*up1 + 6*K1*Mb2*teta1*u1*u2^2*up2 - 2*K1*Mb2*teta1*u1*u3^2*up1 - 2*K1*Mb2*teta1*u1^2*u2*up2 + 2*K1*Mb2*teta2*u1*u2^2*up1 - 4*K1*Mb2*teta1*u1*u2^2*up3 + 2*K1*Mb2*teta1*u1*u3^2*up2 + 2*K1*Mb2*teta1*u2*u3^2*up1 + 2*K1*Mb2*teta1*u1^2*u2*up3 + 2*K1*Mb2*teta1*u1^2*u3*up2 - 4*K1*Mb2*teta1*u2^2*u3*up1 - 6*K1*Mb2*teta2*u1*u2^2*up2 + 2*K1*Mb2*teta2*u1*u3^2*up1 + 2*K1*Mb2*teta2*u1^2*u2*up2 + 2*K1*Mb2*u1*u2*u3^2*tetap1 - 4*K1*Mb2*u1*u2^2*u3*tetap1 + 2*K1*Mb2*u1^2*u2*u3*tetap1 + 2*K2*Mb2*teta2*u1*u2^2*up1 - 2*K1*Mb2*teta1*u2*u3^2*up2 - 2*K1*Mb2*teta1*u1^2*u3*up3 + 6*K1*Mb2*teta1*u2^2*u3*up2 + 4*K1*Mb2*teta2*u1*u2^2*up3 - 2*K1*Mb2*teta2*u1*u3^2*up2 - 2*K1*Mb2*teta2*u2*u3^2*up1 - 2*K1*Mb2*teta2*u1^2*u2*up3 - 2*K1*Mb2*teta2*u1^2*u3*up2 + 4*K1*Mb2*teta2*u2^2*u3*up1 - 2*K1*Mb2*u1*u2*u3^2*tetap2 + 4*K1*Mb2*u1*u2^2*u3*tetap2 - 2*K1*Mb2*u1^2*u2*u3*tetap2 - 6*K2*Mb2*teta2*u1*u2^2*up2 + 2*K2*Mb2*teta2*u1*u3^2*up1 + 2*K2*Mb2*teta2*u1^2*u2*up2 - 2*K2*Mb2*teta3*u1*u2^2*up1 - 2*K1*Mb2*teta1*u2^2*u3*up3 + 2*K1*Mb2*teta2*u2*u3^2*up2 + 2*K1*Mb2*teta2*u1^2*u3*up3 - 6*K1*Mb2*teta2*u2^2*u3*up2 + 4*K2*Mb2*teta2*u1*u2^2*up3 - 2*K2*Mb2*teta2*u1*u3^2*up2 - 2*K2*Mb2*teta2*u2*u3^2*up1 - 2*K2*Mb2*teta2*u1^2*u2*up3 - 2*K2*Mb2*teta2*u1^2*u3*up2 + 4*K2*Mb2*teta2*u2^2*u3*up1 + 6*K2*Mb2*teta3*u1*u2^2*up2 - 2*K2*Mb2*teta3*u1*u3^2*up1 - 2*K2*Mb2*teta3*u1^2*u2*up2 - 2*K2*Mb2*u1*u2*u3^2*tetap2 + 4*K2*Mb2*u1*u2^2*u3*tetap2 - 2*K2*Mb2*u1^2*u2*u3*tetap2 + 2*K1*Mb2*teta2*u2^2*u3*up3 + 2*K2*Mb2*teta2*u2*u3^2*up2 + 2*K2*Mb2*teta2*u1^2*u3*up3 - 6*K2*Mb2*teta2*u2^2*u3*up2 - 4*K2*Mb2*teta3*u1*u2^2*up3 + 2*K2*Mb2*teta3*u1*u3^2*up2 + 2*K2*Mb2*teta3*u2*u3^2*up1 + 2*K2*Mb2*teta3*u1^2*u2*up3 + 2*K2*Mb2*teta3*u1^2*u3*up2 - 4*K2*Mb2*teta3*u2^2*u3*up1 + 2*K2*Mb2*u1*u2*u3^2*tetap3 - 4*K2*Mb2*u1*u2^2*u3*tetap3 + 2*K2*Mb2*u1^2*u2*u3*tetap3 + 2*K2*Mb2*teta2*u2^2*u3*up3 - 2*K2*Mb2*teta3*u2*u3^2*up2 - 2*K2*Mb2*teta3*u1^2*u3*up3 + 6*K2*Mb2*teta3*u2^2*u3*up2 - 2*K2*Mb2*teta3*u2^2*u3*up3 + 2*dm*k1*l2*sin(alfam2 + teta2)*u1^2*u2^2*vpL + 2*dm*k1*l2*sin(alfam2 + teta2)*u1^2*u3^2*vpL + 2*dm*k2*l2*sin(alfam2 + teta2)*u1^2*u2^2*vpL + 2*dm*k1*l2*sin(alfam2 + teta2)*u2^2*u3^2*vpL + 2*dm*k2*l2*sin(alfam2 + teta2)*u1^2*u3^2*vpL + 2*dm*k2*l2*sin(alfam2 + teta2)*u2^2*u3^2*vpL + 2*dm*k1*l2*sin(alfam2 + teta2)*u2^2*wL^3*tetap2 + 2*dm*k2*l2*sin(alfam2 + teta2)*u1^2*wL^3*tetap2 + 2*dm*k1*l2*sin(alfam2 + teta2)*u3^2*wL^3*tetap2 + 2*dm*k2*l2*sin(alfam2 + teta2)*u2^2*wL^3*tetap2 + 6*dm*k1*l2*sin(alfam2 + teta2)*u2^2*vL^2*vpL + 6*dm*k2*l2*sin(alfam2 + teta2)*u1^2*vL^2*vpL + 6*dm*k1*l2*sin(alfam2 + teta2)*u3^2*vL^2*vpL + 6*dm*k2*l2*sin(alfam2 + teta2)*u2^2*vL^2*vpL + 2*dm*k1*l2*sin(alfam2 + teta2)*u2^2*wL^2*vpL + 2*dm*k2*l2*sin(alfam2 + teta2)*u1^2*wL^2*vpL + 2*dm*k1*l2*sin(alfam2 + teta2)*u3^2*wL^2*vpL + 2*dm*k2*l2*sin(alfam2 + teta2)*u2^2*wL^2*vpL + 2*L1*dm*k1*l2*sin(alfam2 + teta2)*u2^3*vpL - 4*L1*dm*k2*l2*sin(alfam2 + teta2)*vL^3*up1 + 4*L1*dm*k2*l2*sin(alfam2 + teta2)*u2^3*vpL + 4*L1*dm*k2*l2*sin(alfam2 + teta2)*vL^3*up2 - 4*L2*dm*k1*l2*sin(alfam2 + teta2)*u2^3*vpL - 4*L2*dm*k1*l2*sin(alfam2 + teta2)*vL^3*up2 + 4*L2*dm*k1*l2*sin(alfam2 + teta2)*vL^3*up3 - 2*L2*dm*k2*l2*sin(alfam2 + teta2)*u2^3*vpL - 4*K1*L1*L2*Mb2*teta1*u1*up2 - 4*K1*L1*L2*Mb2*teta1*u2*up1 - 4*K1*L1*L2*Mb2*u1*u2*tetap1 + 4*K1*L1*L2*Mb2*teta1*u1*up3 + 8*K1*L1*L2*Mb2*teta1*u2*up2 + 4*K1*L1*L2*Mb2*teta1*u3*up1 + 4*K1*L1*L2*Mb2*teta2*u1*up2 + 4*K1*L1*L2*Mb2*teta2*u2*up1 + 4*K1*L1*L2*Mb2*u1*u2*tetap2 + 4*K1*L1*L2*Mb2*u1*u3*tetap1 - 4*K1*L1*L2*Mb2*teta1*u2*up3 - 4*K1*L1*L2*Mb2*teta1*u3*up2 - 4*K1*L1*L2*Mb2*teta2*u1*up3 - 8*K1*L1*L2*Mb2*teta2*u2*up2 - 4*K1*L1*L2*Mb2*teta2*u3*up1 - 4*K1*L1*L2*Mb2*u1*u3*tetap2 - 4*K1*L1*L2*Mb2*u2*u3*tetap1 + 4*K2*L1*L2*Mb2*teta2*u1*up2 + 4*K2*L1*L2*Mb2*teta2*u2*up1 + 4*K2*L1*L2*Mb2*u1*u2*tetap2 + 4*K1*L1*L2*Mb2*teta2*u2*up3 + 4*K1*L1*L2*Mb2*teta2*u3*up2 + 4*K1*L1*L2*Mb2*u2*u3*tetap2 - 4*K2*L1*L2*Mb2*teta2*u1*up3 - 8*K2*L1*L2*Mb2*teta2*u2*up2 - 4*K2*L1*L2*Mb2*teta2*u3*up1 - 4*K2*L1*L2*Mb2*teta3*u1*up2 - 4*K2*L1*L2*Mb2*teta3*u2*up1 - 4*K2*L1*L2*Mb2*u1*u2*tetap3 - 4*K2*L1*L2*Mb2*u1*u3*tetap2 + 4*K2*L1*L2*Mb2*teta2*u2*up3 + 4*K2*L1*L2*Mb2*teta2*u3*up2 + 4*K2*L1*L2*Mb2*teta3*u1*up3 + 8*K2*L1*L2*Mb2*teta3*u2*up2 + 4*K2*L1*L2*Mb2*teta3*u3*up1 + 4*K2*L1*L2*Mb2*u1*u3*tetap3 + 4*K2*L1*L2*Mb2*u2*u3*tetap2 - 4*K2*L1*L2*Mb2*teta3*u2*up3 - 4*K2*L1*L2*Mb2*teta3*u3*up2 - 4*K2*L1*L2*Mb2*u2*u3*tetap3 + 4*K1*Mb2*teta1*u1*u2*u3*up1 - 8*K1*Mb2*teta1*u1*u2*u3*up2 - 4*K1*Mb2*teta2*u1*u2*u3*up1 + 4*K1*Mb2*teta1*u1*u2*u3*up3 + 8*K1*Mb2*teta2*u1*u2*u3*up2 - 4*K2*Mb2*teta2*u1*u2*u3*up1 - 4*K1*Mb2*teta2*u1*u2*u3*up3 + 8*K2*Mb2*teta2*u1*u2*u3*up2 + 4*K2*Mb2*teta3*u1*u2*u3*up1 - 4*K2*Mb2*teta2*u1*u2*u3*up3 - 8*K2*Mb2*teta3*u1*u2*u3*up2 + 4*K2*Mb2*teta3*u1*u2*u3*up3 + 2*L1^2*dm*k2*l2*cos(alfam2 + teta2)*vL^3*tetap2 + 2*L2^2*dm*k1*l2*cos(alfam2 + teta2)*vL^3*tetap2 - 2*L2^2*dm*k1*l2*cos(alfam2 + teta2)*u1^2*wpL - 2*L1^2*dm*k2*l2*cos(alfam2 + teta2)*u2^2*wpL - 2*L2^2*dm*k1*l2*cos(alfam2 + teta2)*u2^2*wpL - 2*L1^2*dm*k2*l2*cos(alfam2 + teta2)*u3^2*wpL - 2*L1^2*dm*k2*l2*cos(alfam2 + teta2)*vL^2*wpL - 2*L2^2*dm*k1*l2*cos(alfam2 + teta2)*vL^2*wpL - 6*L1^2*dm*k2*l2*cos(alfam2 + teta2)*wL^2*wpL - 6*L2^2*dm*k1*l2*cos(alfam2 + teta2)*wL^2*wpL + 2*L2^2*dm*k1*l2*sin(alfam2 + teta2)*u1^2*vpL + 2*L1^2*dm*k2*l2*sin(alfam2 + teta2)*u2^2*vpL + 2*L2^2*dm*k1*l2*sin(alfam2 + teta2)*u2^2*vpL + 2*L1^2*dm*k2*l2*sin(alfam2 + teta2)*u3^2*vpL + 2*L1^2*dm*k2*l2*sin(alfam2 + teta2)*wL^3*tetap2 + 2*L2^2*dm*k1*l2*sin(alfam2 + teta2)*wL^3*tetap2 + 6*L1^2*dm*k2*l2*sin(alfam2 + teta2)*vL^2*vpL + 6*L2^2*dm*k1*l2*sin(alfam2 + teta2)*vL^2*vpL + 2*L1^2*dm*k2*l2*sin(alfam2 + teta2)*wL^2*vpL + 2*L2^2*dm*k1*l2*sin(alfam2 + teta2)*wL^2*vpL + 2*dm*k1*l2*cos(alfam2 + teta2)*u2^4*vL*tetap2 + 2*dm*k2*l2*cos(alfam2 + teta2)*u2^4*vL*tetap2 + 4*dm*k1*l2*cos(alfam2 + teta2)*u1*u2^3*wpL + 4*dm*k1*l2*cos(alfam2 + teta2)*u2^3*wL*up1 - 4*dm*k2*l2*cos(alfam2 + teta2)*u1*wL^3*up1 - 4*dm*k1*l2*cos(alfam2 + teta2)*u2*wL^3*up2 - 8*dm*k1*l2*cos(alfam2 + teta2)*u2^3*wL*up2 + 4*dm*k2*l2*cos(alfam2 + teta2)*u1*u2^3*wpL + 4*dm*k2*l2*cos(alfam2 + teta2)*u1*wL^3*up2 + 4*dm*k2*l2*cos(alfam2 + teta2)*u2*wL^3*up1 + 4*dm*k2*l2*cos(alfam2 + teta2)*u2^3*wL*up1 + 4*dm*k1*l2*cos(alfam2 + teta2)*u2*wL^3*up3 + 4*dm*k1*l2*cos(alfam2 + teta2)*u3*wL^3*up2 + 4*dm*k1*l2*cos(alfam2 + teta2)*u2^3*u3*wpL + 4*dm*k1*l2*cos(alfam2 + teta2)*u2^3*wL*up3 - 4*dm*k2*l2*cos(alfam2 + teta2)*u2*wL^3*up2 - 8*dm*k2*l2*cos(alfam2 + teta2)*u2^3*wL*up2 - 4*dm*k1*l2*cos(alfam2 + teta2)*u3*wL^3*up3 + 4*dm*k2*l2*cos(alfam2 + teta2)*u2^3*u3*wpL + 4*dm*k2*l2*cos(alfam2 + teta2)*u2^3*wL*up3 - 4*dm*k1*l2*sin(alfam2 + teta2)*u1*u2^3*vpL - 4*dm*k1*l2*sin(alfam2 + teta2)*u2^3*vL*up1 + 4*dm*k2*l2*sin(alfam2 + teta2)*u1*vL^3*up1 + 4*dm*k1*l2*sin(alfam2 + teta2)*u2*vL^3*up2 + 8*dm*k1*l2*sin(alfam2 + teta2)*u2^3*vL*up2 - 4*dm*k2*l2*sin(alfam2 + teta2)*u1*u2^3*vpL - 4*dm*k2*l2*sin(alfam2 + teta2)*u1*vL^3*up2 - 4*dm*k2*l2*sin(alfam2 + teta2)*u2*vL^3*up1 - 4*dm*k2*l2*sin(alfam2 + teta2)*u2^3*vL*up1 - 4*dm*k1*l2*sin(alfam2 + teta2)*u2*vL^3*up3 - 4*dm*k1*l2*sin(alfam2 + teta2)*u3*vL^3*up2 - 4*dm*k1*l2*sin(alfam2 + teta2)*u2^3*u3*vpL - 4*dm*k1*l2*sin(alfam2 + teta2)*u2^3*vL*up3 + 4*dm*k2*l2*sin(alfam2 + teta2)*u2*vL^3*up2 + 8*dm*k2*l2*sin(alfam2 + teta2)*u2^3*vL*up2 + 4*dm*k1*l2*sin(alfam2 + teta2)*u3*vL^3*up3 - 4*dm*k2*l2*sin(alfam2 + teta2)*u2^3*u3*vpL - 4*dm*k2*l2*sin(alfam2 + teta2)*u2^3*vL*up3 + 2*dm*k1*l2*sin(alfam2 + teta2)*u2^4*wL*tetap2 + 2*dm*k2*l2*sin(alfam2 + teta2)*u2^4*wL*tetap2 + 4*K1*L1*Mb2*teta1*u1*u2*up2 + 4*K1*L2*Mb2*teta1*u1*u2*up1 - 4*K1*L1*Mb2*teta1*u1*u2*up3 - 4*K1*L1*Mb2*teta1*u1*u3*up2 - 4*K1*L1*Mb2*teta1*u2*u3*up1 - 4*K1*L1*Mb2*teta2*u1*u2*up2 - 4*K1*L1*Mb2*u1*u2*u3*tetap1 - 8*K1*L2*Mb2*teta1*u1*u2*up2 - 4*K1*L2*Mb2*teta1*u1*u3*up1 - 4*K1*L2*Mb2*teta2*u1*u2*up1 + 4*K1*L1*Mb2*teta1*u1*u3*up3 + 8*K1*L1*Mb2*teta1*u2*u3*up2 + 4*K1*L1*Mb2*teta2*u1*u2*up3 + 4*K1*L1*Mb2*teta2*u1*u3*up2 + 4*K1*L1*Mb2*teta2*u2*u3*up1 + 4*K1*L1*Mb2*u1*u2*u3*tetap2 + 4*K1*L2*Mb2*teta1*u1*u2*up3 + 4*K1*L2*Mb2*teta1*u1*u3*up2 + 4*K1*L2*Mb2*teta1*u2*u3*up1 + 8*K1*L2*Mb2*teta2*u1*u2*up2 + 4*K1*L2*Mb2*teta2*u1*u3*up1 + 4*K1*L2*Mb2*u1*u2*u3*tetap1 - 4*K2*L1*Mb2*teta2*u1*u2*up2 - 4*K2*L2*Mb2*teta2*u1*u2*up1 - 4*K1*L1*Mb2*teta1*u2*u3*up3 - 4*K1*L1*Mb2*teta2*u1*u3*up3 - 8*K1*L1*Mb2*teta2*u2*u3*up2 - 4*K1*L2*Mb2*teta1*u2*u3*up2 - 4*K1*L2*Mb2*teta2*u1*u2*up3 - 4*K1*L2*Mb2*teta2*u1*u3*up2 - 4*K1*L2*Mb2*teta2*u2*u3*up1 - 4*K1*L2*Mb2*u1*u2*u3*tetap2 + 4*K2*L1*Mb2*teta2*u1*u2*up3 + 4*K2*L1*Mb2*teta2*u1*u3*up2 + 4*K2*L1*Mb2*teta2*u2*u3*up1 + 4*K2*L1*Mb2*teta3*u1*u2*up2 + 4*K2*L1*Mb2*u1*u2*u3*tetap2 + 8*K2*L2*Mb2*teta2*u1*u2*up2 + 4*K2*L2*Mb2*teta2*u1*u3*up1 + 4*K2*L2*Mb2*teta3*u1*u2*up1 + 4*K1*L1*Mb2*teta2*u2*u3*up3 + 4*K1*L2*Mb2*teta2*u2*u3*up2 - 4*K2*L1*Mb2*teta2*u1*u3*up3 - 8*K2*L1*Mb2*teta2*u2*u3*up2 - 4*K2*L1*Mb2*teta3*u1*u2*up3 - 4*K2*L1*Mb2*teta3*u1*u3*up2 - 4*K2*L1*Mb2*teta3*u2*u3*up1 - 4*K2*L1*Mb2*u1*u2*u3*tetap3 - 4*K2*L2*Mb2*teta2*u1*u2*up3 - 4*K2*L2*Mb2*teta2*u1*u3*up2 - 4*K2*L2*Mb2*teta2*u2*u3*up1 - 8*K2*L2*Mb2*teta3*u1*u2*up2 - 4*K2*L2*Mb2*teta3*u1*u3*up1 - 4*K2*L2*Mb2*u1*u2*u3*tetap2 + 4*K2*L1*Mb2*teta2*u2*u3*up3 + 4*K2*L1*Mb2*teta3*u1*u3*up3 + 8*K2*L1*Mb2*teta3*u2*u3*up2 + 4*K2*L2*Mb2*teta2*u2*u3*up2 + 4*K2*L2*Mb2*teta3*u1*u2*up3 + 4*K2*L2*Mb2*teta3*u1*u3*up2 + 4*K2*L2*Mb2*teta3*u2*u3*up1 + 4*K2*L2*Mb2*u1*u2*u3*tetap3 - 4*K2*L1*Mb2*teta3*u2*u3*up3 - 4*K2*L2*Mb2*teta3*u2*u3*up2 + 2*dm*k1*l2*cos(alfam2 + teta2)*u2^2*vL^3*tetap2 + 2*dm*k2*l2*cos(alfam2 + teta2)*u1^2*vL^3*tetap2 + 2*dm*k1*l2*cos(alfam2 + teta2)*u3^2*vL^3*tetap2 + 2*dm*k2*l2*cos(alfam2 + teta2)*u2^2*vL^3*tetap2 - 2*dm*k1*l2*cos(alfam2 + teta2)*u1^2*u2^2*wpL - 2*dm*k1*l2*cos(alfam2 + teta2)*u1^2*u3^2*wpL - 2*dm*k2*l2*cos(alfam2 + teta2)*u1^2*u2^2*wpL - 2*dm*k1*l2*cos(alfam2 + teta2)*u2^2*u3^2*wpL - 2*dm*k2*l2*cos(alfam2 + teta2)*u1^2*u3^2*wpL - 2*dm*k2*l2*cos(alfam2 + teta2)*u2^2*u3^2*wpL - 2*dm*k1*l2*cos(alfam2 + teta2)*u2^2*vL^2*wpL - 2*dm*k2*l2*cos(alfam2 + teta2)*u1^2*vL^2*wpL - 2*dm*k1*l2*cos(alfam2 + teta2)*u3^2*vL^2*wpL - 2*dm*k2*l2*cos(alfam2 + teta2)*u2^2*vL^2*wpL - 6*dm*k1*l2*cos(alfam2 + teta2)*u2^2*wL^2*wpL - 6*dm*k2*l2*cos(alfam2 + teta2)*u1^2*wL^2*wpL - 6*dm*k1*l2*cos(alfam2 + teta2)*u3^2*wL^2*wpL - 6*dm*k2*l2*cos(alfam2 + teta2)*u2^2*wL^2*wpL - 2*L1*dm*k1*l2*cos(alfam2 + teta2)*u2^3*wpL + 4*L1*dm*k2*l2*cos(alfam2 + teta2)*wL^3*up1 - 4*L1*dm*k2*l2*cos(alfam2 + teta2)*u2^3*wpL - 4*L1*dm*k2*l2*cos(alfam2 + teta2)*wL^3*up2 + 4*L2*dm*k1*l2*cos(alfam2 + teta2)*u2^3*wpL + 4*L2*dm*k1*l2*cos(alfam2 + teta2)*wL^3*up2 - 4*L2*dm*k1*l2*cos(alfam2 + teta2)*wL^3*up3 + 2*L2*dm*k2*l2*cos(alfam2 + teta2)*u2^3*wpL + 2*L2^2*dm*k1*l2*cos(alfam2 + teta2)*u1^2*vL*tetap2 + 2*L1^2*dm*k2*l2*cos(alfam2 + teta2)*u2^2*vL*tetap2 + 2*L2^2*dm*k1*l2*cos(alfam2 + teta2)*u2^2*vL*tetap2 + 2*L1^2*dm*k2*l2*cos(alfam2 + teta2)*u3^2*vL*tetap2 + 2*L1^2*dm*k2*l2*cos(alfam2 + teta2)*vL*wL^2*tetap2 + 2*L2^2*dm*k1*l2*cos(alfam2 + teta2)*vL*wL^2*tetap2 + 2*L1*L2^2*dm*k1*l2*cos(alfam2 + teta2)*u1*wpL + 2*L1*L2^2*dm*k1*l2*cos(alfam2 + teta2)*wL*up1 + 4*L1*L2*dm*k1*l2*cos(alfam2 + teta2)*u2^2*wpL - 2*L1*L2^2*dm*k1*l2*cos(alfam2 + teta2)*u2*wpL - 2*L1*L2^2*dm*k1*l2*cos(alfam2 + teta2)*wL*up2 + 4*L1*L2*dm*k2*l2*cos(alfam2 + teta2)*u2^2*wpL + 2*L1^2*L2*dm*k2*l2*cos(alfam2 + teta2)*u2*wpL + 2*L1^2*L2*dm*k2*l2*cos(alfam2 + teta2)*wL*up2 - 2*L1^2*L2*dm*k2*l2*cos(alfam2 + teta2)*u3*wpL - 2*L1^2*L2*dm*k2*l2*cos(alfam2 + teta2)*wL*up3 + 2*L2^2*dm*k1*l2*sin(alfam2 + teta2)*u1^2*wL*tetap2 + 2*L1^2*dm*k2*l2*sin(alfam2 + teta2)*u2^2*wL*tetap2 + 2*L2^2*dm*k1*l2*sin(alfam2 + teta2)*u2^2*wL*tetap2 + 2*L1^2*dm*k2*l2*sin(alfam2 + teta2)*u3^2*wL*tetap2 + 2*L1^2*dm*k2*l2*sin(alfam2 + teta2)*vL^2*wL*tetap2 + 2*L2^2*dm*k1*l2*sin(alfam2 + teta2)*vL^2*wL*tetap2 - 2*L1*L2^2*dm*k1*l2*sin(alfam2 + teta2)*u1*vpL - 2*L1*L2^2*dm*k1*l2*sin(alfam2 + teta2)*vL*up1 - 4*L1*L2*dm*k1*l2*sin(alfam2 + teta2)*u2^2*vpL + 2*L1*L2^2*dm*k1*l2*sin(alfam2 + teta2)*u2*vpL + 2*L1*L2^2*dm*k1*l2*sin(alfam2 + teta2)*vL*up2 - 4*L1*L2*dm*k2*l2*sin(alfam2 + teta2)*u2^2*vpL - 2*L1^2*L2*dm*k2*l2*sin(alfam2 + teta2)*u2*vpL - 2*L1^2*L2*dm*k2*l2*sin(alfam2 + teta2)*vL*up2 + 2*L1^2*L2*dm*k2*l2*sin(alfam2 + teta2)*u3*vpL + 2*L1^2*L2*dm*k2*l2*sin(alfam2 + teta2)*vL*up3 - 4*dm*k1*l2*cos(alfam2 + teta2)*u1*u2^3*vL*tetap2 - 4*dm*k2*l2*cos(alfam2 + teta2)*u1*u2*vL^3*tetap2 - 4*dm*k2*l2*cos(alfam2 + teta2)*u1*u2^3*vL*tetap2 - 4*dm*k1*l2*cos(alfam2 + teta2)*u2*u3*vL^3*tetap2 - 4*dm*k1*l2*cos(alfam2 + teta2)*u2^3*u3*vL*tetap2 - 4*dm*k2*l2*cos(alfam2 + teta2)*u2^3*u3*vL*tetap2 - 4*dm*k1*l2*cos(alfam2 + teta2)*u1*u2^2*wL*up1 + 12*dm*k1*l2*cos(alfam2 + teta2)*u1*u2^2*wL*up2 - 4*dm*k1*l2*cos(alfam2 + teta2)*u1*u3^2*wL*up1 - 4*dm*k1*l2*cos(alfam2 + teta2)*u1^2*u2*wL*up2 - 4*dm*k2*l2*cos(alfam2 + teta2)*u1*u2^2*wL*up1 + 4*dm*k1*l2*cos(alfam2 + teta2)*u1*u2*u3^2*wpL - 8*dm*k1*l2*cos(alfam2 + teta2)*u1*u2^2*u3*wpL - 8*dm*k1*l2*cos(alfam2 + teta2)*u1*u2^2*wL*up3 + 4*dm*k1*l2*cos(alfam2 + teta2)*u1*u3^2*wL*up2 + 4*dm*k1*l2*cos(alfam2 + teta2)*u2*u3^2*wL*up1 + 4*dm*k1*l2*cos(alfam2 + teta2)*u1^2*u2*u3*wpL + 4*dm*k1*l2*cos(alfam2 + teta2)*u1^2*u2*wL*up3 + 4*dm*k1*l2*cos(alfam2 + teta2)*u1^2*u3*wL*up2 - 8*dm*k1*l2*cos(alfam2 + teta2)*u2^2*u3*wL*up1 + 12*dm*k2*l2*cos(alfam2 + teta2)*u1*u2^2*wL*up2 - 4*dm*k2*l2*cos(alfam2 + teta2)*u1*u3^2*wL*up1 - 4*dm*k2*l2*cos(alfam2 + teta2)*u1^2*u2*wL*up2 - 4*dm*k1*l2*cos(alfam2 + teta2)*u2*u3^2*wL*up2 - 4*dm*k1*l2*cos(alfam2 + teta2)*u1^2*u3*wL*up3 + 12*dm*k1*l2*cos(alfam2 + teta2)*u2^2*u3*wL*up2 + 4*dm*k2*l2*cos(alfam2 + teta2)*u1*u2*u3^2*wpL - 8*dm*k2*l2*cos(alfam2 + teta2)*u1*u2^2*u3*wpL - 8*dm*k2*l2*cos(alfam2 + teta2)*u1*u2^2*wL*up3 + 4*dm*k2*l2*cos(alfam2 + teta2)*u1*u3^2*wL*up2 + 4*dm*k2*l2*cos(alfam2 + teta2)*u2*u3^2*wL*up1 + 4*dm*k2*l2*cos(alfam2 + teta2)*u1^2*u2*u3*wpL + 4*dm*k2*l2*cos(alfam2 + teta2)*u1^2*u2*wL*up3 + 4*dm*k2*l2*cos(alfam2 + teta2)*u1^2*u3*wL*up2 - 8*dm*k2*l2*cos(alfam2 + teta2)*u2^2*u3*wL*up1 - 4*dm*k1*l2*cos(alfam2 + teta2)*u2^2*u3*wL*up3 - 4*dm*k2*l2*cos(alfam2 + teta2)*u2*u3^2*wL*up2 - 4*dm*k2*l2*cos(alfam2 + teta2)*u1^2*u3*wL*up3 + 12*dm*k2*l2*cos(alfam2 + teta2)*u2^2*u3*wL*up2 - 4*dm*k2*l2*cos(alfam2 + teta2)*u2^2*u3*wL*up3 - 4*dm*k2*l2*cos(alfam2 + teta2)*u1*vL^2*wL*up1 - 4*dm*k1*l2*cos(alfam2 + teta2)*u2*vL^2*wL*up2 + 4*dm*k2*l2*cos(alfam2 + teta2)*u1*u2*vL^2*wpL + 4*dm*k2*l2*cos(alfam2 + teta2)*u1*vL^2*wL*up2 + 4*dm*k2*l2*cos(alfam2 + teta2)*u2*vL^2*wL*up1 + 4*dm*k1*l2*cos(alfam2 + teta2)*u2*u3*vL^2*wpL + 4*dm*k1*l2*cos(alfam2 + teta2)*u2*vL^2*wL*up3 + 4*dm*k1*l2*cos(alfam2 + teta2)*u3*vL^2*wL*up2 - 4*dm*k2*l2*cos(alfam2 + teta2)*u2*vL^2*wL*up2 - 4*dm*k1*l2*cos(alfam2 + teta2)*u3*vL^2*wL*up3 + 12*dm*k2*l2*cos(alfam2 + teta2)*u1*u2*wL^2*wpL + 12*dm*k1*l2*cos(alfam2 + teta2)*u2*u3*wL^2*wpL - 4*dm*k1*l2*cos(alfam2 + teta2)*u2^2*vL*wL*vpL - 4*dm*k2*l2*cos(alfam2 + teta2)*u1^2*vL*wL*vpL - 4*dm*k1*l2*cos(alfam2 + teta2)*u3^2*vL*wL*vpL - 4*dm*k2*l2*cos(alfam2 + teta2)*u2^2*vL*wL*vpL + 4*dm*k1*l2*sin(alfam2 + teta2)*u1*u2^2*vL*up1 - 12*dm*k1*l2*sin(alfam2 + teta2)*u1*u2^2*vL*up2 + 4*dm*k1*l2*sin(alfam2 + teta2)*u1*u3^2*vL*up1 + 4*dm*k1*l2*sin(alfam2 + teta2)*u1^2*u2*vL*up2 + 4*dm*k2*l2*sin(alfam2 + teta2)*u1*u2^2*vL*up1 - 4*dm*k1*l2*sin(alfam2 + teta2)*u1*u2*u3^2*vpL + 8*dm*k1*l2*sin(alfam2 + teta2)*u1*u2^2*u3*vpL + 8*dm*k1*l2*sin(alfam2 + teta2)*u1*u2^2*vL*up3 - 4*dm*k1*l2*sin(alfam2 + teta2)*u1*u3^2*vL*up2 - 4*dm*k1*l2*sin(alfam2 + teta2)*u2*u3^2*vL*up1 - 4*dm*k1*l2*sin(alfam2 + teta2)*u1^2*u2*u3*vpL - 4*dm*k1*l2*sin(alfam2 + teta2)*u1^2*u2*vL*up3 - 4*dm*k1*l2*sin(alfam2 + teta2)*u1^2*u3*vL*up2 + 8*dm*k1*l2*sin(alfam2 + teta2)*u2^2*u3*vL*up1 - 12*dm*k2*l2*sin(alfam2 + teta2)*u1*u2^2*vL*up2 + 4*dm*k2*l2*sin(alfam2 + teta2)*u1*u3^2*vL*up1 + 4*dm*k2*l2*sin(alfam2 + teta2)*u1^2*u2*vL*up2 + 4*dm*k1*l2*sin(alfam2 + teta2)*u2*u3^2*vL*up2 + 4*dm*k1*l2*sin(alfam2 + teta2)*u1^2*u3*vL*up3 - 12*dm*k1*l2*sin(alfam2 + teta2)*u2^2*u3*vL*up2 - 4*dm*k2*l2*sin(alfam2 + teta2)*u1*u2*u3^2*vpL + 8*dm*k2*l2*sin(alfam2 + teta2)*u1*u2^2*u3*vpL + 8*dm*k2*l2*sin(alfam2 + teta2)*u1*u2^2*vL*up3 - 4*dm*k2*l2*sin(alfam2 + teta2)*u1*u3^2*vL*up2 - 4*dm*k2*l2*sin(alfam2 + teta2)*u2*u3^2*vL*up1 - 4*dm*k2*l2*sin(alfam2 + teta2)*u1^2*u2*u3*vpL - 4*dm*k2*l2*sin(alfam2 + teta2)*u1^2*u2*vL*up3 - 4*dm*k2*l2*sin(alfam2 + teta2)*u1^2*u3*vL*up2 + 8*dm*k2*l2*sin(alfam2 + teta2)*u2^2*u3*vL*up1 + 4*dm*k1*l2*sin(alfam2 + teta2)*u2^2*u3*vL*up3 + 4*dm*k2*l2*sin(alfam2 + teta2)*u2*u3^2*vL*up2 + 4*dm*k2*l2*sin(alfam2 + teta2)*u1^2*u3*vL*up3 - 12*dm*k2*l2*sin(alfam2 + teta2)*u2^2*u3*vL*up2 + 4*dm*k2*l2*sin(alfam2 + teta2)*u2^2*u3*vL*up3 - 4*dm*k1*l2*sin(alfam2 + teta2)*u1*u2^3*wL*tetap2 - 4*dm*k2*l2*sin(alfam2 + teta2)*u1*u2*wL^3*tetap2 - 4*dm*k2*l2*sin(alfam2 + teta2)*u1*u2^3*wL*tetap2 - 4*dm*k1*l2*sin(alfam2 + teta2)*u2*u3*wL^3*tetap2 - 4*dm*k1*l2*sin(alfam2 + teta2)*u2^3*u3*wL*tetap2 - 4*dm*k2*l2*sin(alfam2 + teta2)*u2^3*u3*wL*tetap2 - 12*dm*k2*l2*sin(alfam2 + teta2)*u1*u2*vL^2*vpL - 12*dm*k1*l2*sin(alfam2 + teta2)*u2*u3*vL^2*vpL + 4*dm*k2*l2*sin(alfam2 + teta2)*u1*vL*wL^2*up1 + 4*dm*k1*l2*sin(alfam2 + teta2)*u2*vL*wL^2*up2 - 4*dm*k2*l2*sin(alfam2 + teta2)*u1*u2*wL^2*vpL - 4*dm*k2*l2*sin(alfam2 + teta2)*u1*vL*wL^2*up2 - 4*dm*k2*l2*sin(alfam2 + teta2)*u2*vL*wL^2*up1 - 4*dm*k1*l2*sin(alfam2 + teta2)*u2*u3*wL^2*vpL - 4*dm*k1*l2*sin(alfam2 + teta2)*u2*vL*wL^2*up3 - 4*dm*k1*l2*sin(alfam2 + teta2)*u3*vL*wL^2*up2 + 4*dm*k2*l2*sin(alfam2 + teta2)*u2*vL*wL^2*up2 + 4*dm*k1*l2*sin(alfam2 + teta2)*u3*vL*wL^2*up3 + 4*dm*k1*l2*sin(alfam2 + teta2)*u2^2*vL*wL*wpL + 4*dm*k2*l2*sin(alfam2 + teta2)*u1^2*vL*wL*wpL + 4*dm*k1*l2*sin(alfam2 + teta2)*u3^2*vL*wL*wpL + 4*dm*k2*l2*sin(alfam2 + teta2)*u2^2*vL*wL*wpL + 2*dm*k1*l2*cos(alfam2 + teta2)*u1^2*u2^2*vL*tetap2 + 2*dm*k1*l2*cos(alfam2 + teta2)*u1^2*u3^2*vL*tetap2 + 2*dm*k2*l2*cos(alfam2 + teta2)*u1^2*u2^2*vL*tetap2 + 2*dm*k1*l2*cos(alfam2 + teta2)*u2^2*u3^2*vL*tetap2 + 2*dm*k2*l2*cos(alfam2 + teta2)*u1^2*u3^2*vL*tetap2 + 2*dm*k2*l2*cos(alfam2 + teta2)*u2^2*u3^2*vL*tetap2 + 2*dm*k1*l2*cos(alfam2 + teta2)*u2^2*vL*wL^2*tetap2 + 2*dm*k2*l2*cos(alfam2 + teta2)*u1^2*vL*wL^2*tetap2 + 2*dm*k1*l2*cos(alfam2 + teta2)*u3^2*vL*wL^2*tetap2 + 2*dm*k2*l2*cos(alfam2 + teta2)*u2^2*vL*wL^2*tetap2 + 2*L1*dm*k1*l2*cos(alfam2 + teta2)*u2^3*vL*tetap2 - 4*L1*dm*k2*l2*cos(alfam2 + teta2)*u1*vL^3*tetap2 + 4*L1*dm*k2*l2*cos(alfam2 + teta2)*u2*vL^3*tetap2 + 4*L1*dm*k2*l2*cos(alfam2 + teta2)*u2^3*vL*tetap2 - 4*L2*dm*k1*l2*cos(alfam2 + teta2)*u2*vL^3*tetap2 - 4*L2*dm*k1*l2*cos(alfam2 + teta2)*u2^3*vL*tetap2 + 4*L2*dm*k1*l2*cos(alfam2 + teta2)*u3*vL^3*tetap2 - 2*L2*dm*k2*l2*cos(alfam2 + teta2)*u2^3*vL*tetap2 + 2*L1*dm*k1*l2*cos(alfam2 + teta2)*u1*u2^2*wpL + 2*L1*dm*k1*l2*cos(alfam2 + teta2)*u2^2*wL*up1 - 4*L2^2*dm*k1*l2*cos(alfam2 + teta2)*u1*wL*up1 + 2*L1*dm*k1*l2*cos(alfam2 + teta2)*u1*u3^2*wpL - 6*L1*dm*k1*l2*cos(alfam2 + teta2)*u2^2*wL*up2 + 2*L1*dm*k1*l2*cos(alfam2 + teta2)*u3^2*wL*up1 + 4*L1*dm*k2*l2*cos(alfam2 + teta2)*u1*u2^2*wpL + 4*L1*dm*k2*l2*cos(alfam2 + teta2)*u2^2*wL*up1 - 8*L2*dm*k1*l2*cos(alfam2 + teta2)*u1*u2^2*wpL + 4*L2*dm*k1*l2*cos(alfam2 + teta2)*u1^2*u2*wpL + 4*L2*dm*k1*l2*cos(alfam2 + teta2)*u1^2*wL*up2 - 8*L2*dm*k1*l2*cos(alfam2 + teta2)*u2^2*wL*up1 + 4*L2^2*dm*k1*l2*cos(alfam2 + teta2)*u1*u2*wpL + 4*L2^2*dm*k1*l2*cos(alfam2 + teta2)*u1*wL*up2 + 4*L2^2*dm*k1*l2*cos(alfam2 + teta2)*u2*wL*up1 - 2*L1*dm*k1*l2*cos(alfam2 + teta2)*u2*u3^2*wpL + 4*L1*dm*k1*l2*cos(alfam2 + teta2)*u2^2*u3*wpL + 4*L1*dm*k1*l2*cos(alfam2 + teta2)*u2^2*wL*up3 - 2*L1*dm*k1*l2*cos(alfam2 + teta2)*u3^2*wL*up2 + 4*L1*dm*k2*l2*cos(alfam2 + teta2)*u1*u3^2*wpL - 12*L1*dm*k2*l2*cos(alfam2 + teta2)*u2^2*wL*up2 + 4*L1*dm*k2*l2*cos(alfam2 + teta2)*u3^2*wL*up1 - 4*L2*dm*k1*l2*cos(alfam2 + teta2)*u1^2*u3*wpL - 4*L2*dm*k1*l2*cos(alfam2 + teta2)*u1^2*wL*up3 + 12*L2*dm*k1*l2*cos(alfam2 + teta2)*u2^2*wL*up2 - 4*L2*dm*k2*l2*cos(alfam2 + teta2)*u1*u2^2*wpL + 2*L2*dm*k2*l2*cos(alfam2 + teta2)*u1^2*u2*wpL + 2*L2*dm*k2*l2*cos(alfam2 + teta2)*u1^2*wL*up2 - 4*L2*dm*k2*l2*cos(alfam2 + teta2)*u2^2*wL*up1 - 4*L1^2*dm*k2*l2*cos(alfam2 + teta2)*u2*wL*up2 - 4*L2^2*dm*k1*l2*cos(alfam2 + teta2)*u2*wL*up2 - 4*L1*dm*k2*l2*cos(alfam2 + teta2)*u2*u3^2*wpL + 8*L1*dm*k2*l2*cos(alfam2 + teta2)*u2^2*u3*wpL + 8*L1*dm*k2*l2*cos(alfam2 + teta2)*u2^2*wL*up3 - 4*L1*dm*k2*l2*cos(alfam2 + teta2)*u3^2*wL*up2 - 4*L2*dm*k1*l2*cos(alfam2 + teta2)*u2^2*u3*wpL - 4*L2*dm*k1*l2*cos(alfam2 + teta2)*u2^2*wL*up3 - 2*L2*dm*k2*l2*cos(alfam2 + teta2)*u1^2*u3*wpL - 2*L2*dm*k2*l2*cos(alfam2 + teta2)*u1^2*wL*up3 + 6*L2*dm*k2*l2*cos(alfam2 + teta2)*u2^2*wL*up2 + 4*L1^2*dm*k2*l2*cos(alfam2 + teta2)*u2*u3*wpL + 4*L1^2*dm*k2*l2*cos(alfam2 + teta2)*u2*wL*up3 + 4*L1^2*dm*k2*l2*cos(alfam2 + teta2)*u3*wL*up2 - 2*L2*dm*k2*l2*cos(alfam2 + teta2)*u2^2*u3*wpL - 2*L2*dm*k2*l2*cos(alfam2 + teta2)*u2^2*wL*up3 - 4*L1^2*dm*k2*l2*cos(alfam2 + teta2)*u3*wL*up3 + 4*L1*dm*k2*l2*cos(alfam2 + teta2)*u1*vL^2*wpL + 4*L1*dm*k2*l2*cos(alfam2 + teta2)*vL^2*wL*up1 - 4*L1*dm*k2*l2*cos(alfam2 + teta2)*u2*vL^2*wpL - 4*L1*dm*k2*l2*cos(alfam2 + teta2)*vL^2*wL*up2 + 4*L2*dm*k1*l2*cos(alfam2 + teta2)*u2*vL^2*wpL + 4*L2*dm*k1*l2*cos(alfam2 + teta2)*vL^2*wL*up2 - 4*L2*dm*k1*l2*cos(alfam2 + teta2)*u3*vL^2*wpL - 4*L2*dm*k1*l2*cos(alfam2 + teta2)*vL^2*wL*up3 + 12*L1*dm*k2*l2*cos(alfam2 + teta2)*u1*wL^2*wpL - 12*L1*dm*k2*l2*cos(alfam2 + teta2)*u2*wL^2*wpL + 12*L2*dm*k1*l2*cos(alfam2 + teta2)*u2*wL^2*wpL - 12*L2*dm*k1*l2*cos(alfam2 + teta2)*u3*wL^2*wpL - 4*L1^2*dm*k2*l2*cos(alfam2 + teta2)*vL*wL*vpL - 4*L2^2*dm*k1*l2*cos(alfam2 + teta2)*vL*wL*vpL + 2*dm*k1*l2*sin(alfam2 + teta2)*u1^2*u2^2*wL*tetap2 + 2*dm*k1*l2*sin(alfam2 + teta2)*u1^2*u3^2*wL*tetap2 + 2*dm*k2*l2*sin(alfam2 + teta2)*u1^2*u2^2*wL*tetap2 + 2*dm*k1*l2*sin(alfam2 + teta2)*u2^2*u3^2*wL*tetap2 + 2*dm*k2*l2*sin(alfam2 + teta2)*u1^2*u3^2*wL*tetap2 + 2*dm*k2*l2*sin(alfam2 + teta2)*u2^2*u3^2*wL*tetap2 + 2*dm*k1*l2*sin(alfam2 + teta2)*u2^2*vL^2*wL*tetap2 + 2*dm*k2*l2*sin(alfam2 + teta2)*u1^2*vL^2*wL*tetap2 + 2*dm*k1*l2*sin(alfam2 + teta2)*u3^2*vL^2*wL*tetap2 + 2*dm*k2*l2*sin(alfam2 + teta2)*u2^2*vL^2*wL*tetap2 - 2*L1*dm*k1*l2*sin(alfam2 + teta2)*u1*u2^2*vpL - 2*L1*dm*k1*l2*sin(alfam2 + teta2)*u2^2*vL*up1 + 4*L2^2*dm*k1*l2*sin(alfam2 + teta2)*u1*vL*up1 - 2*L1*dm*k1*l2*sin(alfam2 + teta2)*u1*u3^2*vpL + 6*L1*dm*k1*l2*sin(alfam2 + teta2)*u2^2*vL*up2 - 2*L1*dm*k1*l2*sin(alfam2 + teta2)*u3^2*vL*up1 - 4*L1*dm*k2*l2*sin(alfam2 + teta2)*u1*u2^2*vpL - 4*L1*dm*k2*l2*sin(alfam2 + teta2)*u2^2*vL*up1 + 8*L2*dm*k1*l2*sin(alfam2 + teta2)*u1*u2^2*vpL - 4*L2*dm*k1*l2*sin(alfam2 + teta2)*u1^2*u2*vpL - 4*L2*dm*k1*l2*sin(alfam2 + teta2)*u1^2*vL*up2 + 8*L2*dm*k1*l2*sin(alfam2 + teta2)*u2^2*vL*up1 - 4*L2^2*dm*k1*l2*sin(alfam2 + teta2)*u1*u2*vpL - 4*L2^2*dm*k1*l2*sin(alfam2 + teta2)*u1*vL*up2 - 4*L2^2*dm*k1*l2*sin(alfam2 + teta2)*u2*vL*up1 + 2*L1*dm*k1*l2*sin(alfam2 + teta2)*u2*u3^2*vpL - 4*L1*dm*k1*l2*sin(alfam2 + teta2)*u2^2*u3*vpL - 4*L1*dm*k1*l2*sin(alfam2 + teta2)*u2^2*vL*up3 + 2*L1*dm*k1*l2*sin(alfam2 + teta2)*u3^2*vL*up2 - 4*L1*dm*k2*l2*sin(alfam2 + teta2)*u1*u3^2*vpL + 12*L1*dm*k2*l2*sin(alfam2 + teta2)*u2^2*vL*up2 - 4*L1*dm*k2*l2*sin(alfam2 + teta2)*u3^2*vL*up1 + 4*L2*dm*k1*l2*sin(alfam2 + teta2)*u1^2*u3*vpL + 4*L2*dm*k1*l2*sin(alfam2 + teta2)*u1^2*vL*up3 - 12*L2*dm*k1*l2*sin(alfam2 + teta2)*u2^2*vL*up2 + 4*L2*dm*k2*l2*sin(alfam2 + teta2)*u1*u2^2*vpL - 2*L2*dm*k2*l2*sin(alfam2 + teta2)*u1^2*u2*vpL - 2*L2*dm*k2*l2*sin(alfam2 + teta2)*u1^2*vL*up2 + 4*L2*dm*k2*l2*sin(alfam2 + teta2)*u2^2*vL*up1 + 4*L1^2*dm*k2*l2*sin(alfam2 + teta2)*u2*vL*up2 + 4*L2^2*dm*k1*l2*sin(alfam2 + teta2)*u2*vL*up2 + 4*L1*dm*k2*l2*sin(alfam2 + teta2)*u2*u3^2*vpL - 8*L1*dm*k2*l2*sin(alfam2 + teta2)*u2^2*u3*vpL - 8*L1*dm*k2*l2*sin(alfam2 + teta2)*u2^2*vL*up3 + 4*L1*dm*k2*l2*sin(alfam2 + teta2)*u3^2*vL*up2 + 4*L2*dm*k1*l2*sin(alfam2 + teta2)*u2^2*u3*vpL + 4*L2*dm*k1*l2*sin(alfam2 + teta2)*u2^2*vL*up3 + 2*L2*dm*k2*l2*sin(alfam2 + teta2)*u1^2*u3*vpL + 2*L2*dm*k2*l2*sin(alfam2 + teta2)*u1^2*vL*up3 - 6*L2*dm*k2*l2*sin(alfam2 + teta2)*u2^2*vL*up2 - 4*L1^2*dm*k2*l2*sin(alfam2 + teta2)*u2*u3*vpL - 4*L1^2*dm*k2*l2*sin(alfam2 + teta2)*u2*vL*up3 - 4*L1^2*dm*k2*l2*sin(alfam2 + teta2)*u3*vL*up2 + 2*L2*dm*k2*l2*sin(alfam2 + teta2)*u2^2*u3*vpL + 2*L2*dm*k2*l2*sin(alfam2 + teta2)*u2^2*vL*up3 + 4*L1^2*dm*k2*l2*sin(alfam2 + teta2)*u3*vL*up3 + 2*L1*dm*k1*l2*sin(alfam2 + teta2)*u2^3*wL*tetap2 - 4*L1*dm*k2*l2*sin(alfam2 + teta2)*u1*wL^3*tetap2 + 4*L1*dm*k2*l2*sin(alfam2 + teta2)*u2*wL^3*tetap2 + 4*L1*dm*k2*l2*sin(alfam2 + teta2)*u2^3*wL*tetap2 - 4*L2*dm*k1*l2*sin(alfam2 + teta2)*u2*wL^3*tetap2 - 4*L2*dm*k1*l2*sin(alfam2 + teta2)*u2^3*wL*tetap2 + 4*L2*dm*k1*l2*sin(alfam2 + teta2)*u3*wL^3*tetap2 - 2*L2*dm*k2*l2*sin(alfam2 + teta2)*u2^3*wL*tetap2 - 12*L1*dm*k2*l2*sin(alfam2 + teta2)*u1*vL^2*vpL + 12*L1*dm*k2*l2*sin(alfam2 + teta2)*u2*vL^2*vpL - 12*L2*dm*k1*l2*sin(alfam2 + teta2)*u2*vL^2*vpL + 12*L2*dm*k1*l2*sin(alfam2 + teta2)*u3*vL^2*vpL - 4*L1*dm*k2*l2*sin(alfam2 + teta2)*u1*wL^2*vpL - 4*L1*dm*k2*l2*sin(alfam2 + teta2)*vL*wL^2*up1 + 4*L1*dm*k2*l2*sin(alfam2 + teta2)*u2*wL^2*vpL + 4*L1*dm*k2*l2*sin(alfam2 + teta2)*vL*wL^2*up2 - 4*L2*dm*k1*l2*sin(alfam2 + teta2)*u2*wL^2*vpL - 4*L2*dm*k1*l2*sin(alfam2 + teta2)*vL*wL^2*up2 + 4*L2*dm*k1*l2*sin(alfam2 + teta2)*u3*wL^2*vpL + 4*L2*dm*k1*l2*sin(alfam2 + teta2)*vL*wL^2*up3 + 4*L1^2*dm*k2*l2*sin(alfam2 + teta2)*vL*wL*wpL + 4*L2^2*dm*k1*l2*sin(alfam2 + teta2)*vL*wL*wpL + 8*dm*k1*l2*cos(alfam2 + teta2)*u1*u2*u3*wL*up1 - 16*dm*k1*l2*cos(alfam2 + teta2)*u1*u2*u3*wL*up2 + 8*dm*k2*l2*cos(alfam2 + teta2)*u1*u2*u3*wL*up1 + 8*dm*k1*l2*cos(alfam2 + teta2)*u1*u2*u3*wL*up3 - 16*dm*k2*l2*cos(alfam2 + teta2)*u1*u2*u3*wL*up2 + 8*dm*k2*l2*cos(alfam2 + teta2)*u1*u2*u3*wL*up3 + 8*dm*k2*l2*cos(alfam2 + teta2)*u1*u2*vL*wL*vpL + 8*dm*k1*l2*cos(alfam2 + teta2)*u2*u3*vL*wL*vpL - 8*dm*k1*l2*sin(alfam2 + teta2)*u1*u2*u3*vL*up1 + 16*dm*k1*l2*sin(alfam2 + teta2)*u1*u2*u3*vL*up2 - 8*dm*k2*l2*sin(alfam2 + teta2)*u1*u2*u3*vL*up1 - 8*dm*k1*l2*sin(alfam2 + teta2)*u1*u2*u3*vL*up3 + 16*dm*k2*l2*sin(alfam2 + teta2)*u1*u2*u3*vL*up2 - 8*dm*k2*l2*sin(alfam2 + teta2)*u1*u2*u3*vL*up3 - 8*dm*k2*l2*sin(alfam2 + teta2)*u1*u2*vL*wL*wpL - 8*dm*k1*l2*sin(alfam2 + teta2)*u2*u3*vL*wL*wpL - 2*L1*L2^2*dm*k1*l2*cos(alfam2 + teta2)*u1*vL*tetap2 - 4*L1*L2*dm*k1*l2*cos(alfam2 + teta2)*u2^2*vL*tetap2 + 2*L1*L2^2*dm*k1*l2*cos(alfam2 + teta2)*u2*vL*tetap2 - 4*L1*L2*dm*k2*l2*cos(alfam2 + teta2)*u2^2*vL*tetap2 - 2*L1^2*L2*dm*k2*l2*cos(alfam2 + teta2)*u2*vL*tetap2 + 2*L1^2*L2*dm*k2*l2*cos(alfam2 + teta2)*u3*vL*tetap2 - 2*L1*L2^2*dm*k1*l2*sin(alfam2 + teta2)*u1*wL*tetap2 - 4*L1*L2*dm*k1*l2*sin(alfam2 + teta2)*u2^2*wL*tetap2 + 2*L1*L2^2*dm*k1*l2*sin(alfam2 + teta2)*u2*wL*tetap2 - 4*L1*L2*dm*k2*l2*sin(alfam2 + teta2)*u2^2*wL*tetap2 - 2*L1^2*L2*dm*k2*l2*sin(alfam2 + teta2)*u2*wL*tetap2 + 2*L1^2*L2*dm*k2*l2*sin(alfam2 + teta2)*u3*wL*tetap2 - 4*dm*k1*l2*cos(alfam2 + teta2)*u1*u2*u3^2*vL*tetap2 + 8*dm*k1*l2*cos(alfam2 + teta2)*u1*u2^2*u3*vL*tetap2 - 4*dm*k1*l2*cos(alfam2 + teta2)*u1^2*u2*u3*vL*tetap2 - 4*dm*k2*l2*cos(alfam2 + teta2)*u1*u2*u3^2*vL*tetap2 + 8*dm*k2*l2*cos(alfam2 + teta2)*u1*u2^2*u3*vL*tetap2 - 4*dm*k2*l2*cos(alfam2 + teta2)*u1^2*u2*u3*vL*tetap2 - 4*dm*k2*l2*cos(alfam2 + teta2)*u1*u2*vL*wL^2*tetap2 - 4*dm*k1*l2*cos(alfam2 + teta2)*u2*u3*vL*wL^2*tetap2 + 4*L1*dm*k1*l2*cos(alfam2 + teta2)*u1*u2*wL*up2 + 8*L2*dm*k1*l2*cos(alfam2 + teta2)*u1*u2*wL*up1 - 4*L1*dm*k1*l2*cos(alfam2 + teta2)*u1*u2*u3*wpL - 4*L1*dm*k1*l2*cos(alfam2 + teta2)*u1*u2*wL*up3 - 4*L1*dm*k1*l2*cos(alfam2 + teta2)*u1*u3*wL*up2 - 4*L1*dm*k1*l2*cos(alfam2 + teta2)*u2*u3*wL*up1 + 8*L1*dm*k2*l2*cos(alfam2 + teta2)*u1*u2*wL*up2 - 16*L2*dm*k1*l2*cos(alfam2 + teta2)*u1*u2*wL*up2 - 8*L2*dm*k1*l2*cos(alfam2 + teta2)*u1*u3*wL*up1 + 4*L2*dm*k2*l2*cos(alfam2 + teta2)*u1*u2*wL*up1 + 4*L1*dm*k1*l2*cos(alfam2 + teta2)*u1*u3*wL*up3 + 8*L1*dm*k1*l2*cos(alfam2 + teta2)*u2*u3*wL*up2 - 8*L1*dm*k2*l2*cos(alfam2 + teta2)*u1*u2*u3*wpL - 8*L1*dm*k2*l2*cos(alfam2 + teta2)*u1*u2*wL*up3 - 8*L1*dm*k2*l2*cos(alfam2 + teta2)*u1*u3*wL*up2 - 8*L1*dm*k2*l2*cos(alfam2 + teta2)*u2*u3*wL*up1 + 8*L2*dm*k1*l2*cos(alfam2 + teta2)*u1*u2*u3*wpL + 8*L2*dm*k1*l2*cos(alfam2 + teta2)*u1*u2*wL*up3 + 8*L2*dm*k1*l2*cos(alfam2 + teta2)*u1*u3*wL*up2 + 8*L2*dm*k1*l2*cos(alfam2 + teta2)*u2*u3*wL*up1 - 8*L2*dm*k2*l2*cos(alfam2 + teta2)*u1*u2*wL*up2 - 4*L2*dm*k2*l2*cos(alfam2 + teta2)*u1*u3*wL*up1 - 4*L1*dm*k1*l2*cos(alfam2 + teta2)*u2*u3*wL*up3 + 8*L1*dm*k2*l2*cos(alfam2 + teta2)*u1*u3*wL*up3 + 16*L1*dm*k2*l2*cos(alfam2 + teta2)*u2*u3*wL*up2 - 8*L2*dm*k1*l2*cos(alfam2 + teta2)*u2*u3*wL*up2 + 4*L2*dm*k2*l2*cos(alfam2 + teta2)*u1*u2*u3*wpL + 4*L2*dm*k2*l2*cos(alfam2 + teta2)*u1*u2*wL*up3 + 4*L2*dm*k2*l2*cos(alfam2 + teta2)*u1*u3*wL*up2 + 4*L2*dm*k2*l2*cos(alfam2 + teta2)*u2*u3*wL*up1 - 8*L1*dm*k2*l2*cos(alfam2 + teta2)*u2*u3*wL*up3 - 4*L2*dm*k2*l2*cos(alfam2 + teta2)*u2*u3*wL*up2 + 8*L1*dm*k2*l2*cos(alfam2 + teta2)*u1*vL*wL*vpL - 8*L1*dm*k2*l2*cos(alfam2 + teta2)*u2*vL*wL*vpL + 8*L2*dm*k1*l2*cos(alfam2 + teta2)*u2*vL*wL*vpL - 8*L2*dm*k1*l2*cos(alfam2 + teta2)*u3*vL*wL*vpL - 4*dm*k1*l2*sin(alfam2 + teta2)*u1*u2*u3^2*wL*tetap2 + 8*dm*k1*l2*sin(alfam2 + teta2)*u1*u2^2*u3*wL*tetap2 - 4*dm*k1*l2*sin(alfam2 + teta2)*u1^2*u2*u3*wL*tetap2 - 4*dm*k2*l2*sin(alfam2 + teta2)*u1*u2*u3^2*wL*tetap2 + 8*dm*k2*l2*sin(alfam2 + teta2)*u1*u2^2*u3*wL*tetap2 - 4*dm*k2*l2*sin(alfam2 + teta2)*u1^2*u2*u3*wL*tetap2 - 4*dm*k2*l2*sin(alfam2 + teta2)*u1*u2*vL^2*wL*tetap2 - 4*dm*k1*l2*sin(alfam2 + teta2)*u2*u3*vL^2*wL*tetap2 - 4*L1*dm*k1*l2*sin(alfam2 + teta2)*u1*u2*vL*up2 - 8*L2*dm*k1*l2*sin(alfam2 + teta2)*u1*u2*vL*up1 + 4*L1*dm*k1*l2*sin(alfam2 + teta2)*u1*u2*u3*vpL + 4*L1*dm*k1*l2*sin(alfam2 + teta2)*u1*u2*vL*up3 + 4*L1*dm*k1*l2*sin(alfam2 + teta2)*u1*u3*vL*up2 + 4*L1*dm*k1*l2*sin(alfam2 + teta2)*u2*u3*vL*up1 - 8*L1*dm*k2*l2*sin(alfam2 + teta2)*u1*u2*vL*up2 + 16*L2*dm*k1*l2*sin(alfam2 + teta2)*u1*u2*vL*up2 + 8*L2*dm*k1*l2*sin(alfam2 + teta2)*u1*u3*vL*up1 - 4*L2*dm*k2*l2*sin(alfam2 + teta2)*u1*u2*vL*up1 - 4*L1*dm*k1*l2*sin(alfam2 + teta2)*u1*u3*vL*up3 - 8*L1*dm*k1*l2*sin(alfam2 + teta2)*u2*u3*vL*up2 + 8*L1*dm*k2*l2*sin(alfam2 + teta2)*u1*u2*u3*vpL + 8*L1*dm*k2*l2*sin(alfam2 + teta2)*u1*u2*vL*up3 + 8*L1*dm*k2*l2*sin(alfam2 + teta2)*u1*u3*vL*up2 + 8*L1*dm*k2*l2*sin(alfam2 + teta2)*u2*u3*vL*up1 - 8*L2*dm*k1*l2*sin(alfam2 + teta2)*u1*u2*u3*vpL - 8*L2*dm*k1*l2*sin(alfam2 + teta2)*u1*u2*vL*up3 - 8*L2*dm*k1*l2*sin(alfam2 + teta2)*u1*u3*vL*up2 - 8*L2*dm*k1*l2*sin(alfam2 + teta2)*u2*u3*vL*up1 + 8*L2*dm*k2*l2*sin(alfam2 + teta2)*u1*u2*vL*up2 + 4*L2*dm*k2*l2*sin(alfam2 + teta2)*u1*u3*vL*up1 + 4*L1*dm*k1*l2*sin(alfam2 + teta2)*u2*u3*vL*up3 - 8*L1*dm*k2*l2*sin(alfam2 + teta2)*u1*u3*vL*up3 - 16*L1*dm*k2*l2*sin(alfam2 + teta2)*u2*u3*vL*up2 + 8*L2*dm*k1*l2*sin(alfam2 + teta2)*u2*u3*vL*up2 - 4*L2*dm*k2*l2*sin(alfam2 + teta2)*u1*u2*u3*vpL - 4*L2*dm*k2*l2*sin(alfam2 + teta2)*u1*u2*vL*up3 - 4*L2*dm*k2*l2*sin(alfam2 + teta2)*u1*u3*vL*up2 - 4*L2*dm*k2*l2*sin(alfam2 + teta2)*u2*u3*vL*up1 + 8*L1*dm*k2*l2*sin(alfam2 + teta2)*u2*u3*vL*up3 + 4*L2*dm*k2*l2*sin(alfam2 + teta2)*u2*u3*vL*up2 - 8*L1*dm*k2*l2*sin(alfam2 + teta2)*u1*vL*wL*wpL + 8*L1*dm*k2*l2*sin(alfam2 + teta2)*u2*vL*wL*wpL - 8*L2*dm*k1*l2*sin(alfam2 + teta2)*u2*vL*wL*wpL + 8*L2*dm*k1*l2*sin(alfam2 + teta2)*u3*vL*wL*wpL - 2*L1*dm*k1*l2*cos(alfam2 + teta2)*u1*u2^2*vL*tetap2 - 2*L1*dm*k1*l2*cos(alfam2 + teta2)*u1*u3^2*vL*tetap2 - 4*L1*dm*k2*l2*cos(alfam2 + teta2)*u1*u2^2*vL*tetap2 + 8*L2*dm*k1*l2*cos(alfam2 + teta2)*u1*u2^2*vL*tetap2 - 4*L2*dm*k1*l2*cos(alfam2 + teta2)*u1^2*u2*vL*tetap2 - 4*L2^2*dm*k1*l2*cos(alfam2 + teta2)*u1*u2*vL*tetap2 + 2*L1*dm*k1*l2*cos(alfam2 + teta2)*u2*u3^2*vL*tetap2 - 4*L1*dm*k1*l2*cos(alfam2 + teta2)*u2^2*u3*vL*tetap2 - 4*L1*dm*k2*l2*cos(alfam2 + teta2)*u1*u3^2*vL*tetap2 + 4*L2*dm*k1*l2*cos(alfam2 + teta2)*u1^2*u3*vL*tetap2 + 4*L2*dm*k2*l2*cos(alfam2 + teta2)*u1*u2^2*vL*tetap2 - 2*L2*dm*k2*l2*cos(alfam2 + teta2)*u1^2*u2*vL*tetap2 + 4*L1*dm*k2*l2*cos(alfam2 + teta2)*u2*u3^2*vL*tetap2 - 8*L1*dm*k2*l2*cos(alfam2 + teta2)*u2^2*u3*vL*tetap2 + 4*L2*dm*k1*l2*cos(alfam2 + teta2)*u2^2*u3*vL*tetap2 + 2*L2*dm*k2*l2*cos(alfam2 + teta2)*u1^2*u3*vL*tetap2 - 4*L1^2*dm*k2*l2*cos(alfam2 + teta2)*u2*u3*vL*tetap2 + 2*L2*dm*k2*l2*cos(alfam2 + teta2)*u2^2*u3*vL*tetap2 - 4*L1*dm*k2*l2*cos(alfam2 + teta2)*u1*vL*wL^2*tetap2 + 4*L1*dm*k2*l2*cos(alfam2 + teta2)*u2*vL*wL^2*tetap2 - 4*L2*dm*k1*l2*cos(alfam2 + teta2)*u2*vL*wL^2*tetap2 + 4*L2*dm*k1*l2*cos(alfam2 + teta2)*u3*vL*wL^2*tetap2 - 4*L1*L2*dm*k1*l2*cos(alfam2 + teta2)*u1*u2*wpL - 4*L1*L2*dm*k1*l2*cos(alfam2 + teta2)*u1*wL*up2 - 4*L1*L2*dm*k1*l2*cos(alfam2 + teta2)*u2*wL*up1 + 4*L1*L2*dm*k1*l2*cos(alfam2 + teta2)*u1*u3*wpL + 4*L1*L2*dm*k1*l2*cos(alfam2 + teta2)*u1*wL*up3 + 8*L1*L2*dm*k1*l2*cos(alfam2 + teta2)*u2*wL*up2 + 4*L1*L2*dm*k1*l2*cos(alfam2 + teta2)*u3*wL*up1 - 4*L1*L2*dm*k2*l2*cos(alfam2 + teta2)*u1*u2*wpL - 4*L1*L2*dm*k2*l2*cos(alfam2 + teta2)*u1*wL*up2 - 4*L1*L2*dm*k2*l2*cos(alfam2 + teta2)*u2*wL*up1 - 4*L1*L2*dm*k1*l2*cos(alfam2 + teta2)*u2*u3*wpL - 4*L1*L2*dm*k1*l2*cos(alfam2 + teta2)*u2*wL*up3 - 4*L1*L2*dm*k1*l2*cos(alfam2 + teta2)*u3*wL*up2 + 4*L1*L2*dm*k2*l2*cos(alfam2 + teta2)*u1*u3*wpL + 4*L1*L2*dm*k2*l2*cos(alfam2 + teta2)*u1*wL*up3 + 8*L1*L2*dm*k2*l2*cos(alfam2 + teta2)*u2*wL*up2 + 4*L1*L2*dm*k2*l2*cos(alfam2 + teta2)*u3*wL*up1 - 4*L1*L2*dm*k2*l2*cos(alfam2 + teta2)*u2*u3*wpL - 4*L1*L2*dm*k2*l2*cos(alfam2 + teta2)*u2*wL*up3 - 4*L1*L2*dm*k2*l2*cos(alfam2 + teta2)*u3*wL*up2 - 2*L1*dm*k1*l2*sin(alfam2 + teta2)*u1*u2^2*wL*tetap2 - 2*L1*dm*k1*l2*sin(alfam2 + teta2)*u1*u3^2*wL*tetap2 - 4*L1*dm*k2*l2*sin(alfam2 + teta2)*u1*u2^2*wL*tetap2 + 8*L2*dm*k1*l2*sin(alfam2 + teta2)*u1*u2^2*wL*tetap2 - 4*L2*dm*k1*l2*sin(alfam2 + teta2)*u1^2*u2*wL*tetap2 - 4*L2^2*dm*k1*l2*sin(alfam2 + teta2)*u1*u2*wL*tetap2 + 2*L1*dm*k1*l2*sin(alfam2 + teta2)*u2*u3^2*wL*tetap2 - 4*L1*dm*k1*l2*sin(alfam2 + teta2)*u2^2*u3*wL*tetap2 - 4*L1*dm*k2*l2*sin(alfam2 + teta2)*u1*u3^2*wL*tetap2 + 4*L2*dm*k1*l2*sin(alfam2 + teta2)*u1^2*u3*wL*tetap2 + 4*L2*dm*k2*l2*sin(alfam2 + teta2)*u1*u2^2*wL*tetap2 - 2*L2*dm*k2*l2*sin(alfam2 + teta2)*u1^2*u2*wL*tetap2 + 4*L1*dm*k2*l2*sin(alfam2 + teta2)*u2*u3^2*wL*tetap2 - 8*L1*dm*k2*l2*sin(alfam2 + teta2)*u2^2*u3*wL*tetap2 + 4*L2*dm*k1*l2*sin(alfam2 + teta2)*u2^2*u3*wL*tetap2 + 2*L2*dm*k2*l2*sin(alfam2 + teta2)*u1^2*u3*wL*tetap2 - 4*L1^2*dm*k2*l2*sin(alfam2 + teta2)*u2*u3*wL*tetap2 + 2*L2*dm*k2*l2*sin(alfam2 + teta2)*u2^2*u3*wL*tetap2 - 4*L1*dm*k2*l2*sin(alfam2 + teta2)*u1*vL^2*wL*tetap2 + 4*L1*dm*k2*l2*sin(alfam2 + teta2)*u2*vL^2*wL*tetap2 - 4*L2*dm*k1*l2*sin(alfam2 + teta2)*u2*vL^2*wL*tetap2 + 4*L2*dm*k1*l2*sin(alfam2 + teta2)*u3*vL^2*wL*tetap2 + 4*L1*L2*dm*k1*l2*sin(alfam2 + teta2)*u1*u2*vpL + 4*L1*L2*dm*k1*l2*sin(alfam2 + teta2)*u1*vL*up2 + 4*L1*L2*dm*k1*l2*sin(alfam2 + teta2)*u2*vL*up1 - 4*L1*L2*dm*k1*l2*sin(alfam2 + teta2)*u1*u3*vpL - 4*L1*L2*dm*k1*l2*sin(alfam2 + teta2)*u1*vL*up3 - 8*L1*L2*dm*k1*l2*sin(alfam2 + teta2)*u2*vL*up2 - 4*L1*L2*dm*k1*l2*sin(alfam2 + teta2)*u3*vL*up1 + 4*L1*L2*dm*k2*l2*sin(alfam2 + teta2)*u1*u2*vpL + 4*L1*L2*dm*k2*l2*sin(alfam2 + teta2)*u1*vL*up2 + 4*L1*L2*dm*k2*l2*sin(alfam2 + teta2)*u2*vL*up1 + 4*L1*L2*dm*k1*l2*sin(alfam2 + teta2)*u2*u3*vpL + 4*L1*L2*dm*k1*l2*sin(alfam2 + teta2)*u2*vL*up3 + 4*L1*L2*dm*k1*l2*sin(alfam2 + teta2)*u3*vL*up2 - 4*L1*L2*dm*k2*l2*sin(alfam2 + teta2)*u1*u3*vpL - 4*L1*L2*dm*k2*l2*sin(alfam2 + teta2)*u1*vL*up3 - 8*L1*L2*dm*k2*l2*sin(alfam2 + teta2)*u2*vL*up2 - 4*L1*L2*dm*k2*l2*sin(alfam2 + teta2)*u3*vL*up1 + 4*L1*L2*dm*k2*l2*sin(alfam2 + teta2)*u2*u3*vpL + 4*L1*L2*dm*k2*l2*sin(alfam2 + teta2)*u2*vL*up3 + 4*L1*L2*dm*k2*l2*sin(alfam2 + teta2)*u3*vL*up2 + 4*L1*dm*k1*l2*cos(alfam2 + teta2)*u1*u2*u3*vL*tetap2 + 8*L1*dm*k2*l2*cos(alfam2 + teta2)*u1*u2*u3*vL*tetap2 - 8*L2*dm*k1*l2*cos(alfam2 + teta2)*u1*u2*u3*vL*tetap2 - 4*L2*dm*k2*l2*cos(alfam2 + teta2)*u1*u2*u3*vL*tetap2 + 4*L1*dm*k1*l2*sin(alfam2 + teta2)*u1*u2*u3*wL*tetap2 + 8*L1*dm*k2*l2*sin(alfam2 + teta2)*u1*u2*u3*wL*tetap2 - 8*L2*dm*k1*l2*sin(alfam2 + teta2)*u1*u2*u3*wL*tetap2 - 4*L2*dm*k2*l2*sin(alfam2 + teta2)*u1*u2*u3*wL*tetap2 + 4*L1*L2*dm*k1*l2*cos(alfam2 + teta2)*u1*u2*vL*tetap2 - 4*L1*L2*dm*k1*l2*cos(alfam2 + teta2)*u1*u3*vL*tetap2 + 4*L1*L2*dm*k2*l2*cos(alfam2 + teta2)*u1*u2*vL*tetap2 + 4*L1*L2*dm*k1*l2*cos(alfam2 + teta2)*u2*u3*vL*tetap2 - 4*L1*L2*dm*k2*l2*cos(alfam2 + teta2)*u1*u3*vL*tetap2 + 4*L1*L2*dm*k2*l2*cos(alfam2 + teta2)*u2*u3*vL*tetap2 + 4*L1*L2*dm*k1*l2*sin(alfam2 + teta2)*u1*u2*wL*tetap2 - 4*L1*L2*dm*k1*l2*sin(alfam2 + teta2)*u1*u3*wL*tetap2 + 4*L1*L2*dm*k2*l2*sin(alfam2 + teta2)*u1*u2*wL*tetap2 + 4*L1*L2*dm*k1*l2*sin(alfam2 + teta2)*u2*u3*wL*tetap2 - 4*L1*L2*dm*k2*l2*sin(alfam2 + teta2)*u1*u3*wL*tetap2 + 4*L1*L2*dm*k2*l2*sin(alfam2 + teta2)*u2*u3*wL*tetap2)/((dm^2*l2^2 - Ib2*Mb2)*(L1 - u1 + u2)^2*(L2 - u2 + u3)^2) - (2*(up1 - up2)*(K1*Mb2*teta1*u2^4 - K1*Mb2*teta2*u2^4 - K2*Mb2*teta2*u2^4 + K2*Mb2*teta3*u2^4 - 2*K1*Mb2*teta1*u1*u2^3 + 2*K1*Mb2*teta2*u1*u2^3 - 2*K1*Mb2*teta1*u2^3*u3 + 2*K2*Mb2*teta2*u1*u2^3 + 2*K1*Mb2*teta2*u2^3*u3 - 2*K2*Mb2*teta3*u1*u2^3 + 2*K2*Mb2*teta2*u2^3*u3 - 2*K2*Mb2*teta3*u2^3*u3 + K1*L1^2*L2^2*Mb2*teta1 - K1*L1^2*L2^2*Mb2*teta2 - K2*L1^2*L2^2*Mb2*teta2 + K2*L1^2*L2^2*Mb2*teta3 + K1*Mb2*teta1*u1^2*u2^2 + K1*Mb2*teta1*u1^2*u3^2 - K1*Mb2*teta2*u1^2*u2^2 + K1*Mb2*teta1*u2^2*u3^2 - K1*Mb2*teta2*u1^2*u3^2 - K2*Mb2*teta2*u1^2*u2^2 - K1*Mb2*teta2*u2^2*u3^2 - K2*Mb2*teta2*u1^2*u3^2 + K2*Mb2*teta3*u1^2*u2^2 - K2*Mb2*teta2*u2^2*u3^2 + K2*Mb2*teta3*u1^2*u3^2 + K2*Mb2*teta3*u2^2*u3^2 + 2*K1*L1*Mb2*teta1*u2^3 - 2*K1*L1*Mb2*teta2*u2^3 - 2*K1*L2*Mb2*teta1*u2^3 + 2*K1*L2*Mb2*teta2*u2^3 - 2*K2*L1*Mb2*teta2*u2^3 + 2*K2*L1*Mb2*teta3*u2^3 + 2*K2*L2*Mb2*teta2*u2^3 - 2*K2*L2*Mb2*teta3*u2^3 + K1*L1^2*Mb2*teta1*u2^2 + K1*L2^2*Mb2*teta1*u1^2 + K1*L1^2*Mb2*teta1*u3^2 - K1*L1^2*Mb2*teta2*u2^2 + K1*L2^2*Mb2*teta1*u2^2 - K1*L2^2*Mb2*teta2*u1^2 - K1*L1^2*Mb2*teta2*u3^2 - K1*L2^2*Mb2*teta2*u2^2 - K2*L1^2*Mb2*teta2*u2^2 - K2*L2^2*Mb2*teta2*u1^2 - K2*L1^2*Mb2*teta2*u3^2 + K2*L1^2*Mb2*teta3*u2^2 - K2*L2^2*Mb2*teta2*u2^2 + K2*L2^2*Mb2*teta3*u1^2 + K2*L1^2*Mb2*teta3*u3^2 + K2*L2^2*Mb2*teta3*u2^2 + 2*dm*k1*l2*cos(alfam2 + teta2)*u2^2*wL^3 + 2*dm*k2*l2*cos(alfam2 + teta2)*u1^2*wL^3 + 2*dm*k1*l2*cos(alfam2 + teta2)*u3^2*wL^3 + 2*dm*k2*l2*cos(alfam2 + teta2)*u2^2*wL^3 - 2*dm*k1*l2*sin(alfam2 + teta2)*u2^2*vL^3 - 2*dm*k2*l2*sin(alfam2 + teta2)*u1^2*vL^3 - 2*dm*k1*l2*sin(alfam2 + teta2)*u3^2*vL^3 - 2*dm*k2*l2*sin(alfam2 + teta2)*u2^2*vL^3 - 2*K1*L1*Mb2*teta1*u1*u2^2 - 2*K1*L1*Mb2*teta1*u1*u3^2 + 2*K1*L1*Mb2*teta2*u1*u2^2 + 4*K1*L2*Mb2*teta1*u1*u2^2 - 2*K1*L2*Mb2*teta1*u1^2*u2 - 2*K1*L2^2*Mb2*teta1*u1*u2 + 2*K1*L1*Mb2*teta1*u2*u3^2 - 4*K1*L1*Mb2*teta1*u2^2*u3 + 2*K1*L1*Mb2*teta2*u1*u3^2 + 2*K1*L2*Mb2*teta1*u1^2*u3 - 4*K1*L2*Mb2*teta2*u1*u2^2 + 2*K1*L2*Mb2*teta2*u1^2*u2 - 2*K1*L1^2*Mb2*teta1*u2*u3 + 2*K1*L2^2*Mb2*teta2*u1*u2 + 2*K2*L1*Mb2*teta2*u1*u2^2 - 2*K1*L1*Mb2*teta2*u2*u3^2 + 4*K1*L1*Mb2*teta2*u2^2*u3 + 2*K1*L2*Mb2*teta1*u2^2*u3 - 2*K1*L2*Mb2*teta2*u1^2*u3 + 2*K1*L1^2*Mb2*teta2*u2*u3 + 2*K2*L1*Mb2*teta2*u1*u3^2 - 2*K2*L1*Mb2*teta3*u1*u2^2 - 4*K2*L2*Mb2*teta2*u1*u2^2 + 2*K2*L2*Mb2*teta2*u1^2*u2 + 2*K2*L2^2*Mb2*teta2*u1*u2 - 2*K1*L2*Mb2*teta2*u2^2*u3 - 2*K2*L1*Mb2*teta2*u2*u3^2 + 4*K2*L1*Mb2*teta2*u2^2*u3 - 2*K2*L1*Mb2*teta3*u1*u3^2 - 2*K2*L2*Mb2*teta2*u1^2*u3 + 4*K2*L2*Mb2*teta3*u1*u2^2 - 2*K2*L2*Mb2*teta3*u1^2*u2 + 2*K2*L1^2*Mb2*teta2*u2*u3 - 2*K2*L2^2*Mb2*teta3*u1*u2 + 2*K2*L1*Mb2*teta3*u2*u3^2 - 4*K2*L1*Mb2*teta3*u2^2*u3 - 2*K2*L2*Mb2*teta2*u2^2*u3 + 2*K2*L2*Mb2*teta3*u1^2*u3 - 2*K2*L1^2*Mb2*teta3*u2*u3 + 2*K2*L2*Mb2*teta3*u2^2*u3 + 2*L1^2*dm*k2*l2*cos(alfam2 + teta2)*wL^3 + 2*L2^2*dm*k1*l2*cos(alfam2 + teta2)*wL^3 - 2*L1^2*dm*k2*l2*sin(alfam2 + teta2)*vL^3 - 2*L2^2*dm*k1*l2*sin(alfam2 + teta2)*vL^3 - 2*K1*L1*L2^2*Mb2*teta1*u1 - 4*K1*L1*L2*Mb2*teta1*u2^2 + 2*K1*L1*L2^2*Mb2*teta1*u2 + 2*K1*L1*L2^2*Mb2*teta2*u1 - 2*K1*L1^2*L2*Mb2*teta1*u2 + 4*K1*L1*L2*Mb2*teta2*u2^2 - 2*K1*L1*L2^2*Mb2*teta2*u2 + 2*K1*L1^2*L2*Mb2*teta1*u3 + 2*K1*L1^2*L2*Mb2*teta2*u2 + 2*K2*L1*L2^2*Mb2*teta2*u1 - 2*K1*L1^2*L2*Mb2*teta2*u3 + 4*K2*L1*L2*Mb2*teta2*u2^2 - 2*K2*L1*L2^2*Mb2*teta2*u2 - 2*K2*L1*L2^2*Mb2*teta3*u1 + 2*K2*L1^2*L2*Mb2*teta2*u2 - 4*K2*L1*L2*Mb2*teta3*u2^2 + 2*K2*L1*L2^2*Mb2*teta3*u2 - 2*K2*L1^2*L2*Mb2*teta2*u3 - 2*K2*L1^2*L2*Mb2*teta3*u2 + 2*K2*L1^2*L2*Mb2*teta3*u3 + 2*dm*k1*l2*cos(alfam2 + teta2)*u2^4*wL + 2*dm*k2*l2*cos(alfam2 + teta2)*u2^4*wL - 2*dm*k1*l2*sin(alfam2 + teta2)*u2^4*vL - 2*dm*k2*l2*sin(alfam2 + teta2)*u2^4*vL - 2*K1*Mb2*teta1*u1*u2*u3^2 + 4*K1*Mb2*teta1*u1*u2^2*u3 - 2*K1*Mb2*teta1*u1^2*u2*u3 + 2*K1*Mb2*teta2*u1*u2*u3^2 - 4*K1*Mb2*teta2*u1*u2^2*u3 + 2*K1*Mb2*teta2*u1^2*u2*u3 + 2*K2*Mb2*teta2*u1*u2*u3^2 - 4*K2*Mb2*teta2*u1*u2^2*u3 + 2*K2*Mb2*teta2*u1^2*u2*u3 - 2*K2*Mb2*teta3*u1*u2*u3^2 + 4*K2*Mb2*teta3*u1*u2^2*u3 - 2*K2*Mb2*teta3*u1^2*u2*u3 + 2*dm*k1*l2*cos(alfam2 + teta2)*u1^2*u2^2*wL + 2*dm*k1*l2*cos(alfam2 + teta2)*u1^2*u3^2*wL + 2*dm*k2*l2*cos(alfam2 + teta2)*u1^2*u2^2*wL + 2*dm*k1*l2*cos(alfam2 + teta2)*u2^2*u3^2*wL + 2*dm*k2*l2*cos(alfam2 + teta2)*u1^2*u3^2*wL + 2*dm*k2*l2*cos(alfam2 + teta2)*u2^2*u3^2*wL + 2*dm*k1*l2*cos(alfam2 + teta2)*u2^2*vL^2*wL + 2*dm*k2*l2*cos(alfam2 + teta2)*u1^2*vL^2*wL + 2*dm*k1*l2*cos(alfam2 + teta2)*u3^2*vL^2*wL + 2*dm*k2*l2*cos(alfam2 + teta2)*u2^2*vL^2*wL + 2*L1*dm*k1*l2*cos(alfam2 + teta2)*u2^3*wL - 4*L1*dm*k2*l2*cos(alfam2 + teta2)*u1*wL^3 + 4*L1*dm*k2*l2*cos(alfam2 + teta2)*u2*wL^3 + 4*L1*dm*k2*l2*cos(alfam2 + teta2)*u2^3*wL - 4*L2*dm*k1*l2*cos(alfam2 + teta2)*u2*wL^3 - 4*L2*dm*k1*l2*cos(alfam2 + teta2)*u2^3*wL + 4*L2*dm*k1*l2*cos(alfam2 + teta2)*u3*wL^3 - 2*L2*dm*k2*l2*cos(alfam2 + teta2)*u2^3*wL - 2*dm*k1*l2*sin(alfam2 + teta2)*u1^2*u2^2*vL - 2*dm*k1*l2*sin(alfam2 + teta2)*u1^2*u3^2*vL - 2*dm*k2*l2*sin(alfam2 + teta2)*u1^2*u2^2*vL - 2*dm*k1*l2*sin(alfam2 + teta2)*u2^2*u3^2*vL - 2*dm*k2*l2*sin(alfam2 + teta2)*u1^2*u3^2*vL - 2*dm*k2*l2*sin(alfam2 + teta2)*u2^2*u3^2*vL - 2*dm*k1*l2*sin(alfam2 + teta2)*u2^2*vL*wL^2 - 2*dm*k2*l2*sin(alfam2 + teta2)*u1^2*vL*wL^2 - 2*dm*k1*l2*sin(alfam2 + teta2)*u3^2*vL*wL^2 - 2*dm*k2*l2*sin(alfam2 + teta2)*u2^2*vL*wL^2 - 2*L1*dm*k1*l2*sin(alfam2 + teta2)*u2^3*vL + 4*L1*dm*k2*l2*sin(alfam2 + teta2)*u1*vL^3 - 4*L1*dm*k2*l2*sin(alfam2 + teta2)*u2*vL^3 - 4*L1*dm*k2*l2*sin(alfam2 + teta2)*u2^3*vL + 4*L2*dm*k1*l2*sin(alfam2 + teta2)*u2*vL^3 + 4*L2*dm*k1*l2*sin(alfam2 + teta2)*u2^3*vL - 4*L2*dm*k1*l2*sin(alfam2 + teta2)*u3*vL^3 + 2*L2*dm*k2*l2*sin(alfam2 + teta2)*u2^3*vL + 4*K1*L1*L2*Mb2*teta1*u1*u2 - 4*K1*L1*L2*Mb2*teta1*u1*u3 - 4*K1*L1*L2*Mb2*teta2*u1*u2 + 4*K1*L1*L2*Mb2*teta1*u2*u3 + 4*K1*L1*L2*Mb2*teta2*u1*u3 - 4*K2*L1*L2*Mb2*teta2*u1*u2 - 4*K1*L1*L2*Mb2*teta2*u2*u3 + 4*K2*L1*L2*Mb2*teta2*u1*u3 + 4*K2*L1*L2*Mb2*teta3*u1*u2 - 4*K2*L1*L2*Mb2*teta2*u2*u3 - 4*K2*L1*L2*Mb2*teta3*u1*u3 + 4*K2*L1*L2*Mb2*teta3*u2*u3 + 2*L2^2*dm*k1*l2*cos(alfam2 + teta2)*u1^2*wL + 2*L1^2*dm*k2*l2*cos(alfam2 + teta2)*u2^2*wL + 2*L2^2*dm*k1*l2*cos(alfam2 + teta2)*u2^2*wL + 2*L1^2*dm*k2*l2*cos(alfam2 + teta2)*u3^2*wL + 2*L1^2*dm*k2*l2*cos(alfam2 + teta2)*vL^2*wL + 2*L2^2*dm*k1*l2*cos(alfam2 + teta2)*vL^2*wL - 2*L2^2*dm*k1*l2*sin(alfam2 + teta2)*u1^2*vL - 2*L1^2*dm*k2*l2*sin(alfam2 + teta2)*u2^2*vL - 2*L2^2*dm*k1*l2*sin(alfam2 + teta2)*u2^2*vL - 2*L1^2*dm*k2*l2*sin(alfam2 + teta2)*u3^2*vL - 2*L1^2*dm*k2*l2*sin(alfam2 + teta2)*vL*wL^2 - 2*L2^2*dm*k1*l2*sin(alfam2 + teta2)*vL*wL^2 - 4*dm*k1*l2*cos(alfam2 + teta2)*u1*u2^3*wL - 4*dm*k2*l2*cos(alfam2 + teta2)*u1*u2*wL^3 - 4*dm*k2*l2*cos(alfam2 + teta2)*u1*u2^3*wL - 4*dm*k1*l2*cos(alfam2 + teta2)*u2*u3*wL^3 - 4*dm*k1*l2*cos(alfam2 + teta2)*u2^3*u3*wL - 4*dm*k2*l2*cos(alfam2 + teta2)*u2^3*u3*wL + 4*dm*k1*l2*sin(alfam2 + teta2)*u1*u2^3*vL + 4*dm*k2*l2*sin(alfam2 + teta2)*u1*u2*vL^3 + 4*dm*k2*l2*sin(alfam2 + teta2)*u1*u2^3*vL + 4*dm*k1*l2*sin(alfam2 + teta2)*u2*u3*vL^3 + 4*dm*k1*l2*sin(alfam2 + teta2)*u2^3*u3*vL + 4*dm*k2*l2*sin(alfam2 + teta2)*u2^3*u3*vL + 4*K1*L1*Mb2*teta1*u1*u2*u3 - 4*K1*L1*Mb2*teta2*u1*u2*u3 - 4*K1*L2*Mb2*teta1*u1*u2*u3 + 4*K1*L2*Mb2*teta2*u1*u2*u3 - 4*K2*L1*Mb2*teta2*u1*u2*u3 + 4*K2*L1*Mb2*teta3*u1*u2*u3 + 4*K2*L2*Mb2*teta2*u1*u2*u3 - 4*K2*L2*Mb2*teta3*u1*u2*u3 - 2*L1*dm*k1*l2*cos(alfam2 + teta2)*u1*u2^2*wL - 2*L1*dm*k1*l2*cos(alfam2 + teta2)*u1*u3^2*wL - 4*L1*dm*k2*l2*cos(alfam2 + teta2)*u1*u2^2*wL + 8*L2*dm*k1*l2*cos(alfam2 + teta2)*u1*u2^2*wL - 4*L2*dm*k1*l2*cos(alfam2 + teta2)*u1^2*u2*wL - 4*L2^2*dm*k1*l2*cos(alfam2 + teta2)*u1*u2*wL + 2*L1*dm*k1*l2*cos(alfam2 + teta2)*u2*u3^2*wL - 4*L1*dm*k1*l2*cos(alfam2 + teta2)*u2^2*u3*wL - 4*L1*dm*k2*l2*cos(alfam2 + teta2)*u1*u3^2*wL + 4*L2*dm*k1*l2*cos(alfam2 + teta2)*u1^2*u3*wL + 4*L2*dm*k2*l2*cos(alfam2 + teta2)*u1*u2^2*wL - 2*L2*dm*k2*l2*cos(alfam2 + teta2)*u1^2*u2*wL + 4*L1*dm*k2*l2*cos(alfam2 + teta2)*u2*u3^2*wL - 8*L1*dm*k2*l2*cos(alfam2 + teta2)*u2^2*u3*wL + 4*L2*dm*k1*l2*cos(alfam2 + teta2)*u2^2*u3*wL + 2*L2*dm*k2*l2*cos(alfam2 + teta2)*u1^2*u3*wL - 4*L1^2*dm*k2*l2*cos(alfam2 + teta2)*u2*u3*wL + 2*L2*dm*k2*l2*cos(alfam2 + teta2)*u2^2*u3*wL - 4*L1*dm*k2*l2*cos(alfam2 + teta2)*u1*vL^2*wL + 4*L1*dm*k2*l2*cos(alfam2 + teta2)*u2*vL^2*wL - 4*L2*dm*k1*l2*cos(alfam2 + teta2)*u2*vL^2*wL + 4*L2*dm*k1*l2*cos(alfam2 + teta2)*u3*vL^2*wL + 2*L1*dm*k1*l2*sin(alfam2 + teta2)*u1*u2^2*vL + 2*L1*dm*k1*l2*sin(alfam2 + teta2)*u1*u3^2*vL + 4*L1*dm*k2*l2*sin(alfam2 + teta2)*u1*u2^2*vL - 8*L2*dm*k1*l2*sin(alfam2 + teta2)*u1*u2^2*vL + 4*L2*dm*k1*l2*sin(alfam2 + teta2)*u1^2*u2*vL + 4*L2^2*dm*k1*l2*sin(alfam2 + teta2)*u1*u2*vL - 2*L1*dm*k1*l2*sin(alfam2 + teta2)*u2*u3^2*vL + 4*L1*dm*k1*l2*sin(alfam2 + teta2)*u2^2*u3*vL + 4*L1*dm*k2*l2*sin(alfam2 + teta2)*u1*u3^2*vL - 4*L2*dm*k1*l2*sin(alfam2 + teta2)*u1^2*u3*vL - 4*L2*dm*k2*l2*sin(alfam2 + teta2)*u1*u2^2*vL + 2*L2*dm*k2*l2*sin(alfam2 + teta2)*u1^2*u2*vL - 4*L1*dm*k2*l2*sin(alfam2 + teta2)*u2*u3^2*vL + 8*L1*dm*k2*l2*sin(alfam2 + teta2)*u2^2*u3*vL - 4*L2*dm*k1*l2*sin(alfam2 + teta2)*u2^2*u3*vL - 2*L2*dm*k2*l2*sin(alfam2 + teta2)*u1^2*u3*vL + 4*L1^2*dm*k2*l2*sin(alfam2 + teta2)*u2*u3*vL - 2*L2*dm*k2*l2*sin(alfam2 + teta2)*u2^2*u3*vL + 4*L1*dm*k2*l2*sin(alfam2 + teta2)*u1*vL*wL^2 - 4*L1*dm*k2*l2*sin(alfam2 + teta2)*u2*vL*wL^2 + 4*L2*dm*k1*l2*sin(alfam2 + teta2)*u2*vL*wL^2 - 4*L2*dm*k1*l2*sin(alfam2 + teta2)*u3*vL*wL^2 - 2*L1*L2^2*dm*k1*l2*cos(alfam2 + teta2)*u1*wL - 4*L1*L2*dm*k1*l2*cos(alfam2 + teta2)*u2^2*wL + 2*L1*L2^2*dm*k1*l2*cos(alfam2 + teta2)*u2*wL - 4*L1*L2*dm*k2*l2*cos(alfam2 + teta2)*u2^2*wL - 2*L1^2*L2*dm*k2*l2*cos(alfam2 + teta2)*u2*wL + 2*L1^2*L2*dm*k2*l2*cos(alfam2 + teta2)*u3*wL + 2*L1*L2^2*dm*k1*l2*sin(alfam2 + teta2)*u1*vL + 4*L1*L2*dm*k1*l2*sin(alfam2 + teta2)*u2^2*vL - 2*L1*L2^2*dm*k1*l2*sin(alfam2 + teta2)*u2*vL + 4*L1*L2*dm*k2*l2*sin(alfam2 + teta2)*u2^2*vL + 2*L1^2*L2*dm*k2*l2*sin(alfam2 + teta2)*u2*vL - 2*L1^2*L2*dm*k2*l2*sin(alfam2 + teta2)*u3*vL - 4*dm*k1*l2*cos(alfam2 + teta2)*u1*u2*u3^2*wL + 8*dm*k1*l2*cos(alfam2 + teta2)*u1*u2^2*u3*wL - 4*dm*k1*l2*cos(alfam2 + teta2)*u1^2*u2*u3*wL - 4*dm*k2*l2*cos(alfam2 + teta2)*u1*u2*u3^2*wL + 8*dm*k2*l2*cos(alfam2 + teta2)*u1*u2^2*u3*wL - 4*dm*k2*l2*cos(alfam2 + teta2)*u1^2*u2*u3*wL - 4*dm*k2*l2*cos(alfam2 + teta2)*u1*u2*vL^2*wL - 4*dm*k1*l2*cos(alfam2 + teta2)*u2*u3*vL^2*wL + 4*dm*k1*l2*sin(alfam2 + teta2)*u1*u2*u3^2*vL - 8*dm*k1*l2*sin(alfam2 + teta2)*u1*u2^2*u3*vL + 4*dm*k1*l2*sin(alfam2 + teta2)*u1^2*u2*u3*vL + 4*dm*k2*l2*sin(alfam2 + teta2)*u1*u2*u3^2*vL - 8*dm*k2*l2*sin(alfam2 + teta2)*u1*u2^2*u3*vL + 4*dm*k2*l2*sin(alfam2 + teta2)*u1^2*u2*u3*vL + 4*dm*k2*l2*sin(alfam2 + teta2)*u1*u2*vL*wL^2 + 4*dm*k1*l2*sin(alfam2 + teta2)*u2*u3*vL*wL^2 - 4*L1*L2*dm*k1*l2*sin(alfam2 + teta2)*u1*u2*vL + 4*L1*L2*dm*k1*l2*sin(alfam2 + teta2)*u1*u3*vL - 4*L1*L2*dm*k2*l2*sin(alfam2 + teta2)*u1*u2*vL - 4*L1*L2*dm*k1*l2*sin(alfam2 + teta2)*u2*u3*vL + 4*L1*L2*dm*k2*l2*sin(alfam2 + teta2)*u1*u3*vL - 4*L1*L2*dm*k2*l2*sin(alfam2 + teta2)*u2*u3*vL + 4*L1*dm*k1*l2*cos(alfam2 + teta2)*u1*u2*u3*wL + 8*L1*dm*k2*l2*cos(alfam2 + teta2)*u1*u2*u3*wL - 8*L2*dm*k1*l2*cos(alfam2 + teta2)*u1*u2*u3*wL - 4*L2*dm*k2*l2*cos(alfam2 + teta2)*u1*u2*u3*wL - 4*L1*dm*k1*l2*sin(alfam2 + teta2)*u1*u2*u3*vL - 8*L1*dm*k2*l2*sin(alfam2 + teta2)*u1*u2*u3*vL + 8*L2*dm*k1*l2*sin(alfam2 + teta2)*u1*u2*u3*vL + 4*L2*dm*k2*l2*sin(alfam2 + teta2)*u1*u2*u3*vL + 4*L1*L2*dm*k1*l2*cos(alfam2 + teta2)*u1*u2*wL - 4*L1*L2*dm*k1*l2*cos(alfam2 + teta2)*u1*u3*wL + 4*L1*L2*dm*k2*l2*cos(alfam2 + teta2)*u1*u2*wL + 4*L1*L2*dm*k1*l2*cos(alfam2 + teta2)*u2*u3*wL - 4*L1*L2*dm*k2*l2*cos(alfam2 + teta2)*u1*u3*wL + 4*L1*L2*dm*k2*l2*cos(alfam2 + teta2)*u2*u3*wL))/((dm^2*l2^2 - Ib2*Mb2)*(L1 - u1 + u2)^3*(L2 - u2 + u3)^2) - (2*(up2 - up3)*(K1*Mb2*teta1*u2^4 - K1*Mb2*teta2*u2^4 - K2*Mb2*teta2*u2^4 + K2*Mb2*teta3*u2^4 - 2*K1*Mb2*teta1*u1*u2^3 + 2*K1*Mb2*teta2*u1*u2^3 - 2*K1*Mb2*teta1*u2^3*u3 + 2*K2*Mb2*teta2*u1*u2^3 + 2*K1*Mb2*teta2*u2^3*u3 - 2*K2*Mb2*teta3*u1*u2^3 + 2*K2*Mb2*teta2*u2^3*u3 - 2*K2*Mb2*teta3*u2^3*u3 + K1*L1^2*L2^2*Mb2*teta1 - K1*L1^2*L2^2*Mb2*teta2 - K2*L1^2*L2^2*Mb2*teta2 + K2*L1^2*L2^2*Mb2*teta3 + K1*Mb2*teta1*u1^2*u2^2 + K1*Mb2*teta1*u1^2*u3^2 - K1*Mb2*teta2*u1^2*u2^2 + K1*Mb2*teta1*u2^2*u3^2 - K1*Mb2*teta2*u1^2*u3^2 - K2*Mb2*teta2*u1^2*u2^2 - K1*Mb2*teta2*u2^2*u3^2 - K2*Mb2*teta2*u1^2*u3^2 + K2*Mb2*teta3*u1^2*u2^2 - K2*Mb2*teta2*u2^2*u3^2 + K2*Mb2*teta3*u1^2*u3^2 + K2*Mb2*teta3*u2^2*u3^2 + 2*K1*L1*Mb2*teta1*u2^3 - 2*K1*L1*Mb2*teta2*u2^3 - 2*K1*L2*Mb2*teta1*u2^3 + 2*K1*L2*Mb2*teta2*u2^3 - 2*K2*L1*Mb2*teta2*u2^3 + 2*K2*L1*Mb2*teta3*u2^3 + 2*K2*L2*Mb2*teta2*u2^3 - 2*K2*L2*Mb2*teta3*u2^3 + K1*L1^2*Mb2*teta1*u2^2 + K1*L2^2*Mb2*teta1*u1^2 + K1*L1^2*Mb2*teta1*u3^2 - K1*L1^2*Mb2*teta2*u2^2 + K1*L2^2*Mb2*teta1*u2^2 - K1*L2^2*Mb2*teta2*u1^2 - K1*L1^2*Mb2*teta2*u3^2 - K1*L2^2*Mb2*teta2*u2^2 - K2*L1^2*Mb2*teta2*u2^2 - K2*L2^2*Mb2*teta2*u1^2 - K2*L1^2*Mb2*teta2*u3^2 + K2*L1^2*Mb2*teta3*u2^2 - K2*L2^2*Mb2*teta2*u2^2 + K2*L2^2*Mb2*teta3*u1^2 + K2*L1^2*Mb2*teta3*u3^2 + K2*L2^2*Mb2*teta3*u2^2 + 2*dm*k1*l2*cos(alfam2 + teta2)*u2^2*wL^3 + 2*dm*k2*l2*cos(alfam2 + teta2)*u1^2*wL^3 + 2*dm*k1*l2*cos(alfam2 + teta2)*u3^2*wL^3 + 2*dm*k2*l2*cos(alfam2 + teta2)*u2^2*wL^3 - 2*dm*k1*l2*sin(alfam2 + teta2)*u2^2*vL^3 - 2*dm*k2*l2*sin(alfam2 + teta2)*u1^2*vL^3 - 2*dm*k1*l2*sin(alfam2 + teta2)*u3^2*vL^3 - 2*dm*k2*l2*sin(alfam2 + teta2)*u2^2*vL^3 - 2*K1*L1*Mb2*teta1*u1*u2^2 - 2*K1*L1*Mb2*teta1*u1*u3^2 + 2*K1*L1*Mb2*teta2*u1*u2^2 + 4*K1*L2*Mb2*teta1*u1*u2^2 - 2*K1*L2*Mb2*teta1*u1^2*u2 - 2*K1*L2^2*Mb2*teta1*u1*u2 + 2*K1*L1*Mb2*teta1*u2*u3^2 - 4*K1*L1*Mb2*teta1*u2^2*u3 + 2*K1*L1*Mb2*teta2*u1*u3^2 + 2*K1*L2*Mb2*teta1*u1^2*u3 - 4*K1*L2*Mb2*teta2*u1*u2^2 + 2*K1*L2*Mb2*teta2*u1^2*u2 - 2*K1*L1^2*Mb2*teta1*u2*u3 + 2*K1*L2^2*Mb2*teta2*u1*u2 + 2*K2*L1*Mb2*teta2*u1*u2^2 - 2*K1*L1*Mb2*teta2*u2*u3^2 + 4*K1*L1*Mb2*teta2*u2^2*u3 + 2*K1*L2*Mb2*teta1*u2^2*u3 - 2*K1*L2*Mb2*teta2*u1^2*u3 + 2*K1*L1^2*Mb2*teta2*u2*u3 + 2*K2*L1*Mb2*teta2*u1*u3^2 - 2*K2*L1*Mb2*teta3*u1*u2^2 - 4*K2*L2*Mb2*teta2*u1*u2^2 + 2*K2*L2*Mb2*teta2*u1^2*u2 + 2*K2*L2^2*Mb2*teta2*u1*u2 - 2*K1*L2*Mb2*teta2*u2^2*u3 - 2*K2*L1*Mb2*teta2*u2*u3^2 + 4*K2*L1*Mb2*teta2*u2^2*u3 - 2*K2*L1*Mb2*teta3*u1*u3^2 - 2*K2*L2*Mb2*teta2*u1^2*u3 + 4*K2*L2*Mb2*teta3*u1*u2^2 - 2*K2*L2*Mb2*teta3*u1^2*u2 + 2*K2*L1^2*Mb2*teta2*u2*u3 - 2*K2*L2^2*Mb2*teta3*u1*u2 + 2*K2*L1*Mb2*teta3*u2*u3^2 - 4*K2*L1*Mb2*teta3*u2^2*u3 - 2*K2*L2*Mb2*teta2*u2^2*u3 + 2*K2*L2*Mb2*teta3*u1^2*u3 - 2*K2*L1^2*Mb2*teta3*u2*u3 + 2*K2*L2*Mb2*teta3*u2^2*u3 + 2*L1^2*dm*k2*l2*cos(alfam2 + teta2)*wL^3 + 2*L2^2*dm*k1*l2*cos(alfam2 + teta2)*wL^3 - 2*L1^2*dm*k2*l2*sin(alfam2 + teta2)*vL^3 - 2*L2^2*dm*k1*l2*sin(alfam2 + teta2)*vL^3 - 2*K1*L1*L2^2*Mb2*teta1*u1 - 4*K1*L1*L2*Mb2*teta1*u2^2 + 2*K1*L1*L2^2*Mb2*teta1*u2 + 2*K1*L1*L2^2*Mb2*teta2*u1 - 2*K1*L1^2*L2*Mb2*teta1*u2 + 4*K1*L1*L2*Mb2*teta2*u2^2 - 2*K1*L1*L2^2*Mb2*teta2*u2 + 2*K1*L1^2*L2*Mb2*teta1*u3 + 2*K1*L1^2*L2*Mb2*teta2*u2 + 2*K2*L1*L2^2*Mb2*teta2*u1 - 2*K1*L1^2*L2*Mb2*teta2*u3 + 4*K2*L1*L2*Mb2*teta2*u2^2 - 2*K2*L1*L2^2*Mb2*teta2*u2 - 2*K2*L1*L2^2*Mb2*teta3*u1 + 2*K2*L1^2*L2*Mb2*teta2*u2 - 4*K2*L1*L2*Mb2*teta3*u2^2 + 2*K2*L1*L2^2*Mb2*teta3*u2 - 2*K2*L1^2*L2*Mb2*teta2*u3 - 2*K2*L1^2*L2*Mb2*teta3*u2 + 2*K2*L1^2*L2*Mb2*teta3*u3 + 2*dm*k1*l2*cos(alfam2 + teta2)*u2^4*wL + 2*dm*k2*l2*cos(alfam2 + teta2)*u2^4*wL - 2*dm*k1*l2*sin(alfam2 + teta2)*u2^4*vL - 2*dm*k2*l2*sin(alfam2 + teta2)*u2^4*vL - 2*K1*Mb2*teta1*u1*u2*u3^2 + 4*K1*Mb2*teta1*u1*u2^2*u3 - 2*K1*Mb2*teta1*u1^2*u2*u3 + 2*K1*Mb2*teta2*u1*u2*u3^2 - 4*K1*Mb2*teta2*u1*u2^2*u3 + 2*K1*Mb2*teta2*u1^2*u2*u3 + 2*K2*Mb2*teta2*u1*u2*u3^2 - 4*K2*Mb2*teta2*u1*u2^2*u3 + 2*K2*Mb2*teta2*u1^2*u2*u3 - 2*K2*Mb2*teta3*u1*u2*u3^2 + 4*K2*Mb2*teta3*u1*u2^2*u3 - 2*K2*Mb2*teta3*u1^2*u2*u3 + 2*dm*k1*l2*cos(alfam2 + teta2)*u1^2*u2^2*wL + 2*dm*k1*l2*cos(alfam2 + teta2)*u1^2*u3^2*wL + 2*dm*k2*l2*cos(alfam2 + teta2)*u1^2*u2^2*wL + 2*dm*k1*l2*cos(alfam2 + teta2)*u2^2*u3^2*wL + 2*dm*k2*l2*cos(alfam2 + teta2)*u1^2*u3^2*wL + 2*dm*k2*l2*cos(alfam2 + teta2)*u2^2*u3^2*wL + 2*dm*k1*l2*cos(alfam2 + teta2)*u2^2*vL^2*wL + 2*dm*k2*l2*cos(alfam2 + teta2)*u1^2*vL^2*wL + 2*dm*k1*l2*cos(alfam2 + teta2)*u3^2*vL^2*wL + 2*dm*k2*l2*cos(alfam2 + teta2)*u2^2*vL^2*wL + 2*L1*dm*k1*l2*cos(alfam2 + teta2)*u2^3*wL - 4*L1*dm*k2*l2*cos(alfam2 + teta2)*u1*wL^3 + 4*L1*dm*k2*l2*cos(alfam2 + teta2)*u2*wL^3 + 4*L1*dm*k2*l2*cos(alfam2 + teta2)*u2^3*wL - 4*L2*dm*k1*l2*cos(alfam2 + teta2)*u2*wL^3 - 4*L2*dm*k1*l2*cos(alfam2 + teta2)*u2^3*wL + 4*L2*dm*k1*l2*cos(alfam2 + teta2)*u3*wL^3 - 2*L2*dm*k2*l2*cos(alfam2 + teta2)*u2^3*wL - 2*dm*k1*l2*sin(alfam2 + teta2)*u1^2*u2^2*vL - 2*dm*k1*l2*sin(alfam2 + teta2)*u1^2*u3^2*vL - 2*dm*k2*l2*sin(alfam2 + teta2)*u1^2*u2^2*vL - 2*dm*k1*l2*sin(alfam2 + teta2)*u2^2*u3^2*vL - 2*dm*k2*l2*sin(alfam2 + teta2)*u1^2*u3^2*vL - 2*dm*k2*l2*sin(alfam2 + teta2)*u2^2*u3^2*vL - 2*dm*k1*l2*sin(alfam2 + teta2)*u2^2*vL*wL^2 - 2*dm*k2*l2*sin(alfam2 + teta2)*u1^2*vL*wL^2 - 2*dm*k1*l2*sin(alfam2 + teta2)*u3^2*vL*wL^2 - 2*dm*k2*l2*sin(alfam2 + teta2)*u2^2*vL*wL^2 - 2*L1*dm*k1*l2*sin(alfam2 + teta2)*u2^3*vL + 4*L1*dm*k2*l2*sin(alfam2 + teta2)*u1*vL^3 - 4*L1*dm*k2*l2*sin(alfam2 + teta2)*u2*vL^3 - 4*L1*dm*k2*l2*sin(alfam2 + teta2)*u2^3*vL + 4*L2*dm*k1*l2*sin(alfam2 + teta2)*u2*vL^3 + 4*L2*dm*k1*l2*sin(alfam2 + teta2)*u2^3*vL - 4*L2*dm*k1*l2*sin(alfam2 + teta2)*u3*vL^3 + 2*L2*dm*k2*l2*sin(alfam2 + teta2)*u2^3*vL + 4*K1*L1*L2*Mb2*teta1*u1*u2 - 4*K1*L1*L2*Mb2*teta1*u1*u3 - 4*K1*L1*L2*Mb2*teta2*u1*u2 + 4*K1*L1*L2*Mb2*teta1*u2*u3 + 4*K1*L1*L2*Mb2*teta2*u1*u3 - 4*K2*L1*L2*Mb2*teta2*u1*u2 - 4*K1*L1*L2*Mb2*teta2*u2*u3 + 4*K2*L1*L2*Mb2*teta2*u1*u3 + 4*K2*L1*L2*Mb2*teta3*u1*u2 - 4*K2*L1*L2*Mb2*teta2*u2*u3 - 4*K2*L1*L2*Mb2*teta3*u1*u3 + 4*K2*L1*L2*Mb2*teta3*u2*u3 + 2*L2^2*dm*k1*l2*cos(alfam2 + teta2)*u1^2*wL + 2*L1^2*dm*k2*l2*cos(alfam2 + teta2)*u2^2*wL + 2*L2^2*dm*k1*l2*cos(alfam2 + teta2)*u2^2*wL + 2*L1^2*dm*k2*l2*cos(alfam2 + teta2)*u3^2*wL + 2*L1^2*dm*k2*l2*cos(alfam2 + teta2)*vL^2*wL + 2*L2^2*dm*k1*l2*cos(alfam2 + teta2)*vL^2*wL - 2*L2^2*dm*k1*l2*sin(alfam2 + teta2)*u1^2*vL - 2*L1^2*dm*k2*l2*sin(alfam2 + teta2)*u2^2*vL - 2*L2^2*dm*k1*l2*sin(alfam2 + teta2)*u2^2*vL - 2*L1^2*dm*k2*l2*sin(alfam2 + teta2)*u3^2*vL - 2*L1^2*dm*k2*l2*sin(alfam2 + teta2)*vL*wL^2 - 2*L2^2*dm*k1*l2*sin(alfam2 + teta2)*vL*wL^2 - 4*dm*k1*l2*cos(alfam2 + teta2)*u1*u2^3*wL - 4*dm*k2*l2*cos(alfam2 + teta2)*u1*u2*wL^3 - 4*dm*k2*l2*cos(alfam2 + teta2)*u1*u2^3*wL - 4*dm*k1*l2*cos(alfam2 + teta2)*u2*u3*wL^3 - 4*dm*k1*l2*cos(alfam2 + teta2)*u2^3*u3*wL - 4*dm*k2*l2*cos(alfam2 + teta2)*u2^3*u3*wL + 4*dm*k1*l2*sin(alfam2 + teta2)*u1*u2^3*vL + 4*dm*k2*l2*sin(alfam2 + teta2)*u1*u2*vL^3 + 4*dm*k2*l2*sin(alfam2 + teta2)*u1*u2^3*vL + 4*dm*k1*l2*sin(alfam2 + teta2)*u2*u3*vL^3 + 4*dm*k1*l2*sin(alfam2 + teta2)*u2^3*u3*vL + 4*dm*k2*l2*sin(alfam2 + teta2)*u2^3*u3*vL + 4*K1*L1*Mb2*teta1*u1*u2*u3 - 4*K1*L1*Mb2*teta2*u1*u2*u3 - 4*K1*L2*Mb2*teta1*u1*u2*u3 + 4*K1*L2*Mb2*teta2*u1*u2*u3 - 4*K2*L1*Mb2*teta2*u1*u2*u3 + 4*K2*L1*Mb2*teta3*u1*u2*u3 + 4*K2*L2*Mb2*teta2*u1*u2*u3 - 4*K2*L2*Mb2*teta3*u1*u2*u3 - 2*L1*dm*k1*l2*cos(alfam2 + teta2)*u1*u2^2*wL - 2*L1*dm*k1*l2*cos(alfam2 + teta2)*u1*u3^2*wL - 4*L1*dm*k2*l2*cos(alfam2 + teta2)*u1*u2^2*wL + 8*L2*dm*k1*l2*cos(alfam2 + teta2)*u1*u2^2*wL - 4*L2*dm*k1*l2*cos(alfam2 + teta2)*u1^2*u2*wL - 4*L2^2*dm*k1*l2*cos(alfam2 + teta2)*u1*u2*wL + 2*L1*dm*k1*l2*cos(alfam2 + teta2)*u2*u3^2*wL - 4*L1*dm*k1*l2*cos(alfam2 + teta2)*u2^2*u3*wL - 4*L1*dm*k2*l2*cos(alfam2 + teta2)*u1*u3^2*wL + 4*L2*dm*k1*l2*cos(alfam2 + teta2)*u1^2*u3*wL + 4*L2*dm*k2*l2*cos(alfam2 + teta2)*u1*u2^2*wL - 2*L2*dm*k2*l2*cos(alfam2 + teta2)*u1^2*u2*wL + 4*L1*dm*k2*l2*cos(alfam2 + teta2)*u2*u3^2*wL - 8*L1*dm*k2*l2*cos(alfam2 + teta2)*u2^2*u3*wL + 4*L2*dm*k1*l2*cos(alfam2 + teta2)*u2^2*u3*wL + 2*L2*dm*k2*l2*cos(alfam2 + teta2)*u1^2*u3*wL - 4*L1^2*dm*k2*l2*cos(alfam2 + teta2)*u2*u3*wL + 2*L2*dm*k2*l2*cos(alfam2 + teta2)*u2^2*u3*wL - 4*L1*dm*k2*l2*cos(alfam2 + teta2)*u1*vL^2*wL + 4*L1*dm*k2*l2*cos(alfam2 + teta2)*u2*vL^2*wL - 4*L2*dm*k1*l2*cos(alfam2 + teta2)*u2*vL^2*wL + 4*L2*dm*k1*l2*cos(alfam2 + teta2)*u3*vL^2*wL + 2*L1*dm*k1*l2*sin(alfam2 + teta2)*u1*u2^2*vL + 2*L1*dm*k1*l2*sin(alfam2 + teta2)*u1*u3^2*vL + 4*L1*dm*k2*l2*sin(alfam2 + teta2)*u1*u2^2*vL - 8*L2*dm*k1*l2*sin(alfam2 + teta2)*u1*u2^2*vL + 4*L2*dm*k1*l2*sin(alfam2 + teta2)*u1^2*u2*vL + 4*L2^2*dm*k1*l2*sin(alfam2 + teta2)*u1*u2*vL - 2*L1*dm*k1*l2*sin(alfam2 + teta2)*u2*u3^2*vL + 4*L1*dm*k1*l2*sin(alfam2 + teta2)*u2^2*u3*vL + 4*L1*dm*k2*l2*sin(alfam2 + teta2)*u1*u3^2*vL - 4*L2*dm*k1*l2*sin(alfam2 + teta2)*u1^2*u3*vL - 4*L2*dm*k2*l2*sin(alfam2 + teta2)*u1*u2^2*vL + 2*L2*dm*k2*l2*sin(alfam2 + teta2)*u1^2*u2*vL - 4*L1*dm*k2*l2*sin(alfam2 + teta2)*u2*u3^2*vL + 8*L1*dm*k2*l2*sin(alfam2 + teta2)*u2^2*u3*vL - 4*L2*dm*k1*l2*sin(alfam2 + teta2)*u2^2*u3*vL - 2*L2*dm*k2*l2*sin(alfam2 + teta2)*u1^2*u3*vL + 4*L1^2*dm*k2*l2*sin(alfam2 + teta2)*u2*u3*vL - 2*L2*dm*k2*l2*sin(alfam2 + teta2)*u2^2*u3*vL + 4*L1*dm*k2*l2*sin(alfam2 + teta2)*u1*vL*wL^2 - 4*L1*dm*k2*l2*sin(alfam2 + teta2)*u2*vL*wL^2 + 4*L2*dm*k1*l2*sin(alfam2 + teta2)*u2*vL*wL^2 - 4*L2*dm*k1*l2*sin(alfam2 + teta2)*u3*vL*wL^2 - 2*L1*L2^2*dm*k1*l2*cos(alfam2 + teta2)*u1*wL - 4*L1*L2*dm*k1*l2*cos(alfam2 + teta2)*u2^2*wL + 2*L1*L2^2*dm*k1*l2*cos(alfam2 + teta2)*u2*wL - 4*L1*L2*dm*k2*l2*cos(alfam2 + teta2)*u2^2*wL - 2*L1^2*L2*dm*k2*l2*cos(alfam2 + teta2)*u2*wL + 2*L1^2*L2*dm*k2*l2*cos(alfam2 + teta2)*u3*wL + 2*L1*L2^2*dm*k1*l2*sin(alfam2 + teta2)*u1*vL + 4*L1*L2*dm*k1*l2*sin(alfam2 + teta2)*u2^2*vL - 2*L1*L2^2*dm*k1*l2*sin(alfam2 + teta2)*u2*vL + 4*L1*L2*dm*k2*l2*sin(alfam2 + teta2)*u2^2*vL + 2*L1^2*L2*dm*k2*l2*sin(alfam2 + teta2)*u2*vL - 2*L1^2*L2*dm*k2*l2*sin(alfam2 + teta2)*u3*vL - 4*dm*k1*l2*cos(alfam2 + teta2)*u1*u2*u3^2*wL + 8*dm*k1*l2*cos(alfam2 + teta2)*u1*u2^2*u3*wL - 4*dm*k1*l2*cos(alfam2 + teta2)*u1^2*u2*u3*wL - 4*dm*k2*l2*cos(alfam2 + teta2)*u1*u2*u3^2*wL + 8*dm*k2*l2*cos(alfam2 + teta2)*u1*u2^2*u3*wL - 4*dm*k2*l2*cos(alfam2 + teta2)*u1^2*u2*u3*wL - 4*dm*k2*l2*cos(alfam2 + teta2)*u1*u2*vL^2*wL - 4*dm*k1*l2*cos(alfam2 + teta2)*u2*u3*vL^2*wL + 4*dm*k1*l2*sin(alfam2 + teta2)*u1*u2*u3^2*vL - 8*dm*k1*l2*sin(alfam2 + teta2)*u1*u2^2*u3*vL + 4*dm*k1*l2*sin(alfam2 + teta2)*u1^2*u2*u3*vL + 4*dm*k2*l2*sin(alfam2 + teta2)*u1*u2*u3^2*vL - 8*dm*k2*l2*sin(alfam2 + teta2)*u1*u2^2*u3*vL + 4*dm*k2*l2*sin(alfam2 + teta2)*u1^2*u2*u3*vL + 4*dm*k2*l2*sin(alfam2 + teta2)*u1*u2*vL*wL^2 + 4*dm*k1*l2*sin(alfam2 + teta2)*u2*u3*vL*wL^2 - 4*L1*L2*dm*k1*l2*sin(alfam2 + teta2)*u1*u2*vL + 4*L1*L2*dm*k1*l2*sin(alfam2 + teta2)*u1*u3*vL - 4*L1*L2*dm*k2*l2*sin(alfam2 + teta2)*u1*u2*vL - 4*L1*L2*dm*k1*l2*sin(alfam2 + teta2)*u2*u3*vL + 4*L1*L2*dm*k2*l2*sin(alfam2 + teta2)*u1*u3*vL - 4*L1*L2*dm*k2*l2*sin(alfam2 + teta2)*u2*u3*vL + 4*L1*dm*k1*l2*cos(alfam2 + teta2)*u1*u2*u3*wL + 8*L1*dm*k2*l2*cos(alfam2 + teta2)*u1*u2*u3*wL - 8*L2*dm*k1*l2*cos(alfam2 + teta2)*u1*u2*u3*wL - 4*L2*dm*k2*l2*cos(alfam2 + teta2)*u1*u2*u3*wL - 4*L1*dm*k1*l2*sin(alfam2 + teta2)*u1*u2*u3*vL - 8*L1*dm*k2*l2*sin(alfam2 + teta2)*u1*u2*u3*vL + 8*L2*dm*k1*l2*sin(alfam2 + teta2)*u1*u2*u3*vL + 4*L2*dm*k2*l2*sin(alfam2 + teta2)*u1*u2*u3*vL + 4*L1*L2*dm*k1*l2*cos(alfam2 + teta2)*u1*u2*wL - 4*L1*L2*dm*k1*l2*cos(alfam2 + teta2)*u1*u3*wL + 4*L1*L2*dm*k2*l2*cos(alfam2 + teta2)*u1*u2*wL + 4*L1*L2*dm*k1*l2*cos(alfam2 + teta2)*u2*u3*wL - 4*L1*L2*dm*k2*l2*cos(alfam2 + teta2)*u1*u3*wL + 4*L1*L2*dm*k2*l2*cos(alfam2 + teta2)*u2*u3*wL))/((dm^2*l2^2 - Ib2*Mb2)*(L1 - u1 + u2)^2*(L2 - u2 + u3)^3);
    -(u3^3*dNrdt - u2^3*dNrdt + L2^3*dNrdt - 3*Nr*u2^2*up2 + 3*Nr*u2^2*up3 - 3*Nr*u3^2*up2 - 3*u2*u3^2*dNrdt + 3*u2^2*u3*dNrdt + 3*Nr*u3^2*up3 + L2^3*b3*upp3 - L2^3*k2*up2 + L2^3*k2*up3 + 3*L2*u2^2*dNrdt - 3*L2^2*Nr*up2 - 3*L2^2*u2*dNrdt + 3*L2*u3^2*dNrdt + 3*L2^2*Nr*up3 + 3*L2^2*u3*dNrdt - b3*u2^3*upp3 + b3*u3^3*upp3 + 4*k2*u2^3*up2 - 4*k2*u2^3*up3 - 4*k2*u3^3*up2 + 4*k2*u3^3*up3 - 4*k2*vL^3*vpL - 4*k2*wL^3*wpL + 3*L2*b3*u2^2*upp3 - 3*L2^2*b3*u2*upp3 - 3*L2^2*b3*up3*up2 + 3*L2*b3*u3^2*upp3 + 3*L2^2*b3*u3*upp3 + 3*L2^2*b3*up3*up3 + 6*L2*Nr*u2*up2 - 6*L2*Nr*u2*up3 - 6*L2*Nr*u3*up2 - 6*L2*u2*u3*dNrdt + 6*L2*Nr*u3*up3 - 9*L2*k2*u2^2*up2 + 6*L2^2*k2*u2*up2 + 9*L2*k2*u2^2*up3 - 9*L2*k2*u3^2*up2 - 6*L2^2*k2*u2*up3 - 6*L2^2*k2*u3*up2 + 9*L2*k2*u3^2*up3 + 6*L2^2*k2*u3*up3 - L2*k2*vL^2*up2 + L2*k2*vL^2*up3 - L2*k2*wL^2*up2 + L2*k2*wL^2*up3 + 2*L2^2*k2*vL*vpL + 2*L2^2*k2*wL*wpL - 3*b3*u2^2*up3*up2 - 3*b3*u2*u3^2*upp3 + 3*b3*u2^2*u3*upp3 + 3*b3*u2^2*up3*up3 - 3*b3*u3^2*up3*up2 + 3*b3*u3^2*up3*up3 + 6*Nr*u2*u3*up2 - 6*Nr*u2*u3*up3 + 12*k2*u2*u3^2*up2 - 12*k2*u2^2*u3*up2 - 12*k2*u2*u3^2*up3 + 12*k2*u2^2*u3*up3 - 4*k2*vL*wL^2*vpL - 4*k2*vL^2*wL*wpL + 6*b3*u2*u3*up3*up2 - 6*b3*u2*u3*up3*up3 + 6*L2*b3*u2*up3*up2 - 6*L2*b3*u2*u3*upp3 - 6*L2*b3*u2*up3*up3 - 6*L2*b3*u3*up3*up2 + 6*L2*b3*u3*up3*up3 + 18*L2*k2*u2*u3*up2 - 18*L2*k2*u2*u3*up3 - 2*L2*k2*u2*vL*vpL + 2*L2*k2*u3*vL*vpL - 2*L2*k2*u2*wL*wpL + 2*L2*k2*u3*wL*wpL)/(M1*(L2 - u2 + u3)^3) - (3*(up2 - up3)*(k2*u2^4 + k2*u3^4 - k2*vL^4 - k2*wL^4 - Nr*u2^3 + Nr*u3^3 + L2^3*Nr - 3*Nr*u2*u3^2 + 3*Nr*u2^2*u3 + L2^3*b3*up3 + 6*k2*u2^2*u3^2 - 3*L2*k2*u2^3 - L2^3*k2*u2 + 3*L2*k2*u3^3 + L2^3*k2*u3 - 2*k2*vL^2*wL^2 + 3*L2*Nr*u2^2 - 3*L2^2*Nr*u2 + 3*L2*Nr*u3^2 + 3*L2^2*Nr*u3 + 3*L2^2*k2*u2^2 + 3*L2^2*k2*u3^2 + L2^2*k2*vL^2 + L2^2*k2*wL^2 - b3*u2^3*up3 + b3*u3^3*up3 - 4*k2*u2*u3^3 - 4*k2*u2^3*u3 + 3*L2*b3*u2^2*up3 - 3*L2^2*b3*u2*up3 + 3*L2*b3*u3^2*up3 + 3*L2^2*b3*u3*up3 - 6*L2*Nr*u2*u3 - 9*L2*k2*u2*u3^2 + 9*L2*k2*u2^2*u3 - 6*L2^2*k2*u2*u3 - L2*k2*u2*vL^2 + L2*k2*u3*vL^2 - L2*k2*u2*wL^2 + L2*k2*u3*wL^2 - 3*b3*u2*u3^2*up3 + 3*b3*u2^2*u3*up3 - 6*L2*b3*u2*u3*up3))/(M1*(L2 - u2 + u3)^4);
    -(K2*tetap3 - K2*tetap2 + c3*tetapp3 + dTatdt)/I1];
 





Zp2a = [fuppa; fup3a2] + [fuppbTx; fup3abTx] + [fuppbU; fup3abU];
Zp2a2 = [fuppa; fup3a2];
Zp2abTx = [fuppbTx; fup3abTx];
Zp2abFl = [fuppbFl; fup3abFl];

ad = 1;
 
 
 
 
 
 
 